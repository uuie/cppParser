{
	"scope": "source.lua - keyword.control.lua - constant.language.lua - string",

	"completions":
		[
		"in", "else", "return", "false", "true", "break", "or", "and",
{ "trigger": "CCRect\t", "contents": "CCRect"},
{ "trigger": "CCRect_call\tCCRect:call()", "contents": "CCRect:call()"},
{ "trigger": ":call\tCCRect:call()", "contents": "call()"},
{ "trigger": "CCRect_getMaxY\tCCRect:getMaxY()", "contents": "CCRect:getMaxY()"},
{ "trigger": ":getMaxY\tCCRect:getMaxY()", "contents": "getMaxY()"},
{ "trigger": "CCRect_new\tCCRect:new()", "contents": "CCRect:new()"},
{ "trigger": ":new\tCCRect:new()", "contents": "new()"},
{ "trigger": "CCRect_getMaxX\tCCRect:getMaxX()", "contents": "CCRect:getMaxX()"},
{ "trigger": ":getMaxX\tCCRect:getMaxX()", "contents": "getMaxX()"},
{ "trigger": "CCRect_equals\tCCRect:equals(_const_CCRect)", "contents": "CCRect:equals(_const_CCRect)"},
{ "trigger": ":equals\tCCRect:equals(_const_CCRect)", "contents": "equals(_const_CCRect)"},
{ "trigger": "CCRect_new_local\tCCRect:new_local()", "contents": "CCRect:new_local()"},
{ "trigger": ":new_local\tCCRect:new_local()", "contents": "new_local()"},
{ "trigger": "CCRect_getMinX\tCCRect:getMinX()", "contents": "CCRect:getMinX()"},
{ "trigger": ":getMinX\tCCRect:getMinX()", "contents": "getMinX()"},
{ "trigger": "CCRect_getMinY\tCCRect:getMinY()", "contents": "CCRect:getMinY()"},
{ "trigger": ":getMinY\tCCRect:getMinY()", "contents": "getMinY()"},
{ "trigger": "CCRect_containsPoint\tCCRect:containsPoint(_const_CCPoint)", "contents": "CCRect:containsPoint(_const_CCPoint)"},
{ "trigger": ":containsPoint\tCCRect:containsPoint(_const_CCPoint)", "contents": "containsPoint(_const_CCPoint)"},
{ "trigger": "CCRect_intersectsRect\tCCRect:intersectsRect(_const_CCRect)", "contents": "CCRect:intersectsRect(_const_CCRect)"},
{ "trigger": ":intersectsRect\tCCRect:intersectsRect(_const_CCRect)", "contents": "intersectsRect(_const_CCRect)"},
{ "trigger": "CCRect_getMidY\tCCRect:getMidY()", "contents": "CCRect:getMidY()"},
{ "trigger": ":getMidY\tCCRect:getMidY()", "contents": "getMidY()"},
{ "trigger": "CCRect_getMidX\tCCRect:getMidX()", "contents": "CCRect:getMidX()"},
{ "trigger": ":getMidX\tCCRect:getMidX()", "contents": "getMidX()"},
{ "trigger": "\t", "contents": ""},
{ "trigger": "ccpUnrotate\tccpUnrotate(_const_CCPoint,_const_CCPoint)", "contents": "ccpUnrotate(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpNeg\tccpNeg(_const_CCPoint)", "contents": "ccpNeg(_const_CCPoint)"},
{ "trigger": "ccpCross\tccpCross(_const_CCPoint,_const_CCPoint)", "contents": "ccpCross(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpFuzzyEqual\tccpFuzzyEqual(_const_CCPoint,_const_CCPoint,_num)", "contents": "ccpFuzzyEqual(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": "ccpToAngle\tccpToAngle(_const_CCPoint)", "contents": "ccpToAngle(_const_CCPoint)"},
{ "trigger": "const char* nam\tconst char* nam()", "contents": "const char* nam()"},
{ "trigger": "ccpPerp\tccpPerp(_const_CCPoint)", "contents": "ccpPerp(_const_CCPoint)"},
{ "trigger": "ccp\tccp(_num,_num)", "contents": "ccp(_num,_num)"},
{ "trigger": "CCRectMake\tCCRectMake(_num,_num,_num,_num)", "contents": "CCRectMake(_num,_num,_num,_num)"},
{ "trigger": "ccpFromSize\tccpFromSize(_const_CCSize)", "contents": "ccpFromSize(_const_CCSize)"},
{ "trigger": "ccpIntersectPoint\tccpIntersectPoint(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint)", "contents": "ccpIntersectPoint(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpCompMult\tccpCompMult(_const_CCPoint,_const_CCPoint)", "contents": "ccpCompMult(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpDistance\tccpDistance(_const_CCPoint,_const_CCPoint)", "contents": "ccpDistance(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "CCSizeMake\tCCSizeMake(_num,_num)", "contents": "CCSizeMake(_num,_num)"},
{ "trigger": "ccc4\tccc4(_num,_num,_num,_num)", "contents": "ccc4(_num,_num,_num,_num)"},
{ "trigger": "CCMessageBox\tCCMessageBox(_str,_str)", "contents": "CCMessageBox(_str,_str)"},
{ "trigger": "ccc3\tccc3(_num,_num,_num)", "contents": "ccc3(_num,_num,_num)"},
{ "trigger": "ccpSegmentIntersect\tccpSegmentIntersect(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint)", "contents": "ccpSegmentIntersect(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint)"},
{ "trigger": "CCLuaLog\tCCLuaLog(_str)", "contents": "CCLuaLog(_str)"},
{ "trigger": "ccc4f\tccc4f(_num,_num,_num,_num)", "contents": "ccc4f(_num,_num,_num,_num)"},
{ "trigger": "ccpMult\tccpMult(_const_CCPoint,_num)", "contents": "ccpMult(_const_CCPoint,_num)"},
{ "trigger": "ccpDistanceSQ\tccpDistanceSQ(_const_CCPoint,_const_CCPoint)", "contents": "ccpDistanceSQ(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpAdd\tccpAdd(_const_CCPoint,_const_CCPoint)", "contents": "ccpAdd(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpLineIntersect\tccpLineIntersect(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint,_num,_num)", "contents": "ccpLineIntersect(_const_CCPoint,_const_CCPoint,_const_CCPoint,_const_CCPoint,_num,_num)"},
{ "trigger": "CCPointMake\tCCPointMake(_num,_num)", "contents": "CCPointMake(_num,_num)"},
{ "trigger": "ccpMidpoint\tccpMidpoint(_const_CCPoint,_const_CCPoint)", "contents": "ccpMidpoint(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpNormalize\tccpNormalize(_const_CCPoint)", "contents": "ccpNormalize(_const_CCPoint)"},
{ "trigger": "ccpRPerp\tccpRPerp(_const_CCPoint)", "contents": "ccpRPerp(_const_CCPoint)"},
{ "trigger": "ccpProject\tccpProject(_const_CCPoint,_const_CCPoint)", "contents": "ccpProject(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpSub\tccpSub(_const_CCPoint,_const_CCPoint)", "contents": "ccpSub(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccc4FFromccc3B\tccc4FFromccc3B(_ccColor3B)", "contents": "ccc4FFromccc3B(_ccColor3B)"},
{ "trigger": "ccpForAngle\tccpForAngle(_num)", "contents": "ccpForAngle(_num)"},
{ "trigger": "ccpDot\tccpDot(_const_CCPoint,_const_CCPoint)", "contents": "ccpDot(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpRotate\tccpRotate(_const_CCPoint,_const_CCPoint)", "contents": "ccpRotate(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpRotateByAngle\tccpRotateByAngle(_const_CCPoint,_const_CCPoint,_num)", "contents": "ccpRotateByAngle(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": "clampf\tclampf(_num,_num,_num)", "contents": "clampf(_num,_num,_num)"},
{ "trigger": "ccc4FFromccc4B\tccc4FFromccc4B(_ccColor4B)", "contents": "ccc4FFromccc4B(_ccColor4B)"},
{ "trigger": "ccpLengthSQ\tccpLengthSQ(_const_CCPoint)", "contents": "ccpLengthSQ(_const_CCPoint)"},
{ "trigger": "ccpLength\tccpLength(_const_CCPoint)", "contents": "ccpLength(_const_CCPoint)"},
{ "trigger": "ccc4FEqual\tccc4FEqual(_ccColor4F,_ccColor4F)", "contents": "ccc4FEqual(_ccColor4F,_ccColor4F)"},
{ "trigger": "ccpLerp\tccpLerp(_const_CCPoint,_const_CCPoint,_num)", "contents": "ccpLerp(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": "ccpAngle\tccpAngle(_const_CCPoint,_const_CCPoint)", "contents": "ccpAngle(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpAngleSigned\tccpAngleSigned(_const_CCPoint,_const_CCPoint)", "contents": "ccpAngleSigned(_const_CCPoint,_const_CCPoint)"},
{ "trigger": "ccpClamp\tccpClamp(_const_CCPoint,_const_CCPoint,_const_CCPoint)", "contents": "ccpClamp(_const_CCPoint,_const_CCPoint,_const_CCPoint)"},
{ "trigger": "CCTintTo\t", "contents": "CCTintTo"},
{ "trigger": "CCTintTo_create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "CCTintTo:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "SimpleAudioEngine\t", "contents": "SimpleAudioEngine"},
{ "trigger": "SimpleAudioEngine_pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "SimpleAudioEngine:pauseBackgroundMusic()"},
{ "trigger": ":pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "pauseBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "SimpleAudioEngine:willPlayBackgroundMusic()"},
{ "trigger": ":willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "willPlayBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "SimpleAudioEngine:getEffectsVolume()"},
{ "trigger": ":getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "getEffectsVolume()"},
{ "trigger": "SimpleAudioEngine_setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "SimpleAudioEngine:setBackgroundMusicVolume(_num)"},
{ "trigger": ":setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "setBackgroundMusicVolume(_num)"},
{ "trigger": "SimpleAudioEngine_stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "SimpleAudioEngine:stopEffect(_num)"},
{ "trigger": ":stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "stopEffect(_num)"},
{ "trigger": "SimpleAudioEngine_preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "SimpleAudioEngine:preloadEffect(_str)"},
{ "trigger": ":preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "preloadEffect(_str)"},
{ "trigger": "SimpleAudioEngine_stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "SimpleAudioEngine:stopBackgroundMusic(_boo)"},
{ "trigger": ":stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "stopBackgroundMusic(_boo)"},
{ "trigger": "SimpleAudioEngine_getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "SimpleAudioEngine:getBackgroundMusicVolume()"},
{ "trigger": ":getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "getBackgroundMusicVolume()"},
{ "trigger": "SimpleAudioEngine_setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "SimpleAudioEngine:setEffectsVolume(_num)"},
{ "trigger": ":setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "setEffectsVolume(_num)"},
{ "trigger": "SimpleAudioEngine_preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "SimpleAudioEngine:preloadBackgroundMusic(_str)"},
{ "trigger": ":preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "preloadBackgroundMusic(_str)"},
{ "trigger": "SimpleAudioEngine_resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "SimpleAudioEngine:resumeBackgroundMusic()"},
{ "trigger": ":resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "resumeBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "SimpleAudioEngine:rewindBackgroundMusic()"},
{ "trigger": ":rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "rewindBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "SimpleAudioEngine:sharedEngine()"},
{ "trigger": ":sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "sharedEngine()"},
{ "trigger": "SimpleAudioEngine_isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "SimpleAudioEngine:isBackgroundMusicPlaying()"},
{ "trigger": ":isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "isBackgroundMusicPlaying()"},
{ "trigger": "SimpleAudioEngine_playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "SimpleAudioEngine:playBackgroundMusic(_str,_boo)"},
{ "trigger": ":playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "playBackgroundMusic(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "SimpleAudioEngine:playEffect(_str,_boo)"},
{ "trigger": ":playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "playEffect(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "SimpleAudioEngine:unloadEffect(_str)"},
{ "trigger": ":unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "unloadEffect(_str)"},
{ "trigger": "CCEaseExponentialInOut\t", "contents": "CCEaseExponentialInOut"},
{ "trigger": "CCEaseExponentialInOut_create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "CCEaseExponentialInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseRateAction\t", "contents": "CCEaseRateAction"},
{ "trigger": "CCEaseRateAction_create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "CCEaseRateAction:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCParticleSun\t", "contents": "CCParticleSun"},
{ "trigger": "CCParticleSun_create\tCCParticleSun:create()", "contents": "CCParticleSun:create()"},
{ "trigger": ":create\tCCParticleSun:create()", "contents": "create()"},
{ "trigger": "ccColor4B\t", "contents": "ccColor4B"},
{ "trigger": "ccColor4B_call\tccColor4B:call()", "contents": "ccColor4B:call()"},
{ "trigger": ":call\tccColor4B:call()", "contents": "call()"},
{ "trigger": "ccColor4B_new\tccColor4B:new()", "contents": "ccColor4B:new()"},
{ "trigger": ":new\tccColor4B:new()", "contents": "new()"},
{ "trigger": "ccColor4B_new_local\tccColor4B:new_local()", "contents": "ccColor4B:new_local()"},
{ "trigger": ":new_local\tccColor4B:new_local()", "contents": "new_local()"},
{ "trigger": "CCHTTPRequest\t", "contents": "CCHTTPRequest"},
{ "trigger": "CCHTTPRequest_getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "CCHTTPRequest:getErrorCode()"},
{ "trigger": ":getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "getErrorCode()"},
{ "trigger": "CCHTTPRequest_getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "CCHTTPRequest:getResponseDataLua()"},
{ "trigger": ":getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "getResponseDataLua()"},
{ "trigger": "CCHTTPRequest_getState\tCCHTTPRequest:getState()", "contents": "CCHTTPRequest:getState()"},
{ "trigger": ":getState\tCCHTTPRequest:getState()", "contents": "getState()"},
{ "trigger": "CCHTTPRequest_setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "CCHTTPRequest:setAcceptEncoding(_num)"},
{ "trigger": ":setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "setAcceptEncoding(_num)"},
{ "trigger": "CCHTTPRequest_cancel\tCCHTTPRequest:cancel()", "contents": "CCHTTPRequest:cancel()"},
{ "trigger": ":cancel\tCCHTTPRequest:cancel()", "contents": "cancel()"},
{ "trigger": "CCHTTPRequest_getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "CCHTTPRequest:getResponseDataLength()"},
{ "trigger": ":getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "getResponseDataLength()"},
{ "trigger": "CCHTTPRequest_setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "CCHTTPRequest:setRequestUrl(_str)"},
{ "trigger": ":setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "setRequestUrl(_str)"},
{ "trigger": "CCHTTPRequest_saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "CCHTTPRequest:saveResponseData(_str)"},
{ "trigger": ":saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "saveResponseData(_str)"},
{ "trigger": "CCHTTPRequest_createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "CCHTTPRequest:createWithUrlLua(_listener,_str,_num)"},
{ "trigger": ":createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "createWithUrlLua(_listener,_str,_num)"},
{ "trigger": "CCHTTPRequest_getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "CCHTTPRequest:getErrorMessage()"},
{ "trigger": ":getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "getErrorMessage()"},
{ "trigger": "CCHTTPRequest_getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "CCHTTPRequest:getResponseStatusCode()"},
{ "trigger": ":getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "getResponseStatusCode()"},
{ "trigger": "CCHTTPRequest_addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "CCHTTPRequest:addRequestHeader(_str)"},
{ "trigger": ":addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "addRequestHeader(_str)"},
{ "trigger": "CCHTTPRequest_start\tCCHTTPRequest:start()", "contents": "CCHTTPRequest:start()"},
{ "trigger": ":start\tCCHTTPRequest:start()", "contents": "start()"},
{ "trigger": "CCHTTPRequest_addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "CCHTTPRequest:addPOSTValue(_str,_str)"},
{ "trigger": ":addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "addPOSTValue(_str,_str)"},
{ "trigger": "CCHTTPRequest_setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "CCHTTPRequest:setTimeout(_num)"},
{ "trigger": ":setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "setTimeout(_num)"},
{ "trigger": "CCHTTPRequest_setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "CCHTTPRequest:setPOSTData(_str)"},
{ "trigger": ":setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "setPOSTData(_str)"},
{ "trigger": "CCHTTPRequest_getResponseString\tCCHTTPRequest:getResponseString()", "contents": "CCHTTPRequest:getResponseString()"},
{ "trigger": ":getResponseString\tCCHTTPRequest:getResponseString()", "contents": "getResponseString()"},
{ "trigger": "CCEaseSineIn\t", "contents": "CCEaseSineIn"},
{ "trigger": "CCEaseSineIn_create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "CCEaseSineIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleExplosion\t", "contents": "CCParticleExplosion"},
{ "trigger": "CCParticleExplosion_create\tCCParticleExplosion:create()", "contents": "CCParticleExplosion:create()"},
{ "trigger": ":create\tCCParticleExplosion:create()", "contents": "create()"},
{ "trigger": "ccColor4F\t", "contents": "ccColor4F"},
{ "trigger": "ccColor4F_call\tccColor4F:call()", "contents": "ccColor4F:call()"},
{ "trigger": ":call\tccColor4F:call()", "contents": "call()"},
{ "trigger": "ccColor4F_new\tccColor4F:new()", "contents": "ccColor4F:new()"},
{ "trigger": ":new\tccColor4F:new()", "contents": "new()"},
{ "trigger": "ccColor4F_new_local\tccColor4F:new_local()", "contents": "ccColor4F:new_local()"},
{ "trigger": ":new_local\tccColor4F:new_local()", "contents": "new_local()"},
{ "trigger": "CCJumpBy\t", "contents": "CCJumpBy"},
{ "trigger": "CCJumpBy_create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpBy:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCEditBox\t", "contents": "CCEditBox"},
{ "trigger": "CCEditBox_registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "CCEditBox:registerScriptEditBoxHandler(_listener)"},
{ "trigger": ":registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "registerScriptEditBoxHandler(_listener)"},
{ "trigger": "CCEditBox_getMaxLength\tCCEditBox:getMaxLength()", "contents": "CCEditBox:getMaxLength()"},
{ "trigger": ":getMaxLength\tCCEditBox:getMaxLength()", "contents": "getMaxLength()"},
{ "trigger": "CCEditBox_setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "CCEditBox:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCEditBox_setText\tCCEditBox:setText(_str)", "contents": "CCEditBox:setText(_str)"},
{ "trigger": ":setText\tCCEditBox:setText(_str)", "contents": "setText(_str)"},
{ "trigger": "CCEditBox_create\tCCEditBox:create(_const_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "CCEditBox:create(_const_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": ":create\tCCEditBox:create(_const_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "create(_const_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": "CCEditBox_setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "CCEditBox:setMaxLength(_num)"},
{ "trigger": ":setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "setMaxLength(_num)"},
{ "trigger": "CCEditBox_setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "CCEditBox:setInputFlag(_num)"},
{ "trigger": ":setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "setInputFlag(_num)"},
{ "trigger": "CCEditBox_unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "CCEditBox:unregisterScriptEditBoxHandler()"},
{ "trigger": ":unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "unregisterScriptEditBoxHandler()"},
{ "trigger": "CCEditBox_setReturnType\tCCEditBox:setReturnType(_num)", "contents": "CCEditBox:setReturnType(_num)"},
{ "trigger": ":setReturnType\tCCEditBox:setReturnType(_num)", "contents": "setReturnType(_num)"},
{ "trigger": "CCEditBox_getText\tCCEditBox:getText()", "contents": "CCEditBox:getText()"},
{ "trigger": ":getText\tCCEditBox:getText()", "contents": "getText()"},
{ "trigger": "CCEditBox_setInputMode\tCCEditBox:setInputMode(_num)", "contents": "CCEditBox:setInputMode(_num)"},
{ "trigger": ":setInputMode\tCCEditBox:setInputMode(_num)", "contents": "setInputMode(_num)"},
{ "trigger": "CCEditBox_setFontColor\tCCEditBox:setFontColor(_const_ccColor3B)", "contents": "CCEditBox:setFontColor(_const_ccColor3B)"},
{ "trigger": ":setFontColor\tCCEditBox:setFontColor(_const_ccColor3B)", "contents": "setFontColor(_const_ccColor3B)"},
{ "trigger": "CCEditBox_setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_const_ccColor3B)", "contents": "CCEditBox:setPlaceholderFontColor(_const_ccColor3B)"},
{ "trigger": ":setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_const_ccColor3B)", "contents": "setPlaceholderFontColor(_const_ccColor3B)"},
{ "trigger": "CCEditBox_getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "CCEditBox:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCFileUtils\t", "contents": "CCFileUtils"},
{ "trigger": "CCFileUtils_setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "CCFileUtils:setSearchRootPath(_str)"},
{ "trigger": ":setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "setSearchRootPath(_str)"},
{ "trigger": "CCFileUtils_fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "CCFileUtils:fullPathFromRelativeFile(_str,_str)"},
{ "trigger": ":fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "fullPathFromRelativeFile(_str,_str)"},
{ "trigger": "CCFileUtils_setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "CCFileUtils:setPopupNotify(_boo)"},
{ "trigger": ":setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "setPopupNotify(_boo)"},
{ "trigger": "CCFileUtils_sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "CCFileUtils:sharedFileUtils()"},
{ "trigger": ":sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "sharedFileUtils()"},
{ "trigger": "CCFileUtils_purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "CCFileUtils:purgeCachedEntries()"},
{ "trigger": ":purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "purgeCachedEntries()"},
{ "trigger": "CCFileUtils_addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "CCFileUtils:addSearchPath(_str)"},
{ "trigger": ":addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "addSearchPath(_str)"},
{ "trigger": "CCFileUtils_loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "CCFileUtils:loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": ":loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": "CCFileUtils_getWriteablePath\tCCFileUtils:getWriteablePath()", "contents": "CCFileUtils:getWriteablePath()"},
{ "trigger": ":getWriteablePath\tCCFileUtils:getWriteablePath()", "contents": "getWriteablePath()"},
{ "trigger": "CCFileUtils_purgeFileUtils\tCCFileUtils:purgeFileUtils()", "contents": "CCFileUtils:purgeFileUtils()"},
{ "trigger": ":purgeFileUtils\tCCFileUtils:purgeFileUtils()", "contents": "purgeFileUtils()"},
{ "trigger": "CCFileUtils_isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "CCFileUtils:isPopupNotify()"},
{ "trigger": ":isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "isPopupNotify()"},
{ "trigger": "CCFileUtils_addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "CCFileUtils:addSearchResolutionsOrder(_str)"},
{ "trigger": ":addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "addSearchResolutionsOrder(_str)"},
{ "trigger": "CCFileUtils_fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "CCFileUtils:fullPathForFilename(_str)"},
{ "trigger": ":fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "fullPathForFilename(_str)"},
{ "trigger": "CCLabelAtlas\t", "contents": "CCLabelAtlas"},
{ "trigger": "CCLabelAtlas_setTexture\tCCLabelAtlas:setTexture(_CCTexture2D)", "contents": "CCLabelAtlas:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCLabelAtlas:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCLabelAtlas_updateAtlasValues\tCCLabelAtlas:updateAtlasValues()", "contents": "CCLabelAtlas:updateAtlasValues()"},
{ "trigger": ":updateAtlasValues\tCCLabelAtlas:updateAtlasValues()", "contents": "updateAtlasValues()"},
{ "trigger": "CCLabelAtlas_setString\tCCLabelAtlas:setString(_str)", "contents": "CCLabelAtlas:setString(_str)"},
{ "trigger": ":setString\tCCLabelAtlas:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelAtlas_getTexture\tCCLabelAtlas:getTexture()", "contents": "CCLabelAtlas:getTexture()"},
{ "trigger": ":getTexture\tCCLabelAtlas:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCLabelAtlas_getString\tCCLabelAtlas:getString()", "contents": "CCLabelAtlas:getString()"},
{ "trigger": ":getString\tCCLabelAtlas:getString()", "contents": "getString()"},
{ "trigger": "CCLabelAtlas_create\tCCLabelAtlas:create(_str,_str)", "contents": "CCLabelAtlas:create(_str,_str)"},
{ "trigger": ":create\tCCLabelAtlas:create(_str,_str)", "contents": "create(_str,_str)"},
{ "trigger": "CCPlace\t", "contents": "CCPlace"},
{ "trigger": "CCPlace_create\tCCPlace:create(_CCPoint)", "contents": "CCPlace:create(_CCPoint)"},
{ "trigger": ":create\tCCPlace:create(_CCPoint)", "contents": "create(_CCPoint)"},
{ "trigger": "CCShuffleTiles\t", "contents": "CCShuffleTiles"},
{ "trigger": "CCShuffleTiles_shuffle\tCCShuffleTiles:shuffle(_num,_num)", "contents": "CCShuffleTiles:shuffle(_num,_num)"},
{ "trigger": ":shuffle\tCCShuffleTiles:shuffle(_num,_num)", "contents": "shuffle(_num,_num)"},
{ "trigger": "CCShuffleTiles_getDelta\tCCShuffleTiles:getDelta(_CCSize)", "contents": "CCShuffleTiles:getDelta(_CCSize)"},
{ "trigger": ":getDelta\tCCShuffleTiles:getDelta(_CCSize)", "contents": "getDelta(_CCSize)"},
{ "trigger": "CCShuffleTiles_create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "CCShuffleTiles:create(_num,_CCSize,_num)"},
{ "trigger": ":create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "create(_num,_CCSize,_num)"},
{ "trigger": "CCMenuItem\t", "contents": "CCMenuItem"},
{ "trigger": "CCMenuItem_activate\tCCMenuItem:activate()", "contents": "CCMenuItem:activate()"},
{ "trigger": ":activate\tCCMenuItem:activate()", "contents": "activate()"},
{ "trigger": "CCMenuItem_selected\tCCMenuItem:selected()", "contents": "CCMenuItem:selected()"},
{ "trigger": ":selected\tCCMenuItem:selected()", "contents": "selected()"},
{ "trigger": "CCMenuItem_isSelected\tCCMenuItem:isSelected()", "contents": "CCMenuItem:isSelected()"},
{ "trigger": ":isSelected\tCCMenuItem:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCMenuItem_setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "CCMenuItem:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenuItem_unselected\tCCMenuItem:unselected()", "contents": "CCMenuItem:unselected()"},
{ "trigger": ":unselected\tCCMenuItem:unselected()", "contents": "unselected()"},
{ "trigger": "CCMenuItem_registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "CCMenuItem:registerScriptTapHandler(_listener)"},
{ "trigger": ":registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "registerScriptTapHandler(_listener)"},
{ "trigger": "CCMenuItem_rect\tCCMenuItem:rect()", "contents": "CCMenuItem:rect()"},
{ "trigger": ":rect\tCCMenuItem:rect()", "contents": "rect()"},
{ "trigger": "CCMenuItem_isEnabled\tCCMenuItem:isEnabled()", "contents": "CCMenuItem:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenuItem:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenuItem_unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "CCMenuItem:unregisterScriptTapHandler()"},
{ "trigger": ":unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "unregisterScriptTapHandler()"},
{ "trigger": "CCEaseElasticIn\t", "contents": "CCEaseElasticIn"},
{ "trigger": "CCEaseElasticIn_create\tCCEaseElasticIn:create(_CCActionInterval,_num)", "contents": "CCEaseElasticIn:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseElasticIn:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCTransitionZoomFlipY\t", "contents": "CCTransitionZoomFlipY"},
{ "trigger": "CCTransitionZoomFlipY_create\tCCTransitionZoomFlipY:create(_num,_CCScene,_num)", "contents": "CCTransitionZoomFlipY:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionZoomFlipY:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCTransitionZoomFlipX\t", "contents": "CCTransitionZoomFlipX"},
{ "trigger": "CCTransitionZoomFlipX_create\tCCTransitionZoomFlipX:create(_num,_CCScene,_num)", "contents": "CCTransitionZoomFlipX:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionZoomFlipX:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCFadeTo\t", "contents": "CCFadeTo"},
{ "trigger": "CCFadeTo_create\tCCFadeTo:create(_num,_num)", "contents": "CCFadeTo:create(_num,_num)"},
{ "trigger": ":create\tCCFadeTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCScene\t", "contents": "CCScene"},
{ "trigger": "CCScene_create\tCCScene:create()", "contents": "CCScene:create()"},
{ "trigger": ":create\tCCScene:create()", "contents": "create()"},
{ "trigger": "CCEaseBackIn\t", "contents": "CCEaseBackIn"},
{ "trigger": "CCEaseBackIn_create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "CCEaseBackIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "ccColor3B\t", "contents": "ccColor3B"},
{ "trigger": "ccColor3B_call\tccColor3B:call()", "contents": "ccColor3B:call()"},
{ "trigger": ":call\tccColor3B:call()", "contents": "call()"},
{ "trigger": "ccColor3B_new\tccColor3B:new()", "contents": "ccColor3B:new()"},
{ "trigger": ":new\tccColor3B:new()", "contents": "new()"},
{ "trigger": "ccColor3B_new_local\tccColor3B:new_local()", "contents": "ccColor3B:new_local()"},
{ "trigger": ":new_local\tccColor3B:new_local()", "contents": "new_local()"},
{ "trigger": "CCTransitionSlideInR\t", "contents": "CCTransitionSlideInR"},
{ "trigger": "CCTransitionSlideInR_create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "CCTransitionSlideInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionSlideInT\t", "contents": "CCTransitionSlideInT"},
{ "trigger": "CCTransitionSlideInT_create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "CCTransitionSlideInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDeccelAmplitude\t", "contents": "CCDeccelAmplitude"},
{ "trigger": "CCDeccelAmplitude_setRate\tCCDeccelAmplitude:setRate(_num)", "contents": "CCDeccelAmplitude:setRate(_num)"},
{ "trigger": ":setRate\tCCDeccelAmplitude:setRate(_num)", "contents": "setRate(_num)"},
{ "trigger": "CCDeccelAmplitude_getRate\tCCDeccelAmplitude:getRate()", "contents": "CCDeccelAmplitude:getRate()"},
{ "trigger": ":getRate\tCCDeccelAmplitude:getRate()", "contents": "getRate()"},
{ "trigger": "CCDeccelAmplitude_create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "CCDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCSprite\t", "contents": "CCSprite"},
{ "trigger": "CCSprite_setTextureRect\tCCSprite:setTextureRect(_CCRect,_boo,_CCSize)", "contents": "CCSprite:setTextureRect(_CCRect,_boo,_CCSize)"},
{ "trigger": ":setTextureRect\tCCSprite:setTextureRect(_CCRect,_boo,_CCSize)", "contents": "setTextureRect(_CCRect,_boo,_CCSize)"},
{ "trigger": "CCSprite_isDirty\tCCSprite:isDirty()", "contents": "CCSprite:isDirty()"},
{ "trigger": ":isDirty\tCCSprite:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCSprite_createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "CCSprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCSprite_getBlendFunc\tCCSprite:getBlendFunc()", "contents": "CCSprite:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSprite:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSprite_setOpacity\tCCSprite:setOpacity(_num)", "contents": "CCSprite:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCSprite:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCSprite_setDirty\tCCSprite:setDirty(_boo)", "contents": "CCSprite:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCSprite:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCSprite_createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "CCSprite:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_updateTransform\tCCSprite:updateTransform()", "contents": "CCSprite:updateTransform()"},
{ "trigger": ":updateTransform\tCCSprite:updateTransform()", "contents": "updateTransform()"},
{ "trigger": "CCSprite_getBatchNode\tCCSprite:getBatchNode()", "contents": "CCSprite:getBatchNode()"},
{ "trigger": ":getBatchNode\tCCSprite:getBatchNode()", "contents": "getBatchNode()"},
{ "trigger": "CCSprite_isOpacityModifyRGB\tCCSprite:isOpacityModifyRGB()", "contents": "CCSprite:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCSprite:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCSprite_getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "CCSprite:getOffsetPosition()"},
{ "trigger": ":getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "getOffsetPosition()"},
{ "trigger": "CCSprite_setOpacityModifyRGB\tCCSprite:setOpacityModifyRGB(_boo)", "contents": "CCSprite:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCSprite:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCSprite_setBatchNode\tCCSprite:setBatchNode(_CCSpriteBatchNode)", "contents": "CCSprite:setBatchNode(_CCSpriteBatchNode)"},
{ "trigger": ":setBatchNode\tCCSprite:setBatchNode(_CCSpriteBatchNode)", "contents": "setBatchNode(_CCSpriteBatchNode)"},
{ "trigger": "CCSprite_setColor\tCCSprite:setColor(_ccColor3B)", "contents": "CCSprite:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCSprite:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCSprite_isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "CCSprite:isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": ":isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": "CCSprite_setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "CCSprite:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSprite_getOpacity\tCCSprite:getOpacity()", "contents": "CCSprite:getOpacity()"},
{ "trigger": ":getOpacity\tCCSprite:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCSprite_displayFrame\tCCSprite:displayFrame()", "contents": "CCSprite:displayFrame()"},
{ "trigger": ":displayFrame\tCCSprite:displayFrame()", "contents": "displayFrame()"},
{ "trigger": "CCSprite_setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "CCSprite:setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": ":setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": "CCSprite_setFlipY\tCCSprite:setFlipY(_boo)", "contents": "CCSprite:setFlipY(_boo)"},
{ "trigger": ":setFlipY\tCCSprite:setFlipY(_boo)", "contents": "setFlipY(_boo)"},
{ "trigger": "CCSprite_setFlipX\tCCSprite:setFlipX(_boo)", "contents": "CCSprite:setFlipX(_boo)"},
{ "trigger": ":setFlipX\tCCSprite:setFlipX(_boo)", "contents": "setFlipX(_boo)"},
{ "trigger": "CCSprite_getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "CCSprite:getAtlasIndex()"},
{ "trigger": ":getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "getAtlasIndex()"},
{ "trigger": "CCSprite_isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "CCSprite:isTextureRectRotated()"},
{ "trigger": ":isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "isTextureRectRotated()"},
{ "trigger": "CCSprite_setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "CCSprite:setVertexRect(_CCRect)"},
{ "trigger": ":setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "setVertexRect(_CCRect)"},
{ "trigger": "CCSprite_getColor\tCCSprite:getColor()", "contents": "CCSprite:getColor()"},
{ "trigger": ":getColor\tCCSprite:getColor()", "contents": "getColor()"},
{ "trigger": "CCSprite_isFlipY\tCCSprite:isFlipY()", "contents": "CCSprite:isFlipY()"},
{ "trigger": ":isFlipY\tCCSprite:isFlipY()", "contents": "isFlipY()"},
{ "trigger": "CCSprite_isFlipX\tCCSprite:isFlipX()", "contents": "CCSprite:isFlipX()"},
{ "trigger": ":isFlipX\tCCSprite:isFlipX()", "contents": "isFlipX()"},
{ "trigger": "CCSprite_create\tCCSprite:create()", "contents": "CCSprite:create()"},
{ "trigger": ":create\tCCSprite:create()", "contents": "create()"},
{ "trigger": "CCSprite_setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "CCSprite:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCSprite_getTextureRect\tCCSprite:getTextureRect()", "contents": "CCSprite:getTextureRect()"},
{ "trigger": ":getTextureRect\tCCSprite:getTextureRect()", "contents": "getTextureRect()"},
{ "trigger": "CCSprite_setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "CCSprite:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_setAtlasIndex\tCCSprite:setAtlasIndex(_num)", "contents": "CCSprite:setAtlasIndex(_num)"},
{ "trigger": ":setAtlasIndex\tCCSprite:setAtlasIndex(_num)", "contents": "setAtlasIndex(_num)"},
{ "trigger": "CCSprite_getTexture\tCCSprite:getTexture()", "contents": "CCSprite:getTexture()"},
{ "trigger": ":getTexture\tCCSprite:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSprite_createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCSprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCTransitionProgress\t", "contents": "CCTransitionProgress"},
{ "trigger": "CCTransitionProgress_create\tCCTransitionProgress:create(_num,_CCScene)", "contents": "CCTransitionProgress:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgress:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionSlideInL\t", "contents": "CCTransitionSlideInL"},
{ "trigger": "CCTransitionSlideInL_create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "CCTransitionSlideInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLayerMultiplex\t", "contents": "CCLayerMultiplex"},
{ "trigger": "CCLayerMultiplex_createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "CCLayerMultiplex:createWithLayer(_CCLayer)"},
{ "trigger": ":createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "createWithLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "CCLayerMultiplex:addLayer(_CCLayer)"},
{ "trigger": ":addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "addLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "CCLayerMultiplex:switchTo(_num)"},
{ "trigger": ":switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "switchTo(_num)"},
{ "trigger": "CCLayerMultiplex_switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "CCLayerMultiplex:switchToAndReleaseMe(_num)"},
{ "trigger": ":switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "switchToAndReleaseMe(_num)"},
{ "trigger": "CCLayerMultiplex_create\tCCLayerMultiplex:create(_CCLayer)", "contents": "CCLayerMultiplex:create(_CCLayer)"},
{ "trigger": ":create\tCCLayerMultiplex:create(_CCLayer)", "contents": "create(_CCLayer)"},
{ "trigger": "ccBlendFunc\t", "contents": "ccBlendFunc"},
{ "trigger": "ccBlendFunc_call\tccBlendFunc:call()", "contents": "ccBlendFunc:call()"},
{ "trigger": ":call\tccBlendFunc:call()", "contents": "call()"},
{ "trigger": "ccBlendFunc_new\tccBlendFunc:new()", "contents": "ccBlendFunc:new()"},
{ "trigger": ":new\tccBlendFunc:new()", "contents": "new()"},
{ "trigger": "ccBlendFunc_new_local\tccBlendFunc:new_local()", "contents": "ccBlendFunc:new_local()"},
{ "trigger": ":new_local\tccBlendFunc:new_local()", "contents": "new_local()"},
{ "trigger": "CCStore\t", "contents": "CCStore"},
{ "trigger": "CCStore_isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "CCStore:isProductLoaded(_str)"},
{ "trigger": ":isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "isProductLoaded(_str)"},
{ "trigger": "CCStore_setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "CCStore:setReceiptVerifyMode(_num,_boo)"},
{ "trigger": ":setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "setReceiptVerifyMode(_num,_boo)"},
{ "trigger": "CCStore_getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "CCStore:getReceiptVerifyMode()"},
{ "trigger": ":getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "getReceiptVerifyMode()"},
{ "trigger": "CCStore_postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "CCStore:postInitWithTransactionListenerLua(_listener)"},
{ "trigger": ":postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "postInitWithTransactionListenerLua(_listener)"},
{ "trigger": "CCStore_purchase\tCCStore:purchase(_str)", "contents": "CCStore:purchase(_str)"},
{ "trigger": ":purchase\tCCStore:purchase(_str)", "contents": "purchase(_str)"},
{ "trigger": "CCStore_sharedStore\tCCStore:sharedStore()", "contents": "CCStore:sharedStore()"},
{ "trigger": ":sharedStore\tCCStore:sharedStore()", "contents": "sharedStore()"},
{ "trigger": "CCStore_cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "CCStore:cancelLoadProducts()"},
{ "trigger": ":cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "cancelLoadProducts()"},
{ "trigger": "CCStore_getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "CCStore:getReceiptVerifyServerUrl()"},
{ "trigger": ":getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "getReceiptVerifyServerUrl()"},
{ "trigger": "CCStore_canMakePurchases\tCCStore:canMakePurchases()", "contents": "CCStore:canMakePurchases()"},
{ "trigger": ":canMakePurchases\tCCStore:canMakePurchases()", "contents": "canMakePurchases()"},
{ "trigger": "CCStore_loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "CCStore:loadProductsLua(_val,_listener)"},
{ "trigger": ":loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "loadProductsLua(_val,_listener)"},
{ "trigger": "CCStore_purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "CCStore:purgeSharedStore()"},
{ "trigger": ":purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "purgeSharedStore()"},
{ "trigger": "CCStore_finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "CCStore:finishTransactionLua(_str)"},
{ "trigger": ":finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "finishTransactionLua(_str)"},
{ "trigger": "CCStore_setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "CCStore:setReceiptVerifyServerUrl(_str)"},
{ "trigger": ":setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "setReceiptVerifyServerUrl(_str)"},
{ "trigger": "CCCardinalSplineBy\t", "contents": "CCCardinalSplineBy"},
{ "trigger": "CCCardinalSplineBy_create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineBy:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCTransitionSlideInB\t", "contents": "CCTransitionSlideInB"},
{ "trigger": "CCTransitionSlideInB_create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "CCTransitionSlideInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpawn\t", "contents": "CCSpawn"},
{ "trigger": "CCSpawn_createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSpawn_create\tCCSpawn:create(_CCArray)", "contents": "CCSpawn:create(_CCArray)"},
{ "trigger": ":create\tCCSpawn:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCRipple3D\t", "contents": "CCRipple3D"},
{ "trigger": "CCRipple3D_getAmplitude\tCCRipple3D:getAmplitude()", "contents": "CCRipple3D:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCRipple3D:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCRipple3D_setPosition\tCCRipple3D:setPosition(_CCPoint)", "contents": "CCRipple3D:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCRipple3D:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCRipple3D_getPosition\tCCRipple3D:getPosition()", "contents": "CCRipple3D:getPosition()"},
{ "trigger": ":getPosition\tCCRipple3D:getPosition()", "contents": "getPosition()"},
{ "trigger": "CCRipple3D_create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "CCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": ":create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": "CCRipple3D_getAmplitudeRate\tCCRipple3D:getAmplitudeRate()", "contents": "CCRipple3D:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCRipple3D:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCRipple3D_setAmplitudeRate\tCCRipple3D:setAmplitudeRate(_num)", "contents": "CCRipple3D:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCRipple3D:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCRipple3D_setAmplitude\tCCRipple3D:setAmplitude(_num)", "contents": "CCRipple3D:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCRipple3D:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCEaseBounceInOut\t", "contents": "CCEaseBounceInOut"},
{ "trigger": "CCEaseBounceInOut_create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "CCEaseBounceInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseElastic\t", "contents": "CCEaseElastic"},
{ "trigger": "CCEaseElastic_getPeriod\tCCEaseElastic:getPeriod()", "contents": "CCEaseElastic:getPeriod()"},
{ "trigger": ":getPeriod\tCCEaseElastic:getPeriod()", "contents": "getPeriod()"},
{ "trigger": "CCEaseElastic_setPeriod\tCCEaseElastic:setPeriod(_num)", "contents": "CCEaseElastic:setPeriod(_num)"},
{ "trigger": ":setPeriod\tCCEaseElastic:setPeriod(_num)", "contents": "setPeriod(_num)"},
{ "trigger": "CCEaseElastic_create\tCCEaseElastic:create(_CCActionInterval,_num)", "contents": "CCEaseElastic:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseElastic:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCTransitionSceneOriented\t", "contents": "CCTransitionSceneOriented"},
{ "trigger": "CCTransitionSceneOriented_create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "CCTransitionSceneOriented:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCJumpTo\t", "contents": "CCJumpTo"},
{ "trigger": "CCJumpTo_create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpTo:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCTintBy\t", "contents": "CCTintBy"},
{ "trigger": "CCTintBy_create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "CCTintBy:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "CCCallFuncN\t", "contents": "CCCallFuncN"},
{ "trigger": "CCCallFuncN_create\tCCCallFuncN:create(_listener)", "contents": "CCCallFuncN:create(_listener)"},
{ "trigger": ":create\tCCCallFuncN:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCTMXTilesetInfo\t", "contents": "CCTMXTilesetInfo"},
{ "trigger": "CCTMXTilesetInfo_rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "CCTMXTilesetInfo:rectForGID(_num)"},
{ "trigger": ":rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "rectForGID(_num)"},
{ "trigger": "CCActionInstant\t", "contents": "CCActionInstant"},
{ "trigger": "CCObject\t", "contents": "CCObject"},
{ "trigger": "CCObject_isEqual\tCCObject:isEqual(_const_CCObject)", "contents": "CCObject:isEqual(_const_CCObject)"},
{ "trigger": ":isEqual\tCCObject:isEqual(_const_CCObject)", "contents": "isEqual(_const_CCObject)"},
{ "trigger": "CCObject_autorelease\tCCObject:autorelease()", "contents": "CCObject:autorelease()"},
{ "trigger": ":autorelease\tCCObject:autorelease()", "contents": "autorelease()"},
{ "trigger": "CCObject_retain\tCCObject:retain()", "contents": "CCObject:retain()"},
{ "trigger": ":retain\tCCObject:retain()", "contents": "retain()"},
{ "trigger": "CCObject_retainCount\tCCObject:retainCount()", "contents": "CCObject:retainCount()"},
{ "trigger": ":retainCount\tCCObject:retainCount()", "contents": "retainCount()"},
{ "trigger": "CCObject_release\tCCObject:release()", "contents": "CCObject:release()"},
{ "trigger": ":release\tCCObject:release()", "contents": "release()"},
{ "trigger": "CCObject_isSingleReference\tCCObject:isSingleReference()", "contents": "CCObject:isSingleReference()"},
{ "trigger": ":isSingleReference\tCCObject:isSingleReference()", "contents": "isSingleReference()"},
{ "trigger": "CCObject_copy\tCCObject:copy()", "contents": "CCObject:copy()"},
{ "trigger": ":copy\tCCObject:copy()", "contents": "copy()"},
{ "trigger": "CCEaseSineOut\t", "contents": "CCEaseSineOut"},
{ "trigger": "CCEaseSineOut_create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "CCEaseSineOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCControl\t", "contents": "CCControl"},
{ "trigger": "CCControl_getState\tCCControl:getState()", "contents": "CCControl:getState()"},
{ "trigger": ":getState\tCCControl:getState()", "contents": "getState()"},
{ "trigger": "CCControl_isSelected\tCCControl:isSelected()", "contents": "CCControl:isSelected()"},
{ "trigger": ":isSelected\tCCControl:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCControl_setOpacity\tCCControl:setOpacity(_num)", "contents": "CCControl:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCControl:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCControl_setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "CCControl:setHighlighted(_boo)"},
{ "trigger": ":setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "setHighlighted(_boo)"},
{ "trigger": "CCControl_setEnabled\tCCControl:setEnabled(_boo)", "contents": "CCControl:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCControl:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCControl_getOpacity\tCCControl:getOpacity()", "contents": "CCControl:getOpacity()"},
{ "trigger": ":getOpacity\tCCControl:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCControl_needsLayout\tCCControl:needsLayout()", "contents": "CCControl:needsLayout()"},
{ "trigger": ":needsLayout\tCCControl:needsLayout()", "contents": "needsLayout()"},
{ "trigger": "CCControl_hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "CCControl:hasVisibleParents()"},
{ "trigger": ":hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "hasVisibleParents()"},
{ "trigger": "CCControl_isEnabled\tCCControl:isEnabled()", "contents": "CCControl:isEnabled()"},
{ "trigger": ":isEnabled\tCCControl:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCControl_isHighlighted\tCCControl:isHighlighted()", "contents": "CCControl:isHighlighted()"},
{ "trigger": ":isHighlighted\tCCControl:isHighlighted()", "contents": "isHighlighted()"},
{ "trigger": "CCControl_setSelected\tCCControl:setSelected(_boo)", "contents": "CCControl:setSelected(_boo)"},
{ "trigger": ":setSelected\tCCControl:setSelected(_boo)", "contents": "setSelected(_boo)"},
{ "trigger": "CCControlButton\t", "contents": "CCControlButton"},
{ "trigger": "CCControlButton_getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "CCControlButton:getLabelAnchorPoint()"},
{ "trigger": ":getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "getLabelAnchorPoint()"},
{ "trigger": "CCControlButton_getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "CCControlButton:getTitleBMFontForState(_num)"},
{ "trigger": ":getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "getTitleBMFontForState(_num)"},
{ "trigger": "CCControlButton_setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "CCControlButton:setTitleTTFForState(_str,_num)"},
{ "trigger": ":setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "setTitleTTFForState(_str,_num)"},
{ "trigger": "CCControlButton_getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "CCControlButton:getTitleLabel()"},
{ "trigger": ":getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "getTitleLabel()"},
{ "trigger": "CCControlButton_getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "CCControlButton:getTitleLabelForState(_num)"},
{ "trigger": ":getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "getTitleLabelForState(_num)"},
{ "trigger": "CCControlButton_doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "CCControlButton:doesAdjustBackgroundImage()"},
{ "trigger": ":doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "doesAdjustBackgroundImage()"},
{ "trigger": "CCControlButton_setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "CCControlButton:setTitleLabelForState(_CCNode,_num)"},
{ "trigger": ":setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "setTitleLabelForState(_CCNode,_num)"},
{ "trigger": "CCControlButton_getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "CCControlButton:getTitleTTFSizeForState(_num)"},
{ "trigger": ":getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "getTitleTTFSizeForState(_num)"},
{ "trigger": "CCControlButton_setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "CCControlButton:setTitleTTFSizeForState(_num,_num)"},
{ "trigger": ":setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "setTitleTTFSizeForState(_num,_num)"},
{ "trigger": "CCControlButton_setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "CCControlButton:setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": ":setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": "CCControlButton_getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "CCControlButton:getZoomOnTouchDown()"},
{ "trigger": ":getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "getZoomOnTouchDown()"},
{ "trigger": "CCControlButton_getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "CCControlButton:getTitleForState(_num)"},
{ "trigger": ":getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "getTitleForState(_num)"},
{ "trigger": "CCControlButton_getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "CCControlButton:getTitleTTFForState(_num)"},
{ "trigger": ":getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "getTitleTTFForState(_num)"},
{ "trigger": "CCControlButton_getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "CCControlButton:getBackgroundSpriteForState(_num)"},
{ "trigger": ":getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "getBackgroundSpriteForState(_num)"},
{ "trigger": "CCControlButton_getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "CCControlButton:getVerticalMargin()"},
{ "trigger": ":getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "getVerticalMargin()"},
{ "trigger": "CCControlButton_setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "CCControlButton:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCControlButton_setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "CCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": ":setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": "CCControlButton_getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "CCControlButton:getHorizontalOrigin()"},
{ "trigger": ":getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "getHorizontalOrigin()"},
{ "trigger": "CCControlButton_setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "CCControlButton:setMargins(_num,_num)"},
{ "trigger": ":setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "setMargins(_num,_num)"},
{ "trigger": "CCControlButton_isPushed\tCCControlButton:isPushed()", "contents": "CCControlButton:isPushed()"},
{ "trigger": ":isPushed\tCCControlButton:isPushed()", "contents": "isPushed()"},
{ "trigger": "CCControlButton_setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "CCControlButton:setAdjustBackgroundImage(_boo)"},
{ "trigger": ":setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "setAdjustBackgroundImage(_boo)"},
{ "trigger": "CCControlButton_getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "CCControlButton:getBackgroundSprite()"},
{ "trigger": ":getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "getBackgroundSprite()"},
{ "trigger": "CCControlButton_create\tCCControlButton:create()", "contents": "CCControlButton:create()"},
{ "trigger": ":create\tCCControlButton:create()", "contents": "create()"},
{ "trigger": "CCControlButton_setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "CCControlButton:setTitleBMFontForState(_str,_num)"},
{ "trigger": ":setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "setTitleBMFontForState(_str,_num)"},
{ "trigger": "CCControlButton_setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "CCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": ":setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": "CCControlButton_setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "CCControlButton:setTitleForState(_CCString,_num)"},
{ "trigger": ":setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "setTitleForState(_CCString,_num)"},
{ "trigger": "CCControlButton_setLabelAnchorPoint\tCCControlButton:setLabelAnchorPoint(_CCPoint)", "contents": "CCControlButton:setLabelAnchorPoint(_CCPoint)"},
{ "trigger": ":setLabelAnchorPoint\tCCControlButton:setLabelAnchorPoint(_CCPoint)", "contents": "setLabelAnchorPoint(_CCPoint)"},
{ "trigger": "CCControlButton_setZoomOnTouchDown\tCCControlButton:setZoomOnTouchDown(_boo)", "contents": "CCControlButton:setZoomOnTouchDown(_boo)"},
{ "trigger": ":setZoomOnTouchDown\tCCControlButton:setZoomOnTouchDown(_boo)", "contents": "setZoomOnTouchDown(_boo)"},
{ "trigger": "CCControlButton_setTitleLabel\tCCControlButton:setTitleLabel(_CCNode)", "contents": "CCControlButton:setTitleLabel(_CCNode)"},
{ "trigger": ":setTitleLabel\tCCControlButton:setTitleLabel(_CCNode)", "contents": "setTitleLabel(_CCNode)"},
{ "trigger": "CCControlButton_getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "CCControlButton:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCControlButton_getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "CCControlButton:getTitleColorForState(_num)"},
{ "trigger": ":getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "getTitleColorForState(_num)"},
{ "trigger": "CCControlButton_setBackgroundSprite\tCCControlButton:setBackgroundSprite(_CCScale9Sprite)", "contents": "CCControlButton:setBackgroundSprite(_CCScale9Sprite)"},
{ "trigger": ":setBackgroundSprite\tCCControlButton:setBackgroundSprite(_CCScale9Sprite)", "contents": "setBackgroundSprite(_CCScale9Sprite)"},
{ "trigger": "CCEaseBackOut\t", "contents": "CCEaseBackOut"},
{ "trigger": "CCEaseBackOut_create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "CCEaseBackOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCActionInterval\t", "contents": "CCActionInterval"},
{ "trigger": "CCActionInterval_getElapsed\tCCActionInterval:getElapsed()", "contents": "CCActionInterval:getElapsed()"},
{ "trigger": ":getElapsed\tCCActionInterval:getElapsed()", "contents": "getElapsed()"},
{ "trigger": "CCActionInterval_getAmplitudeRate\tCCActionInterval:getAmplitudeRate()", "contents": "CCActionInterval:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCActionInterval:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCActionInterval_setAmplitudeRate\tCCActionInterval:setAmplitudeRate(_num)", "contents": "CCActionInterval:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCActionInterval:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "tolua\t", "contents": "tolua"},
{ "trigger": "tolua_getpeer\ttolua.getpeer()", "contents": "tolua.getpeer()"},
{ "trigger": "tolua_cast\ttolua.cast()", "contents": "tolua.cast()"},
{ "trigger": "tolua_isnull\ttolua.isnull()", "contents": "tolua.isnull()"},
{ "trigger": "tolua_releaseownership\ttolua.releaseownership()", "contents": "tolua.releaseownership()"},
{ "trigger": "tolua_takeownership\ttolua.takeownership()", "contents": "tolua.takeownership()"},
{ "trigger": "tolua_setpeer\ttolua.setpeer()", "contents": "tolua.setpeer()"},
{ "trigger": "tolua_inherit\ttolua.inherit()", "contents": "tolua.inherit()"},
{ "trigger": "tolua_type\ttolua.type()", "contents": "tolua.type()"},
{ "trigger": "CCFadeOut\t", "contents": "CCFadeOut"},
{ "trigger": "CCFadeOut_create\tCCFadeOut:create(_num)", "contents": "CCFadeOut:create(_num)"},
{ "trigger": ":create\tCCFadeOut:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCEaseExponentialOut\t", "contents": "CCEaseExponentialOut"},
{ "trigger": "CCEaseExponentialOut_create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "CCEaseExponentialOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleSystemQuad\t", "contents": "CCParticleSystemQuad"},
{ "trigger": "CCParticleSystemQuad_getGravity\tCCParticleSystemQuad:getGravity()", "contents": "CCParticleSystemQuad:getGravity()"},
{ "trigger": ":getGravity\tCCParticleSystemQuad:getGravity()", "contents": "getGravity()"},
{ "trigger": "CCParticleSystemQuad_setScaleY\tCCParticleSystemQuad:setScaleY(_num)", "contents": "CCParticleSystemQuad:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCParticleSystemQuad:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCParticleSystemQuad_setScaleX\tCCParticleSystemQuad:setScaleX(_num)", "contents": "CCParticleSystemQuad:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCParticleSystemQuad:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCParticleSystemQuad_getBatchNode\tCCParticleSystemQuad:getBatchNode()", "contents": "CCParticleSystemQuad:getBatchNode()"},
{ "trigger": ":getBatchNode\tCCParticleSystemQuad:getBatchNode()", "contents": "getBatchNode()"},
{ "trigger": "CCParticleSystemQuad_setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "CCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)"},
{ "trigger": ":setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "setBatchNode(_CCParticleBatchNode)"},
{ "trigger": "CCParticleSystemQuad_setRadialAccel\tCCParticleSystemQuad:setRadialAccel(_num)", "contents": "CCParticleSystemQuad:setRadialAccel(_num)"},
{ "trigger": ":setRadialAccel\tCCParticleSystemQuad:setRadialAccel(_num)", "contents": "setRadialAccel(_num)"},
{ "trigger": "CCParticleSystemQuad_getSpeedVar\tCCParticleSystemQuad:getSpeedVar()", "contents": "CCParticleSystemQuad:getSpeedVar()"},
{ "trigger": ":getSpeedVar\tCCParticleSystemQuad:getSpeedVar()", "contents": "getSpeedVar()"},
{ "trigger": "CCParticleSystemQuad_setBlendFunc\tCCParticleSystemQuad:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleSystemQuad:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleSystemQuad:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleSystemQuad_setEndRadiusVar\tCCParticleSystemQuad:setEndRadiusVar(_num)", "contents": "CCParticleSystemQuad:setEndRadiusVar(_num)"},
{ "trigger": ":setEndRadiusVar\tCCParticleSystemQuad:setEndRadiusVar(_num)", "contents": "setEndRadiusVar(_num)"},
{ "trigger": "CCParticleSystemQuad_stopSystem\tCCParticleSystemQuad:stopSystem()", "contents": "CCParticleSystemQuad:stopSystem()"},
{ "trigger": ":stopSystem\tCCParticleSystemQuad:stopSystem()", "contents": "stopSystem()"},
{ "trigger": "CCParticleSystemQuad_getRotatePerSecondVar\tCCParticleSystemQuad:getRotatePerSecondVar()", "contents": "CCParticleSystemQuad:getRotatePerSecondVar()"},
{ "trigger": ":getRotatePerSecondVar\tCCParticleSystemQuad:getRotatePerSecondVar()", "contents": "getRotatePerSecondVar()"},
{ "trigger": "CCParticleSystemQuad_isAutoRemoveOnFinish\tCCParticleSystemQuad:isAutoRemoveOnFinish()", "contents": "CCParticleSystemQuad:isAutoRemoveOnFinish()"},
{ "trigger": ":isAutoRemoveOnFinish\tCCParticleSystemQuad:isAutoRemoveOnFinish()", "contents": "isAutoRemoveOnFinish()"},
{ "trigger": "CCParticleSystemQuad_getStartRadiusVar\tCCParticleSystemQuad:getStartRadiusVar()", "contents": "CCParticleSystemQuad:getStartRadiusVar()"},
{ "trigger": ":getStartRadiusVar\tCCParticleSystemQuad:getStartRadiusVar()", "contents": "getStartRadiusVar()"},
{ "trigger": "CCParticleSystemQuad_resetSystem\tCCParticleSystemQuad:resetSystem()", "contents": "CCParticleSystemQuad:resetSystem()"},
{ "trigger": ":resetSystem\tCCParticleSystemQuad:resetSystem()", "contents": "resetSystem()"},
{ "trigger": "CCParticleSystemQuad_getStartRadius\tCCParticleSystemQuad:getStartRadius()", "contents": "CCParticleSystemQuad:getStartRadius()"},
{ "trigger": ":getStartRadius\tCCParticleSystemQuad:getStartRadius()", "contents": "getStartRadius()"},
{ "trigger": "CCParticleSystemQuad_getAngleVar\tCCParticleSystemQuad:getAngleVar()", "contents": "CCParticleSystemQuad:getAngleVar()"},
{ "trigger": ":getAngleVar\tCCParticleSystemQuad:getAngleVar()", "contents": "getAngleVar()"},
{ "trigger": "CCParticleSystemQuad_getRadialAccelVar\tCCParticleSystemQuad:getRadialAccelVar()", "contents": "CCParticleSystemQuad:getRadialAccelVar()"},
{ "trigger": ":getRadialAccelVar\tCCParticleSystemQuad:getRadialAccelVar()", "contents": "getRadialAccelVar()"},
{ "trigger": "CCParticleSystemQuad_setEndRadius\tCCParticleSystemQuad:setEndRadius(_num)", "contents": "CCParticleSystemQuad:setEndRadius(_num)"},
{ "trigger": ":setEndRadius\tCCParticleSystemQuad:setEndRadius(_num)", "contents": "setEndRadius(_num)"},
{ "trigger": "CCParticleSystemQuad_getEndColorVar\tCCParticleSystemQuad:getEndColorVar()", "contents": "CCParticleSystemQuad:getEndColorVar()"},
{ "trigger": ":getEndColorVar\tCCParticleSystemQuad:getEndColorVar()", "contents": "getEndColorVar()"},
{ "trigger": "CCParticleSystemQuad_updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "CCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": ":updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_setRotatePerSecond\tCCParticleSystemQuad:setRotatePerSecond(_num)", "contents": "CCParticleSystemQuad:setRotatePerSecond(_num)"},
{ "trigger": ":setRotatePerSecond\tCCParticleSystemQuad:setRotatePerSecond(_num)", "contents": "setRotatePerSecond(_num)"},
{ "trigger": "CCParticleSystemQuad_setStartSpinVar\tCCParticleSystemQuad:setStartSpinVar(_num)", "contents": "CCParticleSystemQuad:setStartSpinVar(_num)"},
{ "trigger": ":setStartSpinVar\tCCParticleSystemQuad:setStartSpinVar(_num)", "contents": "setStartSpinVar(_num)"},
{ "trigger": "CCParticleSystemQuad_create\tCCParticleSystemQuad:create()", "contents": "CCParticleSystemQuad:create()"},
{ "trigger": ":create\tCCParticleSystemQuad:create()", "contents": "create()"},
{ "trigger": "CCParticleSystemQuad_isActive\tCCParticleSystemQuad:isActive()", "contents": "CCParticleSystemQuad:isActive()"},
{ "trigger": ":isActive\tCCParticleSystemQuad:isActive()", "contents": "isActive()"},
{ "trigger": "CCParticleSystemQuad_getRotatePerSecond\tCCParticleSystemQuad:getRotatePerSecond()", "contents": "CCParticleSystemQuad:getRotatePerSecond()"},
{ "trigger": ":getRotatePerSecond\tCCParticleSystemQuad:getRotatePerSecond()", "contents": "getRotatePerSecond()"},
{ "trigger": "CCParticleSystemQuad_getEndRadius\tCCParticleSystemQuad:getEndRadius()", "contents": "CCParticleSystemQuad:getEndRadius()"},
{ "trigger": ":getEndRadius\tCCParticleSystemQuad:getEndRadius()", "contents": "getEndRadius()"},
{ "trigger": "CCParticleSystemQuad_getSourcePosition\tCCParticleSystemQuad:getSourcePosition()", "contents": "CCParticleSystemQuad:getSourcePosition()"},
{ "trigger": ":getSourcePosition\tCCParticleSystemQuad:getSourcePosition()", "contents": "getSourcePosition()"},
{ "trigger": "CCParticleSystemQuad_setAngleVar\tCCParticleSystemQuad:setAngleVar(_num)", "contents": "CCParticleSystemQuad:setAngleVar(_num)"},
{ "trigger": ":setAngleVar\tCCParticleSystemQuad:setAngleVar(_num)", "contents": "setAngleVar(_num)"},
{ "trigger": "CCParticleSystemQuad_isFull\tCCParticleSystemQuad:isFull()", "contents": "CCParticleSystemQuad:isFull()"},
{ "trigger": ":isFull\tCCParticleSystemQuad:isFull()", "contents": "isFull()"},
{ "trigger": "CCParticleSystemQuad_getBlendFunc\tCCParticleSystemQuad:getBlendFunc()", "contents": "CCParticleSystemQuad:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleSystemQuad:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleSystemQuad_getEndSpin\tCCParticleSystemQuad:getEndSpin()", "contents": "CCParticleSystemQuad:getEndSpin()"},
{ "trigger": ":getEndSpin\tCCParticleSystemQuad:getEndSpin()", "contents": "getEndSpin()"},
{ "trigger": "CCParticleSystemQuad_setStartColorVar\tCCParticleSystemQuad:setStartColorVar(_ccColor4F)", "contents": "CCParticleSystemQuad:setStartColorVar(_ccColor4F)"},
{ "trigger": ":setStartColorVar\tCCParticleSystemQuad:setStartColorVar(_ccColor4F)", "contents": "setStartColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystemQuad_setEndSpin\tCCParticleSystemQuad:setEndSpin(_num)", "contents": "CCParticleSystemQuad:setEndSpin(_num)"},
{ "trigger": ":setEndSpin\tCCParticleSystemQuad:setEndSpin(_num)", "contents": "setEndSpin(_num)"},
{ "trigger": "CCParticleSystemQuad_getEmissionRate\tCCParticleSystemQuad:getEmissionRate()", "contents": "CCParticleSystemQuad:getEmissionRate()"},
{ "trigger": ":getEmissionRate\tCCParticleSystemQuad:getEmissionRate()", "contents": "getEmissionRate()"},
{ "trigger": "CCParticleSystemQuad_setDuration\tCCParticleSystemQuad:setDuration(_num)", "contents": "CCParticleSystemQuad:setDuration(_num)"},
{ "trigger": ":setDuration\tCCParticleSystemQuad:setDuration(_num)", "contents": "setDuration(_num)"},
{ "trigger": "CCParticleSystemQuad_getTangentialAccel\tCCParticleSystemQuad:getTangentialAccel()", "contents": "CCParticleSystemQuad:getTangentialAccel()"},
{ "trigger": ":getTangentialAccel\tCCParticleSystemQuad:getTangentialAccel()", "contents": "getTangentialAccel()"},
{ "trigger": "CCParticleSystemQuad_setRadialAccelVar\tCCParticleSystemQuad:setRadialAccelVar(_num)", "contents": "CCParticleSystemQuad:setRadialAccelVar(_num)"},
{ "trigger": ":setRadialAccelVar\tCCParticleSystemQuad:setRadialAccelVar(_num)", "contents": "setRadialAccelVar(_num)"},
{ "trigger": "CCParticleSystemQuad_getStartSizeVar\tCCParticleSystemQuad:getStartSizeVar()", "contents": "CCParticleSystemQuad:getStartSizeVar()"},
{ "trigger": ":getStartSizeVar\tCCParticleSystemQuad:getStartSizeVar()", "contents": "getStartSizeVar()"},
{ "trigger": "CCParticleSystemQuad_getEndSpinVar\tCCParticleSystemQuad:getEndSpinVar()", "contents": "CCParticleSystemQuad:getEndSpinVar()"},
{ "trigger": ":getEndSpinVar\tCCParticleSystemQuad:getEndSpinVar()", "contents": "getEndSpinVar()"},
{ "trigger": "CCParticleSystemQuad_getEndSizeVar\tCCParticleSystemQuad:getEndSizeVar()", "contents": "CCParticleSystemQuad:getEndSizeVar()"},
{ "trigger": ":getEndSizeVar\tCCParticleSystemQuad:getEndSizeVar()", "contents": "getEndSizeVar()"},
{ "trigger": "CCParticleSystemQuad_setStartSize\tCCParticleSystemQuad:setStartSize(_num)", "contents": "CCParticleSystemQuad:setStartSize(_num)"},
{ "trigger": ":setStartSize\tCCParticleSystemQuad:setStartSize(_num)", "contents": "setStartSize(_num)"},
{ "trigger": "CCParticleSystemQuad_getRadialAccel\tCCParticleSystemQuad:getRadialAccel()", "contents": "CCParticleSystemQuad:getRadialAccel()"},
{ "trigger": ":getRadialAccel\tCCParticleSystemQuad:getRadialAccel()", "contents": "getRadialAccel()"},
{ "trigger": "CCParticleSystemQuad_setScale\tCCParticleSystemQuad:setScale(_num)", "contents": "CCParticleSystemQuad:setScale(_num)"},
{ "trigger": ":setScale\tCCParticleSystemQuad:setScale(_num)", "contents": "setScale(_num)"},
{ "trigger": "CCParticleSystemQuad_setRotatePerSecondVar\tCCParticleSystemQuad:setRotatePerSecondVar(_num)", "contents": "CCParticleSystemQuad:setRotatePerSecondVar(_num)"},
{ "trigger": ":setRotatePerSecondVar\tCCParticleSystemQuad:setRotatePerSecondVar(_num)", "contents": "setRotatePerSecondVar(_num)"},
{ "trigger": "CCParticleSystemQuad_getTangentialAccelVar\tCCParticleSystemQuad:getTangentialAccelVar()", "contents": "CCParticleSystemQuad:getTangentialAccelVar()"},
{ "trigger": ":getTangentialAccelVar\tCCParticleSystemQuad:getTangentialAccelVar()", "contents": "getTangentialAccelVar()"},
{ "trigger": "CCParticleSystemQuad_setEmitterMode\tCCParticleSystemQuad:setEmitterMode(_num)", "contents": "CCParticleSystemQuad:setEmitterMode(_num)"},
{ "trigger": ":setEmitterMode\tCCParticleSystemQuad:setEmitterMode(_num)", "contents": "setEmitterMode(_num)"},
{ "trigger": "CCParticleSystemQuad_initParticle\tCCParticleSystemQuad:initParticle(_tCCParticle)", "contents": "CCParticleSystemQuad:initParticle(_tCCParticle)"},
{ "trigger": ":initParticle\tCCParticleSystemQuad:initParticle(_tCCParticle)", "contents": "initParticle(_tCCParticle)"},
{ "trigger": "CCParticleSystemQuad_setEndSizeVar\tCCParticleSystemQuad:setEndSizeVar(_num)", "contents": "CCParticleSystemQuad:setEndSizeVar(_num)"},
{ "trigger": ":setEndSizeVar\tCCParticleSystemQuad:setEndSizeVar(_num)", "contents": "setEndSizeVar(_num)"},
{ "trigger": "CCParticleSystemQuad_setLife\tCCParticleSystemQuad:setLife(_num)", "contents": "CCParticleSystemQuad:setLife(_num)"},
{ "trigger": ":setLife\tCCParticleSystemQuad:setLife(_num)", "contents": "setLife(_num)"},
{ "trigger": "CCParticleSystemQuad_getStartSize\tCCParticleSystemQuad:getStartSize()", "contents": "CCParticleSystemQuad:getStartSize()"},
{ "trigger": ":getStartSize\tCCParticleSystemQuad:getStartSize()", "contents": "getStartSize()"},
{ "trigger": "CCParticleSystemQuad_setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "CCParticleSystemQuad:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleSystemQuad_getSpeed\tCCParticleSystemQuad:getSpeed()", "contents": "CCParticleSystemQuad:getSpeed()"},
{ "trigger": ":getSpeed\tCCParticleSystemQuad:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCParticleSystemQuad_setStartSizeVar\tCCParticleSystemQuad:setStartSizeVar(_num)", "contents": "CCParticleSystemQuad:setStartSizeVar(_num)"},
{ "trigger": ":setStartSizeVar\tCCParticleSystemQuad:setStartSizeVar(_num)", "contents": "setStartSizeVar(_num)"},
{ "trigger": "CCParticleSystemQuad_setStartSpin\tCCParticleSystemQuad:setStartSpin(_num)", "contents": "CCParticleSystemQuad:setStartSpin(_num)"},
{ "trigger": ":setStartSpin\tCCParticleSystemQuad:setStartSpin(_num)", "contents": "setStartSpin(_num)"},
{ "trigger": "CCParticleSystemQuad_getTexture\tCCParticleSystemQuad:getTexture()", "contents": "CCParticleSystemQuad:getTexture()"},
{ "trigger": ":getTexture\tCCParticleSystemQuad:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCParticleSystemQuad_getEndRadiusVar\tCCParticleSystemQuad:getEndRadiusVar()", "contents": "CCParticleSystemQuad:getEndRadiusVar()"},
{ "trigger": ":getEndRadiusVar\tCCParticleSystemQuad:getEndRadiusVar()", "contents": "getEndRadiusVar()"},
{ "trigger": "CCParticleSystemQuad_setSpeed\tCCParticleSystemQuad:setSpeed(_num)", "contents": "CCParticleSystemQuad:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCParticleSystemQuad:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCParticleSystemQuad_getStartSpin\tCCParticleSystemQuad:getStartSpin()", "contents": "CCParticleSystemQuad:getStartSpin()"},
{ "trigger": ":getStartSpin\tCCParticleSystemQuad:getStartSpin()", "contents": "getStartSpin()"},
{ "trigger": "CCParticleSystemQuad_getStartColorVar\tCCParticleSystemQuad:getStartColorVar()", "contents": "CCParticleSystemQuad:getStartColorVar()"},
{ "trigger": ":getStartColorVar\tCCParticleSystemQuad:getStartColorVar()", "contents": "getStartColorVar()"},
{ "trigger": "CCParticleSystemQuad_setEndColorVar\tCCParticleSystemQuad:setEndColorVar(_ccColor4F)", "contents": "CCParticleSystemQuad:setEndColorVar(_ccColor4F)"},
{ "trigger": ":setEndColorVar\tCCParticleSystemQuad:setEndColorVar(_ccColor4F)", "contents": "setEndColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystemQuad_getParticleCount\tCCParticleSystemQuad:getParticleCount()", "contents": "CCParticleSystemQuad:getParticleCount()"},
{ "trigger": ":getParticleCount\tCCParticleSystemQuad:getParticleCount()", "contents": "getParticleCount()"},
{ "trigger": "CCParticleSystemQuad_setAngle\tCCParticleSystemQuad:setAngle(_num)", "contents": "CCParticleSystemQuad:setAngle(_num)"},
{ "trigger": ":setAngle\tCCParticleSystemQuad:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCParticleSystemQuad_setRotation\tCCParticleSystemQuad:setRotation(_num)", "contents": "CCParticleSystemQuad:setRotation(_num)"},
{ "trigger": ":setRotation\tCCParticleSystemQuad:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCParticleSystemQuad_setEndSpinVar\tCCParticleSystemQuad:setEndSpinVar(_num)", "contents": "CCParticleSystemQuad:setEndSpinVar(_num)"},
{ "trigger": ":setEndSpinVar\tCCParticleSystemQuad:setEndSpinVar(_num)", "contents": "setEndSpinVar(_num)"},
{ "trigger": "CCParticleSystemQuad_postStep\tCCParticleSystemQuad:postStep()", "contents": "CCParticleSystemQuad:postStep()"},
{ "trigger": ":postStep\tCCParticleSystemQuad:postStep()", "contents": "postStep()"},
{ "trigger": "CCParticleSystemQuad_setGravity\tCCParticleSystemQuad:setGravity(_const_CCPoint)", "contents": "CCParticleSystemQuad:setGravity(_const_CCPoint)"},
{ "trigger": ":setGravity\tCCParticleSystemQuad:setGravity(_const_CCPoint)", "contents": "setGravity(_const_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_getEmitterMode\tCCParticleSystemQuad:getEmitterMode()", "contents": "CCParticleSystemQuad:getEmitterMode()"},
{ "trigger": ":getEmitterMode\tCCParticleSystemQuad:getEmitterMode()", "contents": "getEmitterMode()"},
{ "trigger": "CCParticleSystemQuad_getLife\tCCParticleSystemQuad:getLife()", "contents": "CCParticleSystemQuad:getLife()"},
{ "trigger": ":getLife\tCCParticleSystemQuad:getLife()", "contents": "getLife()"},
{ "trigger": "CCParticleSystemQuad_getDuration\tCCParticleSystemQuad:getDuration()", "contents": "CCParticleSystemQuad:getDuration()"},
{ "trigger": ":getDuration\tCCParticleSystemQuad:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCParticleSystemQuad_isBlendAdditive\tCCParticleSystemQuad:isBlendAdditive()", "contents": "CCParticleSystemQuad:isBlendAdditive()"},
{ "trigger": ":isBlendAdditive\tCCParticleSystemQuad:isBlendAdditive()", "contents": "isBlendAdditive()"},
{ "trigger": "CCParticleSystemQuad_getPosVar\tCCParticleSystemQuad:getPosVar()", "contents": "CCParticleSystemQuad:getPosVar()"},
{ "trigger": ":getPosVar\tCCParticleSystemQuad:getPosVar()", "contents": "getPosVar()"},
{ "trigger": "CCParticleSystemQuad_setEndSize\tCCParticleSystemQuad:setEndSize(_num)", "contents": "CCParticleSystemQuad:setEndSize(_num)"},
{ "trigger": ":setEndSize\tCCParticleSystemQuad:setEndSize(_num)", "contents": "setEndSize(_num)"},
{ "trigger": "CCParticleSystemQuad_getStartSpinVar\tCCParticleSystemQuad:getStartSpinVar()", "contents": "CCParticleSystemQuad:getStartSpinVar()"},
{ "trigger": ":getStartSpinVar\tCCParticleSystemQuad:getStartSpinVar()", "contents": "getStartSpinVar()"},
{ "trigger": "CCParticleSystemQuad_setEmissionRate\tCCParticleSystemQuad:setEmissionRate(_num)", "contents": "CCParticleSystemQuad:setEmissionRate(_num)"},
{ "trigger": ":setEmissionRate\tCCParticleSystemQuad:setEmissionRate(_num)", "contents": "setEmissionRate(_num)"},
{ "trigger": "CCParticleSystemQuad_setPosVar\tCCParticleSystemQuad:setPosVar(_CCPoint)", "contents": "CCParticleSystemQuad:setPosVar(_CCPoint)"},
{ "trigger": ":setPosVar\tCCParticleSystemQuad:setPosVar(_CCPoint)", "contents": "setPosVar(_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_setSourcePosition\tCCParticleSystemQuad:setSourcePosition(_CCPoint)", "contents": "CCParticleSystemQuad:setSourcePosition(_CCPoint)"},
{ "trigger": ":setSourcePosition\tCCParticleSystemQuad:setSourcePosition(_CCPoint)", "contents": "setSourcePosition(_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_setPositionType\tCCParticleSystemQuad:setPositionType(_num)", "contents": "CCParticleSystemQuad:setPositionType(_num)"},
{ "trigger": ":setPositionType\tCCParticleSystemQuad:setPositionType(_num)", "contents": "setPositionType(_num)"},
{ "trigger": "CCParticleSystemQuad_getAngle\tCCParticleSystemQuad:getAngle()", "contents": "CCParticleSystemQuad:getAngle()"},
{ "trigger": ":getAngle\tCCParticleSystemQuad:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCParticleSystemQuad_setAutoRemoveOnFinish\tCCParticleSystemQuad:setAutoRemoveOnFinish(_boo)", "contents": "CCParticleSystemQuad:setAutoRemoveOnFinish(_boo)"},
{ "trigger": ":setAutoRemoveOnFinish\tCCParticleSystemQuad:setAutoRemoveOnFinish(_boo)", "contents": "setAutoRemoveOnFinish(_boo)"},
{ "trigger": "CCParticleSystemQuad_setStartRadius\tCCParticleSystemQuad:setStartRadius(_num)", "contents": "CCParticleSystemQuad:setStartRadius(_num)"},
{ "trigger": ":setStartRadius\tCCParticleSystemQuad:setStartRadius(_num)", "contents": "setStartRadius(_num)"},
{ "trigger": "CCParticleSystemQuad_setBlendAdditive\tCCParticleSystemQuad:setBlendAdditive(_boo)", "contents": "CCParticleSystemQuad:setBlendAdditive(_boo)"},
{ "trigger": ":setBlendAdditive\tCCParticleSystemQuad:setBlendAdditive(_boo)", "contents": "setBlendAdditive(_boo)"},
{ "trigger": "CCParticleSystemQuad_setSpeedVar\tCCParticleSystemQuad:setSpeedVar(_num)", "contents": "CCParticleSystemQuad:setSpeedVar(_num)"},
{ "trigger": ":setSpeedVar\tCCParticleSystemQuad:setSpeedVar(_num)", "contents": "setSpeedVar(_num)"},
{ "trigger": "CCParticleSystemQuad_addParticle\tCCParticleSystemQuad:addParticle()", "contents": "CCParticleSystemQuad:addParticle()"},
{ "trigger": ":addParticle\tCCParticleSystemQuad:addParticle()", "contents": "addParticle()"},
{ "trigger": "CCParticleSystemQuad_setTangentialAccel\tCCParticleSystemQuad:setTangentialAccel(_num)", "contents": "CCParticleSystemQuad:setTangentialAccel(_num)"},
{ "trigger": ":setTangentialAccel\tCCParticleSystemQuad:setTangentialAccel(_num)", "contents": "setTangentialAccel(_num)"},
{ "trigger": "CCParticleSystemQuad_getEndColor\tCCParticleSystemQuad:getEndColor()", "contents": "CCParticleSystemQuad:getEndColor()"},
{ "trigger": ":getEndColor\tCCParticleSystemQuad:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCParticleSystemQuad_setStartColor\tCCParticleSystemQuad:setStartColor(_ccColor4F)", "contents": "CCParticleSystemQuad:setStartColor(_ccColor4F)"},
{ "trigger": ":setStartColor\tCCParticleSystemQuad:setStartColor(_ccColor4F)", "contents": "setStartColor(_ccColor4F)"},
{ "trigger": "CCParticleSystemQuad_setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_const_CCRect)", "contents": "CCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_const_CCRect)"},
{ "trigger": ":setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_const_CCRect)", "contents": "setTextureWithRect(_CCTexture2D,_const_CCRect)"},
{ "trigger": "CCParticleSystemQuad_setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "CCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCParticleSystemQuad_setTangentialAccelVar\tCCParticleSystemQuad:setTangentialAccelVar(_num)", "contents": "CCParticleSystemQuad:setTangentialAccelVar(_num)"},
{ "trigger": ":setTangentialAccelVar\tCCParticleSystemQuad:setTangentialAccelVar(_num)", "contents": "setTangentialAccelVar(_num)"},
{ "trigger": "CCParticleSystemQuad_getStartColor\tCCParticleSystemQuad:getStartColor()", "contents": "CCParticleSystemQuad:getStartColor()"},
{ "trigger": ":getStartColor\tCCParticleSystemQuad:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCParticleSystemQuad_setStartRadiusVar\tCCParticleSystemQuad:setStartRadiusVar(_num)", "contents": "CCParticleSystemQuad:setStartRadiusVar(_num)"},
{ "trigger": ":setStartRadiusVar\tCCParticleSystemQuad:setStartRadiusVar(_num)", "contents": "setStartRadiusVar(_num)"},
{ "trigger": "CCParticleSystemQuad_getEndSize\tCCParticleSystemQuad:getEndSize()", "contents": "CCParticleSystemQuad:getEndSize()"},
{ "trigger": ":getEndSize\tCCParticleSystemQuad:getEndSize()", "contents": "getEndSize()"},
{ "trigger": "CCParticleSystemQuad_getTotalParticles\tCCParticleSystemQuad:getTotalParticles()", "contents": "CCParticleSystemQuad:getTotalParticles()"},
{ "trigger": ":getTotalParticles\tCCParticleSystemQuad:getTotalParticles()", "contents": "getTotalParticles()"},
{ "trigger": "CCParticleSystemQuad_getLifeVar\tCCParticleSystemQuad:getLifeVar()", "contents": "CCParticleSystemQuad:getLifeVar()"},
{ "trigger": ":getLifeVar\tCCParticleSystemQuad:getLifeVar()", "contents": "getLifeVar()"},
{ "trigger": "CCParticleSystemQuad_setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "CCParticleSystemQuad:setTotalParticles(_num)"},
{ "trigger": ":setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "setTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_getPositionType\tCCParticleSystemQuad:getPositionType()", "contents": "CCParticleSystemQuad:getPositionType()"},
{ "trigger": ":getPositionType\tCCParticleSystemQuad:getPositionType()", "contents": "getPositionType()"},
{ "trigger": "CCParticleSystemQuad_setEndColor\tCCParticleSystemQuad:setEndColor(_ccColor4F)", "contents": "CCParticleSystemQuad:setEndColor(_ccColor4F)"},
{ "trigger": ":setEndColor\tCCParticleSystemQuad:setEndColor(_ccColor4F)", "contents": "setEndColor(_ccColor4F)"},
{ "trigger": "CCParticleSystemQuad_setLifeVar\tCCParticleSystemQuad:setLifeVar(_num)", "contents": "CCParticleSystemQuad:setLifeVar(_num)"},
{ "trigger": ":setLifeVar\tCCParticleSystemQuad:setLifeVar(_num)", "contents": "setLifeVar(_num)"},
{ "trigger": "CCMenu\t", "contents": "CCMenu"},
{ "trigger": "CCMenu_getColor\tCCMenu:getColor()", "contents": "CCMenu:getColor()"},
{ "trigger": ":getColor\tCCMenu:getColor()", "contents": "getColor()"},
{ "trigger": "CCMenu_createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "CCMenu:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCMenu_setOpacity\tCCMenu:setOpacity(_num)", "contents": "CCMenu:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMenu:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMenu_isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "CCMenu:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenu_createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "CCMenu:createWithItem(_CCMenuItem)"},
{ "trigger": ":createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "createWithItem(_CCMenuItem)"},
{ "trigger": "CCMenu_alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "CCMenu:alignItemsHorizontally()"},
{ "trigger": ":alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "alignItemsHorizontally()"},
{ "trigger": "CCMenu_create\tCCMenu:create()", "contents": "CCMenu:create()"},
{ "trigger": ":create\tCCMenu:create()", "contents": "create()"},
{ "trigger": "CCMenu_setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "CCMenu:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenu_isEnabled\tCCMenu:isEnabled()", "contents": "CCMenu:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenu:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenu_alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "CCMenu:alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": ":alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": "CCMenu_setColor\tCCMenu:setColor(_ccColor3B)", "contents": "CCMenu:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCMenu:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCMenu_setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "CCMenu:setHandlerPriority(_num)"},
{ "trigger": ":setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "setHandlerPriority(_num)"},
{ "trigger": "CCMenu_alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "CCMenu:alignItemsVertically()"},
{ "trigger": ":alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "alignItemsVertically()"},
{ "trigger": "CCMenu_setEnabled\tCCMenu:setEnabled(_boo)", "contents": "CCMenu:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenu:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenu_addChild\tCCMenu:addChild(_CCMenuItem,_num,_num)", "contents": "CCMenu:addChild(_CCMenuItem,_num,_num)"},
{ "trigger": ":addChild\tCCMenu:addChild(_CCMenuItem,_num,_num)", "contents": "addChild(_CCMenuItem,_num,_num)"},
{ "trigger": "CCMenu_getOpacity\tCCMenu:getOpacity()", "contents": "CCMenu:getOpacity()"},
{ "trigger": ":getOpacity\tCCMenu:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMenu_alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "CCMenu:alignItemsVerticallyWithPadding(_num)"},
{ "trigger": ":alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "alignItemsVerticallyWithPadding(_num)"},
{ "trigger": "CCDictionary\t", "contents": "CCDictionary"},
{ "trigger": "CCDictionary_removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "CCDictionary:removeObjectForKey(_num)"},
{ "trigger": ":removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "removeObjectForKey(_num)"},
{ "trigger": "CCDictionary_allKeys\tCCDictionary:allKeys()", "contents": "CCDictionary:allKeys()"},
{ "trigger": ":allKeys\tCCDictionary:allKeys()", "contents": "allKeys()"},
{ "trigger": "CCDictionary_count\tCCDictionary:count()", "contents": "CCDictionary:count()"},
{ "trigger": ":count\tCCDictionary:count()", "contents": "count()"},
{ "trigger": "CCDictionary_removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "CCDictionary:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCDictionary_removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "CCDictionary:removeObjectsForKeys(_CCArray)"},
{ "trigger": ":removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "removeObjectsForKeys(_CCArray)"},
{ "trigger": "CCDictionary_setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "CCDictionary:setObject(_CCObject,_num)"},
{ "trigger": ":setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "setObject(_CCObject,_num)"},
{ "trigger": "CCDictionary_objectForKey\tCCDictionary:objectForKey(_num)", "contents": "CCDictionary:objectForKey(_num)"},
{ "trigger": ":objectForKey\tCCDictionary:objectForKey(_num)", "contents": "objectForKey(_num)"},
{ "trigger": "CCDictionary_valueForKey\tCCDictionary:valueForKey(_num)", "contents": "CCDictionary:valueForKey(_num)"},
{ "trigger": ":valueForKey\tCCDictionary:valueForKey(_num)", "contents": "valueForKey(_num)"},
{ "trigger": "CCDictionary_allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "CCDictionary:allKeysForObject(_CCObject)"},
{ "trigger": ":allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "allKeysForObject(_CCObject)"},
{ "trigger": "CCDictionary_create\tCCDictionary:create()", "contents": "CCDictionary:create()"},
{ "trigger": ":create\tCCDictionary:create()", "contents": "create()"},
{ "trigger": "CCDictionary_createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "CCDictionary:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCDictionary_createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "CCDictionary:createWithDictionary(_CCDictionary)"},
{ "trigger": ":createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "createWithDictionary(_CCDictionary)"},
{ "trigger": "CCRepeatForever\t", "contents": "CCRepeatForever"},
{ "trigger": "CCRepeatForever_create\tCCRepeatForever:create(_CCActionInterval)", "contents": "CCRepeatForever:create(_CCActionInterval)"},
{ "trigger": ":create\tCCRepeatForever:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCRotateTo\t", "contents": "CCRotateTo"},
{ "trigger": "CCRotateTo_create\tCCRotateTo:create(_num,_num)", "contents": "CCRotateTo:create(_num,_num)"},
{ "trigger": ":create\tCCRotateTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCTransitionFlipAngular\t", "contents": "CCTransitionFlipAngular"},
{ "trigger": "CCTransitionFlipAngular_create\tCCTransitionFlipAngular:create(_num,_CCScene,_num)", "contents": "CCTransitionFlipAngular:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionFlipAngular:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCTransitionSplitRows\t", "contents": "CCTransitionSplitRows"},
{ "trigger": "CCTransitionSplitRows_create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "CCTransitionSplitRows:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLayerGradient\t", "contents": "CCLayerGradient"},
{ "trigger": "CCLayerGradient_getEndColor\tCCLayerGradient:getEndColor()", "contents": "CCLayerGradient:getEndColor()"},
{ "trigger": ":getEndColor\tCCLayerGradient:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCLayerGradient_getVector\tCCLayerGradient:getVector()", "contents": "CCLayerGradient:getVector()"},
{ "trigger": ":getVector\tCCLayerGradient:getVector()", "contents": "getVector()"},
{ "trigger": "CCLayerGradient_getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "CCLayerGradient:getEndOpacity()"},
{ "trigger": ":getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "getEndOpacity()"},
{ "trigger": "CCLayerGradient_isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "CCLayerGradient:isCompressedInterpolation()"},
{ "trigger": ":isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "isCompressedInterpolation()"},
{ "trigger": "CCLayerGradient_setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "CCLayerGradient:setStartColor(_ccColor3B)"},
{ "trigger": ":setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "setStartColor(_ccColor3B)"},
{ "trigger": "CCLayerGradient_setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "CCLayerGradient:setVector(_CCPoint)"},
{ "trigger": ":setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "setVector(_CCPoint)"},
{ "trigger": "CCLayerGradient_create\tCCLayerGradient:create(_ccColor4B,_ccColor4B)", "contents": "CCLayerGradient:create(_ccColor4B,_ccColor4B)"},
{ "trigger": ":create\tCCLayerGradient:create(_ccColor4B,_ccColor4B)", "contents": "create(_ccColor4B,_ccColor4B)"},
{ "trigger": "CCLayerGradient_getStartColor\tCCLayerGradient:getStartColor()", "contents": "CCLayerGradient:getStartColor()"},
{ "trigger": ":getStartColor\tCCLayerGradient:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCLayerGradient_getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "CCLayerGradient:getStartOpacity()"},
{ "trigger": ":getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "getStartOpacity()"},
{ "trigger": "CCLayerGradient_setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "CCLayerGradient:setCompressedInterpolation(_boo)"},
{ "trigger": ":setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "setCompressedInterpolation(_boo)"},
{ "trigger": "CCLayerGradient_setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "CCLayerGradient:setStartOpacity(_num)"},
{ "trigger": ":setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "setStartOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "CCLayerGradient:setEndOpacity(_num)"},
{ "trigger": ":setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "setEndOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "CCLayerGradient:setEndColor(_ccColor3B)"},
{ "trigger": ":setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "setEndColor(_ccColor3B)"},
{ "trigger": "CCParticleFireworks\t", "contents": "CCParticleFireworks"},
{ "trigger": "CCParticleFireworks_create\tCCParticleFireworks:create()", "contents": "CCParticleFireworks:create()"},
{ "trigger": ":create\tCCParticleFireworks:create()", "contents": "create()"},
{ "trigger": "CCSkewTo\t", "contents": "CCSkewTo"},
{ "trigger": "CCSkewTo_create\tCCSkewTo:create(_num,_num,_num)", "contents": "CCSkewTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCShow\t", "contents": "CCShow"},
{ "trigger": "CCShow_create\tCCShow:create()", "contents": "CCShow:create()"},
{ "trigger": ":create\tCCShow:create()", "contents": "create()"},
{ "trigger": "CCSkewBy\t", "contents": "CCSkewBy"},
{ "trigger": "CCSkewBy_create\tCCSkewBy:create(_num,_num,_num)", "contents": "CCSkewBy:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewBy:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCPointArray\t", "contents": "CCPointArray"},
{ "trigger": "CCPointArray_replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "CCPointArray:replace(_CCPoint,_num)"},
{ "trigger": ":replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "replace(_CCPoint,_num)"},
{ "trigger": "CCPointArray_reverse\tCCPointArray:reverse()", "contents": "CCPointArray:reverse()"},
{ "trigger": ":reverse\tCCPointArray:reverse()", "contents": "reverse()"},
{ "trigger": "CCPointArray_count\tCCPointArray:count()", "contents": "CCPointArray:count()"},
{ "trigger": ":count\tCCPointArray:count()", "contents": "count()"},
{ "trigger": "CCPointArray_remove\tCCPointArray:remove(_num)", "contents": "CCPointArray:remove(_num)"},
{ "trigger": ":remove\tCCPointArray:remove(_num)", "contents": "remove(_num)"},
{ "trigger": "CCPointArray_get\tCCPointArray:get(_num)", "contents": "CCPointArray:get(_num)"},
{ "trigger": ":get\tCCPointArray:get(_num)", "contents": "get(_num)"},
{ "trigger": "CCPointArray_reverseInline\tCCPointArray:reverseInline()", "contents": "CCPointArray:reverseInline()"},
{ "trigger": ":reverseInline\tCCPointArray:reverseInline()", "contents": "reverseInline()"},
{ "trigger": "CCPointArray_insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "CCPointArray:insert(_CCPoint,_num)"},
{ "trigger": ":insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "insert(_CCPoint,_num)"},
{ "trigger": "CCPointArray_add\tCCPointArray:add(_CCPoint)", "contents": "CCPointArray:add(_CCPoint)"},
{ "trigger": ":add\tCCPointArray:add(_CCPoint)", "contents": "add(_CCPoint)"},
{ "trigger": "CCPointArray_create\tCCPointArray:create(_num)", "contents": "CCPointArray:create(_num)"},
{ "trigger": ":create\tCCPointArray:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCPointArray_removeAll\tCCPointArray:removeAll()", "contents": "CCPointArray:removeAll()"},
{ "trigger": ":removeAll\tCCPointArray:removeAll()", "contents": "removeAll()"},
{ "trigger": "CCFadeOutBLTiles\t", "contents": "CCFadeOutBLTiles"},
{ "trigger": "CCFadeOutBLTiles_create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "CCFadeOutBLTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCParticleFire\t", "contents": "CCParticleFire"},
{ "trigger": "CCParticleFire_create\tCCParticleFire:create()", "contents": "CCParticleFire:create()"},
{ "trigger": ":create\tCCParticleFire:create()", "contents": "create()"},
{ "trigger": "CCTransitionProgressRadialCCW\t", "contents": "CCTransitionProgressRadialCCW"},
{ "trigger": "CCTransitionProgressRadialCCW_create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCHide\t", "contents": "CCHide"},
{ "trigger": "CCHide_create\tCCHide:create()", "contents": "CCHide:create()"},
{ "trigger": ":create\tCCHide:create()", "contents": "create()"},
{ "trigger": "CCFadeOutDownTiles\t", "contents": "CCFadeOutDownTiles"},
{ "trigger": "CCFadeOutDownTiles_create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "CCFadeOutDownTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCScaleTo\t", "contents": "CCScaleTo"},
{ "trigger": "CCScaleTo_create\tCCScaleTo:create(_num,_num)", "contents": "CCScaleTo:create(_num,_num)"},
{ "trigger": ":create\tCCScaleTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCGrid3DAction\t", "contents": "CCGrid3DAction"},
{ "trigger": "CCScheduler\t", "contents": "CCScheduler"},
{ "trigger": "CCScheduler_scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "CCScheduler:scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": ":scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": "CCScheduler_getTimeScale\tCCScheduler:getTimeScale()", "contents": "CCScheduler:getTimeScale()"},
{ "trigger": ":getTimeScale\tCCScheduler:getTimeScale()", "contents": "getTimeScale()"},
{ "trigger": "CCScheduler_unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "CCScheduler:unscheduleScriptEntry(_num)"},
{ "trigger": ":unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "unscheduleScriptEntry(_num)"},
{ "trigger": "CCScheduler_setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "CCScheduler:setTimeScale(_num)"},
{ "trigger": ":setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "setTimeScale(_num)"},
{ "trigger": "CCApplication\t", "contents": "CCApplication"},
{ "trigger": "CCApplication_getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "CCApplication:getCurrentLanguage()"},
{ "trigger": ":getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "getCurrentLanguage()"},
{ "trigger": "CCApplication_sharedApplication\tCCApplication:sharedApplication()", "contents": "CCApplication:sharedApplication()"},
{ "trigger": ":sharedApplication\tCCApplication:sharedApplication()", "contents": "sharedApplication()"},
{ "trigger": "CCApplication_getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "CCApplication:getTargetPlatform()"},
{ "trigger": ":getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "getTargetPlatform()"},
{ "trigger": "CCCircleShape\t", "contents": "CCCircleShape"},
{ "trigger": "CCCircleShape_getSegments\tCCCircleShape:getSegments()", "contents": "CCCircleShape:getSegments()"},
{ "trigger": ":getSegments\tCCCircleShape:getSegments()", "contents": "getSegments()"},
{ "trigger": "CCCircleShape_getAngle\tCCCircleShape:getAngle()", "contents": "CCCircleShape:getAngle()"},
{ "trigger": ":getAngle\tCCCircleShape:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCCircleShape_setScaleY\tCCCircleShape:setScaleY(_num)", "contents": "CCCircleShape:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCCircleShape:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCCircleShape_setScaleX\tCCCircleShape:setScaleX(_num)", "contents": "CCCircleShape:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCCircleShape:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCCircleShape_setAngle\tCCCircleShape:setAngle(_num)", "contents": "CCCircleShape:setAngle(_num)"},
{ "trigger": ":setAngle\tCCCircleShape:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCCircleShape_getRadius\tCCCircleShape:getRadius()", "contents": "CCCircleShape:getRadius()"},
{ "trigger": ":getRadius\tCCCircleShape:getRadius()", "contents": "getRadius()"},
{ "trigger": "CCCircleShape_getScaleY\tCCCircleShape:getScaleY()", "contents": "CCCircleShape:getScaleY()"},
{ "trigger": ":getScaleY\tCCCircleShape:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCCircleShape_create\tCCCircleShape:create(_num)", "contents": "CCCircleShape:create(_num)"},
{ "trigger": ":create\tCCCircleShape:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCCircleShape_getScaleX\tCCCircleShape:getScaleX()", "contents": "CCCircleShape:getScaleX()"},
{ "trigger": ":getScaleX\tCCCircleShape:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCCircleShape_isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "CCCircleShape:isDrawLineToCenter()"},
{ "trigger": ":isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "isDrawLineToCenter()"},
{ "trigger": "CCCircleShape_setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "CCCircleShape:setDrawLineToCenter(_boo)"},
{ "trigger": ":setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "setDrawLineToCenter(_boo)"},
{ "trigger": "CCCircleShape_setRadius\tCCCircleShape:setRadius(_num)", "contents": "CCCircleShape:setRadius(_num)"},
{ "trigger": ":setRadius\tCCCircleShape:setRadius(_num)", "contents": "setRadius(_num)"},
{ "trigger": "CCCircleShape_setSegments\tCCCircleShape:setSegments(_num)", "contents": "CCCircleShape:setSegments(_num)"},
{ "trigger": ":setSegments\tCCCircleShape:setSegments(_num)", "contents": "setSegments(_num)"},
{ "trigger": "CCTransitionScene\t", "contents": "CCTransitionScene"},
{ "trigger": "CCTransitionScene_create\tCCTransitionScene:create(_num,_CCScene)", "contents": "CCTransitionScene:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionScene:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTexture2D\t", "contents": "CCTexture2D"},
{ "trigger": "CCTexture2D_drawAtPoint\tCCTexture2D:drawAtPoint(_CCPoint)", "contents": "CCTexture2D:drawAtPoint(_CCPoint)"},
{ "trigger": ":drawAtPoint\tCCTexture2D:drawAtPoint(_CCPoint)", "contents": "drawAtPoint(_CCPoint)"},
{ "trigger": "CCTexture2D_drawInRect\tCCTexture2D:drawInRect(_CCRect)", "contents": "CCTexture2D:drawInRect(_CCRect)"},
{ "trigger": ":drawInRect\tCCTexture2D:drawInRect(_CCRect)", "contents": "drawInRect(_CCRect)"},
{ "trigger": "CCTexture2D_setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "CCTexture2D:setTexParameters(_ccTexParams)"},
{ "trigger": ":setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "setTexParameters(_ccTexParams)"},
{ "trigger": "CCTexture2D_generateMipmap\tCCTexture2D:generateMipmap()", "contents": "CCTexture2D:generateMipmap()"},
{ "trigger": ":generateMipmap\tCCTexture2D:generateMipmap()", "contents": "generateMipmap()"},
{ "trigger": "CCTexture2D_bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "CCTexture2D:bitsPerPixelForFormat(_num)"},
{ "trigger": ":bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "bitsPerPixelForFormat(_num)"},
{ "trigger": "CCTexture2D_getContentSize\tCCTexture2D:getContentSize()", "contents": "CCTexture2D:getContentSize()"},
{ "trigger": ":getContentSize\tCCTexture2D:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCTexture2D_hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "CCTexture2D:hasMipmaps()"},
{ "trigger": ":hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "hasMipmaps()"},
{ "trigger": "CCTexture2D_getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "CCTexture2D:getPixelsWide()"},
{ "trigger": ":getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "getPixelsWide()"},
{ "trigger": "CCTexture2D_setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "CCTexture2D:setAntiAliasTexParameters()"},
{ "trigger": ":setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "setAntiAliasTexParameters()"},
{ "trigger": "CCTexture2D_setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "CCTexture2D:setDefaultAlphaPixelFormat(_num)"},
{ "trigger": ":setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "setDefaultAlphaPixelFormat(_num)"},
{ "trigger": "CCTexture2D_getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "CCTexture2D:getPixelsHigh()"},
{ "trigger": ":getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "getPixelsHigh()"},
{ "trigger": "CCTexture2D_getMaxS\tCCTexture2D:getMaxS()", "contents": "CCTexture2D:getMaxS()"},
{ "trigger": ":getMaxS\tCCTexture2D:getMaxS()", "contents": "getMaxS()"},
{ "trigger": "CCTexture2D_defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "CCTexture2D:defaultAlphaPixelFormat()"},
{ "trigger": ":defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "defaultAlphaPixelFormat()"},
{ "trigger": "CCTexture2D_stringForFormat\tCCTexture2D:stringForFormat()", "contents": "CCTexture2D:stringForFormat()"},
{ "trigger": ":stringForFormat\tCCTexture2D:stringForFormat()", "contents": "stringForFormat()"},
{ "trigger": "CCTexture2D_getMaxT\tCCTexture2D:getMaxT()", "contents": "CCTexture2D:getMaxT()"},
{ "trigger": ":getMaxT\tCCTexture2D:getMaxT()", "contents": "getMaxT()"},
{ "trigger": "CCTexture2D_setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "CCTexture2D:setAliasTexParameters()"},
{ "trigger": ":setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "setAliasTexParameters()"},
{ "trigger": "CCTexture2D_hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "CCTexture2D:hasPremultipliedAlpha()"},
{ "trigger": ":hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "hasPremultipliedAlpha()"},
{ "trigger": "CCTexture2D_getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "CCTexture2D:getPixelFormat()"},
{ "trigger": ":getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "getPixelFormat()"},
{ "trigger": "CCTexture2D_getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "CCTexture2D:getContentSizeInPixels()"},
{ "trigger": ":getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "getContentSizeInPixels()"},
{ "trigger": "CCTexture2D_getName\tCCTexture2D:getName()", "contents": "CCTexture2D:getName()"},
{ "trigger": ":getName\tCCTexture2D:getName()", "contents": "getName()"},
{ "trigger": "CCTexture2D_setMaxS\tCCTexture2D:setMaxS(_num)", "contents": "CCTexture2D:setMaxS(_num)"},
{ "trigger": ":setMaxS\tCCTexture2D:setMaxS(_num)", "contents": "setMaxS(_num)"},
{ "trigger": "CCTexture2D_setMaxT\tCCTexture2D:setMaxT(_num)", "contents": "CCTexture2D:setMaxT(_num)"},
{ "trigger": ":setMaxT\tCCTexture2D:setMaxT(_num)", "contents": "setMaxT(_num)"},
{ "trigger": "CCEaseBackInOut\t", "contents": "CCEaseBackInOut"},
{ "trigger": "CCEaseBackInOut_create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "CCEaseBackInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleSpiral\t", "contents": "CCParticleSpiral"},
{ "trigger": "CCParticleSpiral_create\tCCParticleSpiral:create()", "contents": "CCParticleSpiral:create()"},
{ "trigger": ":create\tCCParticleSpiral:create()", "contents": "create()"},
{ "trigger": "CCTransitionSplitCols\t", "contents": "CCTransitionSplitCols"},
{ "trigger": "CCTransitionSplitCols_create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "CCTransitionSplitCols:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionJumpZoom\t", "contents": "CCTransitionJumpZoom"},
{ "trigger": "CCTransitionJumpZoom_create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "CCTransitionJumpZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCRotateBy\t", "contents": "CCRotateBy"},
{ "trigger": "CCRotateBy_create\tCCRotateBy:create(_num,_num)", "contents": "CCRotateBy:create(_num,_num)"},
{ "trigger": ":create\tCCRotateBy:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCEaseElasticInOut\t", "contents": "CCEaseElasticInOut"},
{ "trigger": "CCEaseElasticInOut_create\tCCEaseElasticInOut:create(_CCActionInterval,_num)", "contents": "CCEaseElasticInOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseElasticInOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCMenuItemImage\t", "contents": "CCMenuItemImage"},
{ "trigger": "CCMenuItemImage_setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setColor\tCCMenuItemImage:setColor(_ccColor3B)", "contents": "CCMenuItemImage:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCMenuItemImage:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCMenuItemImage_getColor\tCCMenuItemImage:getColor()", "contents": "CCMenuItemImage:getColor()"},
{ "trigger": ":getColor\tCCMenuItemImage:getColor()", "contents": "getColor()"},
{ "trigger": "CCMenuItemImage_setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setOpacity\tCCMenuItemImage:setOpacity(_num)", "contents": "CCMenuItemImage:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMenuItemImage:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMenuItemImage_getOpacity\tCCMenuItemImage:getOpacity()", "contents": "CCMenuItemImage:getOpacity()"},
{ "trigger": ":getOpacity\tCCMenuItemImage:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMenuItemImage_setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_create\tCCMenuItemImage:create()", "contents": "CCMenuItemImage:create()"},
{ "trigger": ":create\tCCMenuItemImage:create()", "contents": "create()"},
{ "trigger": "CCTransitionProgressInOut\t", "contents": "CCTransitionProgressInOut"},
{ "trigger": "CCTransitionProgressInOut_create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "CCTransitionProgressInOut:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpeed\t", "contents": "CCSpeed"},
{ "trigger": "CCSpeed_getSpeed\tCCSpeed:getSpeed()", "contents": "CCSpeed:getSpeed()"},
{ "trigger": ":getSpeed\tCCSpeed:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCSpeed_setSpeed\tCCSpeed:setSpeed(_num)", "contents": "CCSpeed:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCSpeed:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCSpeed_create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "CCSpeed:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCSplitRows\t", "contents": "CCSplitRows"},
{ "trigger": "CCSplitRows_create\tCCSplitRows:create(_num,_num)", "contents": "CCSplitRows:create(_num,_num)"},
{ "trigger": ":create\tCCSplitRows:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCFollow\t", "contents": "CCFollow"},
{ "trigger": "CCFollow_isBoundarySet\tCCFollow:isBoundarySet()", "contents": "CCFollow:isBoundarySet()"},
{ "trigger": ":isBoundarySet\tCCFollow:isBoundarySet()", "contents": "isBoundarySet()"},
{ "trigger": "CCFollow_setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "CCFollow:setBoudarySet(_boo)"},
{ "trigger": ":setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "setBoudarySet(_boo)"},
{ "trigger": "CCFollow_create\tCCFollow:create(_CCNode)", "contents": "CCFollow:create(_CCNode)"},
{ "trigger": ":create\tCCFollow:create(_CCNode)", "contents": "create(_CCNode)"},
{ "trigger": "CCReuseGrid\t", "contents": "CCReuseGrid"},
{ "trigger": "CCReuseGrid_create\tCCReuseGrid:create(_num)", "contents": "CCReuseGrid:create(_num)"},
{ "trigger": ":create\tCCReuseGrid:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTransitionProgressOutIn\t", "contents": "CCTransitionProgressOutIn"},
{ "trigger": "CCTransitionProgressOutIn_create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "CCTransitionProgressOutIn:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTMXObjectGroup\t", "contents": "CCTMXObjectGroup"},
{ "trigger": "CCTMXObjectGroup_getObjects\tCCTMXObjectGroup:getObjects()", "contents": "CCTMXObjectGroup:getObjects()"},
{ "trigger": ":getObjects\tCCTMXObjectGroup:getObjects()", "contents": "getObjects()"},
{ "trigger": "CCTMXObjectGroup_setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "CCTMXObjectGroup:setPositionOffset(_CCPoint)"},
{ "trigger": ":setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "setPositionOffset(_CCPoint)"},
{ "trigger": "CCTMXObjectGroup_setObjects\tCCTMXObjectGroup:setObjects(_CCArray)", "contents": "CCTMXObjectGroup:setObjects(_CCArray)"},
{ "trigger": ":setObjects\tCCTMXObjectGroup:setObjects(_CCArray)", "contents": "setObjects(_CCArray)"},
{ "trigger": "CCTMXObjectGroup_setProperties\tCCTMXObjectGroup:setProperties(_CCDictionary)", "contents": "CCTMXObjectGroup:setProperties(_CCDictionary)"},
{ "trigger": ":setProperties\tCCTMXObjectGroup:setProperties(_CCDictionary)", "contents": "setProperties(_CCDictionary)"},
{ "trigger": "CCTMXObjectGroup_objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "CCTMXObjectGroup:objectNamed(_str)"},
{ "trigger": ":objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "objectNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "CCTMXObjectGroup:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_getProperties\tCCTMXObjectGroup:getProperties()", "contents": "CCTMXObjectGroup:getProperties()"},
{ "trigger": ":getProperties\tCCTMXObjectGroup:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXObjectGroup_getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "CCTMXObjectGroup:getPositionOffset()"},
{ "trigger": ":getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "getPositionOffset()"},
{ "trigger": "CCTMXObjectGroup_getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "CCTMXObjectGroup:getGroupName()"},
{ "trigger": ":getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "getGroupName()"},
{ "trigger": "CCTMXObjectGroup_setGroupName\tCCTMXObjectGroup:setGroupName(_str)", "contents": "CCTMXObjectGroup:setGroupName(_str)"},
{ "trigger": ":setGroupName\tCCTMXObjectGroup:setGroupName(_str)", "contents": "setGroupName(_str)"},
{ "trigger": "CCPoint\t", "contents": "CCPoint"},
{ "trigger": "CCPoint_call\tCCPoint:call()", "contents": "CCPoint:call()"},
{ "trigger": ":call\tCCPoint:call()", "contents": "call()"},
{ "trigger": "CCPoint_new\tCCPoint:new()", "contents": "CCPoint:new()"},
{ "trigger": ":new\tCCPoint:new()", "contents": "new()"},
{ "trigger": "CCPoint_equals\tCCPoint:equals(_const_CCPoint)", "contents": "CCPoint:equals(_const_CCPoint)"},
{ "trigger": ":equals\tCCPoint:equals(_const_CCPoint)", "contents": "equals(_const_CCPoint)"},
{ "trigger": "CCPoint_new_local\tCCPoint:new_local()", "contents": "CCPoint:new_local()"},
{ "trigger": ":new_local\tCCPoint:new_local()", "contents": "new_local()"},
{ "trigger": "CCLabelTTF\t", "contents": "CCLabelTTF"},
{ "trigger": "CCLabelTTF_getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "CCLabelTTF:getVerticalAlignment()"},
{ "trigger": ":getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "getVerticalAlignment()"},
{ "trigger": "CCLabelTTF_setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "CCLabelTTF:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCLabelTTF_getFontName\tCCLabelTTF:getFontName()", "contents": "CCLabelTTF:getFontName()"},
{ "trigger": ":getFontName\tCCLabelTTF:getFontName()", "contents": "getFontName()"},
{ "trigger": "CCLabelTTF_setString\tCCLabelTTF:setString(_str)", "contents": "CCLabelTTF:setString(_str)"},
{ "trigger": ":setString\tCCLabelTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelTTF_getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "CCLabelTTF:getHorizontalAlignment()"},
{ "trigger": ":getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "getHorizontalAlignment()"},
{ "trigger": "CCLabelTTF_setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "CCLabelTTF:setVerticalAlignment(_num)"},
{ "trigger": ":setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "setVerticalAlignment(_num)"},
{ "trigger": "CCLabelTTF_setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "CCLabelTTF:setHorizontalAlignment(_num)"},
{ "trigger": ":setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "setHorizontalAlignment(_num)"},
{ "trigger": "CCLabelTTF_create\tCCLabelTTF:create()", "contents": "CCLabelTTF:create()"},
{ "trigger": ":create\tCCLabelTTF:create()", "contents": "create()"},
{ "trigger": "CCLabelTTF_setFontName\tCCLabelTTF:setFontName(_str)", "contents": "CCLabelTTF:setFontName(_str)"},
{ "trigger": ":setFontName\tCCLabelTTF:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCLabelTTF_getFontSize\tCCLabelTTF:getFontSize()", "contents": "CCLabelTTF:getFontSize()"},
{ "trigger": ":getFontSize\tCCLabelTTF:getFontSize()", "contents": "getFontSize()"},
{ "trigger": "CCLabelTTF_getDimensions\tCCLabelTTF:getDimensions()", "contents": "CCLabelTTF:getDimensions()"},
{ "trigger": ":getDimensions\tCCLabelTTF:getDimensions()", "contents": "getDimensions()"},
{ "trigger": "CCLabelTTF_setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "CCLabelTTF:setDimensions(_CCSize)"},
{ "trigger": ":setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "setDimensions(_CCSize)"},
{ "trigger": "CCLabelTTF_getString\tCCLabelTTF:getString()", "contents": "CCLabelTTF:getString()"},
{ "trigger": ":getString\tCCLabelTTF:getString()", "contents": "getString()"},
{ "trigger": "CCActionManager\t", "contents": "CCActionManager"},
{ "trigger": "CCActionManager_resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "CCActionManager:resumeTargets(_CCSet)"},
{ "trigger": ":resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "resumeTargets(_CCSet)"},
{ "trigger": "CCActionManager_resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "CCActionManager:resumeTarget(_CCObject)"},
{ "trigger": ":resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "resumeTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeAllActions\tCCActionManager:removeAllActions()", "contents": "CCActionManager:removeAllActions()"},
{ "trigger": ":removeAllActions\tCCActionManager:removeAllActions()", "contents": "removeAllActions()"},
{ "trigger": "CCActionManager_pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "CCActionManager:pauseTarget(_CCObject)"},
{ "trigger": ":pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "pauseTarget(_CCObject)"},
{ "trigger": "CCActionManager_numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "CCActionManager:numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": ":numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "CCActionManager:removeActionByTag(_num,_CCObject)"},
{ "trigger": ":removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "removeActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "CCActionManager:removeAllActionsFromTarget(_CCObject)"},
{ "trigger": ":removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "removeAllActionsFromTarget(_CCObject)"},
{ "trigger": "CCActionManager_pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "CCActionManager:pauseAllRunningActions()"},
{ "trigger": ":pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "pauseAllRunningActions()"},
{ "trigger": "CCActionManager_getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "CCActionManager:getActionByTag(_num,_CCObject)"},
{ "trigger": ":getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "getActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "CCActionManager:addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": ":addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": "CCActionManager_removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "CCActionManager:removeAction(_CCAction)"},
{ "trigger": ":removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "removeAction(_CCAction)"},
{ "trigger": "CCParticleMeteor\t", "contents": "CCParticleMeteor"},
{ "trigger": "CCParticleMeteor_create\tCCParticleMeteor:create()", "contents": "CCParticleMeteor:create()"},
{ "trigger": ":create\tCCParticleMeteor:create()", "contents": "create()"},
{ "trigger": "CCTransitionPageTurn\t", "contents": "CCTransitionPageTurn"},
{ "trigger": "CCTransitionPageTurn_create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "CCTransitionPageTurn:create(_num,_CCScene,_boo)"},
{ "trigger": ":create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "create(_num,_CCScene,_boo)"},
{ "trigger": "CCRepeat\t", "contents": "CCRepeat"},
{ "trigger": "CCRepeat_create\tCCRepeat:create(_CCActionInterval,_num)", "contents": "CCRepeat:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCRepeat:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCScaleBy\t", "contents": "CCScaleBy"},
{ "trigger": "CCScaleBy_create\tCCScaleBy:create(_num,_num,_num)", "contents": "CCScaleBy:create(_num,_num,_num)"},
{ "trigger": ":create\tCCScaleBy:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCEaseExponentialIn\t", "contents": "CCEaseExponentialIn"},
{ "trigger": "CCEaseExponentialIn_create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "CCEaseExponentialIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCDirector\t", "contents": "CCDirector"},
{ "trigger": "CCDirector_replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "CCDirector:replaceScene(_CCScene)"},
{ "trigger": ":replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "replaceScene(_CCScene)"},
{ "trigger": "CCDirector_getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "CCDirector:getTouchDispatcher()"},
{ "trigger": ":getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "getTouchDispatcher()"},
{ "trigger": "CCDirector_getOpenGLView\tCCDirector:getOpenGLView()", "contents": "CCDirector:getOpenGLView()"},
{ "trigger": ":getOpenGLView\tCCDirector:getOpenGLView()", "contents": "getOpenGLView()"},
{ "trigger": "CCDirector_setNotificationNode\tCCDirector:setNotificationNode(_CCNode)", "contents": "CCDirector:setNotificationNode(_CCNode)"},
{ "trigger": ":setNotificationNode\tCCDirector:setNotificationNode(_CCNode)", "contents": "setNotificationNode(_CCNode)"},
{ "trigger": "CCDirector_getNotificationNode\tCCDirector:getNotificationNode()", "contents": "CCDirector:getNotificationNode()"},
{ "trigger": ":getNotificationNode\tCCDirector:getNotificationNode()", "contents": "getNotificationNode()"},
{ "trigger": "CCDirector_getScheduler\tCCDirector:getScheduler()", "contents": "CCDirector:getScheduler()"},
{ "trigger": ":getScheduler\tCCDirector:getScheduler()", "contents": "getScheduler()"},
{ "trigger": "CCDirector_getProjection\tCCDirector:getProjection()", "contents": "CCDirector:getProjection()"},
{ "trigger": ":getProjection\tCCDirector:getProjection()", "contents": "getProjection()"},
{ "trigger": "CCDirector_runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "CCDirector:runWithScene(_CCScene)"},
{ "trigger": ":runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "runWithScene(_CCScene)"},
{ "trigger": "CCDirector_setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "CCDirector:setContentScaleFactor(_num)"},
{ "trigger": ":setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "setContentScaleFactor(_num)"},
{ "trigger": "CCDirector_pause\tCCDirector:pause()", "contents": "CCDirector:pause()"},
{ "trigger": ":pause\tCCDirector:pause()", "contents": "pause()"},
{ "trigger": "CCDirector_getTotalFrames\tCCDirector:getTotalFrames()", "contents": "CCDirector:getTotalFrames()"},
{ "trigger": ":getTotalFrames\tCCDirector:getTotalFrames()", "contents": "getTotalFrames()"},
{ "trigger": "CCDirector_setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "CCDirector:setDepthTest(_boo)"},
{ "trigger": ":setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "setDepthTest(_boo)"},
{ "trigger": "CCDirector_setProjection\tCCDirector:setProjection(_num)", "contents": "CCDirector:setProjection(_num)"},
{ "trigger": ":setProjection\tCCDirector:setProjection(_num)", "contents": "setProjection(_num)"},
{ "trigger": "CCDirector_getVisibleSize\tCCDirector:getVisibleSize()", "contents": "CCDirector:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCDirector:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCDirector_pushScene\tCCDirector:pushScene(_CCScene)", "contents": "CCDirector:pushScene(_CCScene)"},
{ "trigger": ":pushScene\tCCDirector:pushScene(_CCScene)", "contents": "pushScene(_CCScene)"},
{ "trigger": "CCDirector_sharedDirector\tCCDirector:sharedDirector()", "contents": "CCDirector:sharedDirector()"},
{ "trigger": ":sharedDirector\tCCDirector:sharedDirector()", "contents": "sharedDirector()"},
{ "trigger": "CCDirector_endToLua\tCCDirector:endToLua()", "contents": "CCDirector:endToLua()"},
{ "trigger": ":endToLua\tCCDirector:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCDirector_convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "CCDirector:convertToGL(_CCPoint)"},
{ "trigger": ":convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "convertToGL(_CCPoint)"},
{ "trigger": "CCDirector_getRunningScene\tCCDirector:getRunningScene()", "contents": "CCDirector:getRunningScene()"},
{ "trigger": ":getRunningScene\tCCDirector:getRunningScene()", "contents": "getRunningScene()"},
{ "trigger": "CCDirector_getWinSize\tCCDirector:getWinSize()", "contents": "CCDirector:getWinSize()"},
{ "trigger": ":getWinSize\tCCDirector:getWinSize()", "contents": "getWinSize()"},
{ "trigger": "CCDirector_getActionManager\tCCDirector:getActionManager()", "contents": "CCDirector:getActionManager()"},
{ "trigger": ":getActionManager\tCCDirector:getActionManager()", "contents": "getActionManager()"},
{ "trigger": "CCDirector_isPaused\tCCDirector:isPaused()", "contents": "CCDirector:isPaused()"},
{ "trigger": ":isPaused\tCCDirector:isPaused()", "contents": "isPaused()"},
{ "trigger": "CCDirector_popScene\tCCDirector:popScene()", "contents": "CCDirector:popScene()"},
{ "trigger": ":popScene\tCCDirector:popScene()", "contents": "popScene()"},
{ "trigger": "CCDirector_convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "CCDirector:convertToUI(_CCPoint)"},
{ "trigger": ":convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "convertToUI(_CCPoint)"},
{ "trigger": "CCDirector_getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "CCDirector:getAnimationInterval()"},
{ "trigger": ":getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "getAnimationInterval()"},
{ "trigger": "CCDirector_getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "CCDirector:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCDirector_setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "CCDirector:setDisplayStats(_boo)"},
{ "trigger": ":setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "setDisplayStats(_boo)"},
{ "trigger": "CCDirector_purgeCachedData\tCCDirector:purgeCachedData()", "contents": "CCDirector:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCDirector:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCDirector_resume\tCCDirector:resume()", "contents": "CCDirector:resume()"},
{ "trigger": ":resume\tCCDirector:resume()", "contents": "resume()"},
{ "trigger": "CCDirector_getZEye\tCCDirector:getZEye()", "contents": "CCDirector:getZEye()"},
{ "trigger": ":getZEye\tCCDirector:getZEye()", "contents": "getZEye()"},
{ "trigger": "CCDirector_getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "CCDirector:getWinSizeInPixels()"},
{ "trigger": ":getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "getWinSizeInPixels()"},
{ "trigger": "CCDirector_getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "CCDirector:getContentScaleFactor()"},
{ "trigger": ":getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "getContentScaleFactor()"},
{ "trigger": "CCDirector_isDisplayStats\tCCDirector:isDisplayStats()", "contents": "CCDirector:isDisplayStats()"},
{ "trigger": ":isDisplayStats\tCCDirector:isDisplayStats()", "contents": "isDisplayStats()"},
{ "trigger": "CCParticleSnow\t", "contents": "CCParticleSnow"},
{ "trigger": "CCParticleSnow_create\tCCParticleSnow:create()", "contents": "CCParticleSnow:create()"},
{ "trigger": ":create\tCCParticleSnow:create()", "contents": "create()"},
{ "trigger": "ccTexParams\t", "contents": "ccTexParams"},
{ "trigger": "ccTexParams_call\tccTexParams:call()", "contents": "ccTexParams:call()"},
{ "trigger": ":call\tccTexParams:call()", "contents": "call()"},
{ "trigger": "ccTexParams_new\tccTexParams:new()", "contents": "ccTexParams:new()"},
{ "trigger": ":new\tccTexParams:new()", "contents": "new()"},
{ "trigger": "ccTexParams_new_local\tccTexParams:new_local()", "contents": "ccTexParams:new_local()"},
{ "trigger": ":new_local\tccTexParams:new_local()", "contents": "new_local()"},
{ "trigger": "CCCardinalSplineTo\t", "contents": "CCCardinalSplineTo"},
{ "trigger": "CCCardinalSplineTo_getPoints\tCCCardinalSplineTo:getPoints()", "contents": "CCCardinalSplineTo:getPoints()"},
{ "trigger": ":getPoints\tCCCardinalSplineTo:getPoints()", "contents": "getPoints()"},
{ "trigger": "CCCardinalSplineTo_create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineTo:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCCardinalSplineTo_setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "CCCardinalSplineTo:setPoints(_CCPointArray)"},
{ "trigger": ":setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "setPoints(_CCPointArray)"},
{ "trigger": "CCTransitionFadeBL\t", "contents": "CCTransitionFadeBL"},
{ "trigger": "CCTransitionFadeBL_create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "CCTransitionFadeBL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCParticleFlower\t", "contents": "CCParticleFlower"},
{ "trigger": "CCParticleFlower_create\tCCParticleFlower:create()", "contents": "CCParticleFlower:create()"},
{ "trigger": ":create\tCCParticleFlower:create()", "contents": "create()"},
{ "trigger": "CCActionEase\t", "contents": "CCActionEase"},
{ "trigger": "CCActionEase_create\tCCActionEase:create(_CCActionInterval)", "contents": "CCActionEase:create(_CCActionInterval)"},
{ "trigger": ":create\tCCActionEase:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseInOut\t", "contents": "CCEaseInOut"},
{ "trigger": "CCEaseInOut_create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "CCEaseInOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCCamera\t", "contents": "CCCamera"},
{ "trigger": "CCCamera_setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "CCCamera:setCenterXYZ(_num,_num,_num)"},
{ "trigger": ":setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "setCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_isDirty\tCCCamera:isDirty()", "contents": "CCCamera:isDirty()"},
{ "trigger": ":isDirty\tCCCamera:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCCamera_getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "CCCamera:getUpXYZ(_num,_num,_num)"},
{ "trigger": ":getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "getUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "CCCamera:getCenterXYZ(_num,_num,_num)"},
{ "trigger": ":getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "getCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_restore\tCCCamera:restore()", "contents": "CCCamera:restore()"},
{ "trigger": ":restore\tCCCamera:restore()", "contents": "restore()"},
{ "trigger": "CCCamera_setDirty\tCCCamera:setDirty(_boo)", "contents": "CCCamera:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCCamera:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCCamera_description\tCCCamera:description()", "contents": "CCCamera:description()"},
{ "trigger": ":description\tCCCamera:description()", "contents": "description()"},
{ "trigger": "CCCamera_setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "CCCamera:setUpXYZ(_num,_num,_num)"},
{ "trigger": ":setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "setUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getZEye\tCCCamera:getZEye()", "contents": "CCCamera:getZEye()"},
{ "trigger": ":getZEye\tCCCamera:getZEye()", "contents": "getZEye()"},
{ "trigger": "CCCamera_locate\tCCCamera:locate()", "contents": "CCCamera:locate()"},
{ "trigger": ":locate\tCCCamera:locate()", "contents": "locate()"},
{ "trigger": "CCCamera_getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "CCCamera:getEyeXYZ(_num,_num,_num)"},
{ "trigger": ":getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "getEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "CCCamera:setEyeXYZ(_num,_num,_num)"},
{ "trigger": ":setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "setEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCTMXMapInfo\t", "contents": "CCTMXMapInfo"},
{ "trigger": "CCTMXMapInfo_setTilesets\tCCTMXMapInfo:setTilesets(_CCArray)", "contents": "CCTMXMapInfo:setTilesets(_CCArray)"},
{ "trigger": ":setTilesets\tCCTMXMapInfo:setTilesets(_CCArray)", "contents": "setTilesets(_CCArray)"},
{ "trigger": "CCTMXMapInfo_setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "CCTMXMapInfo:setTileProperties(_CCDictionary)"},
{ "trigger": ":setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "setTileProperties(_CCDictionary)"},
{ "trigger": "CCTMXMapInfo_startElement\tCCTMXMapInfo:startElement(_userdata,_str,_str)", "contents": "CCTMXMapInfo:startElement(_userdata,_str,_str)"},
{ "trigger": ":startElement\tCCTMXMapInfo:startElement(_userdata,_str,_str)", "contents": "startElement(_userdata,_str,_str)"},
{ "trigger": "CCTMXMapInfo_setParentElement\tCCTMXMapInfo:setParentElement(_num)", "contents": "CCTMXMapInfo:setParentElement(_num)"},
{ "trigger": ":setParentElement\tCCTMXMapInfo:setParentElement(_num)", "contents": "setParentElement(_num)"},
{ "trigger": "CCTMXMapInfo_getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "CCTMXMapInfo:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXMapInfo_parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "CCTMXMapInfo:parseXMLString(_str)"},
{ "trigger": ":parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "parseXMLString(_str)"},
{ "trigger": "CCTMXMapInfo_endElement\tCCTMXMapInfo:endElement(_userdata,_str)", "contents": "CCTMXMapInfo:endElement(_userdata,_str)"},
{ "trigger": ":endElement\tCCTMXMapInfo:endElement(_userdata,_str)", "contents": "endElement(_userdata,_str)"},
{ "trigger": "CCTMXMapInfo_getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "CCTMXMapInfo:getStoringCharacters()"},
{ "trigger": ":getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "getStoringCharacters()"},
{ "trigger": "CCTMXMapInfo_setOrientation\tCCTMXMapInfo:setOrientation(_num)", "contents": "CCTMXMapInfo:setOrientation(_num)"},
{ "trigger": ":setOrientation\tCCTMXMapInfo:setOrientation(_num)", "contents": "setOrientation(_num)"},
{ "trigger": "CCTMXMapInfo_getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "CCTMXMapInfo:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXMapInfo_setObjectGroups\tCCTMXMapInfo:setObjectGroups(_CCArray)", "contents": "CCTMXMapInfo:setObjectGroups(_CCArray)"},
{ "trigger": ":setObjectGroups\tCCTMXMapInfo:setObjectGroups(_CCArray)", "contents": "setObjectGroups(_CCArray)"},
{ "trigger": "CCTMXMapInfo_formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "CCTMXMapInfo:formatWithXML(_str,_str)"},
{ "trigger": ":formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "formatWithXML(_str,_str)"},
{ "trigger": "CCTMXMapInfo_getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "CCTMXMapInfo:getLayerAttribs()"},
{ "trigger": ":getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "getLayerAttribs()"},
{ "trigger": "CCTMXMapInfo_getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "CCTMXMapInfo:getOrientation()"},
{ "trigger": ":getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "getOrientation()"},
{ "trigger": "CCTMXMapInfo_setLayerAttribs\tCCTMXMapInfo:setLayerAttribs(_num)", "contents": "CCTMXMapInfo:setLayerAttribs(_num)"},
{ "trigger": ":setLayerAttribs\tCCTMXMapInfo:setLayerAttribs(_num)", "contents": "setLayerAttribs(_num)"},
{ "trigger": "CCTMXMapInfo_getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "CCTMXMapInfo:getCurrentString()"},
{ "trigger": ":getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "getCurrentString()"},
{ "trigger": "CCTMXMapInfo_setTileSize\tCCTMXMapInfo:setTileSize(_CCSize)", "contents": "CCTMXMapInfo:setTileSize(_CCSize)"},
{ "trigger": ":setTileSize\tCCTMXMapInfo:setTileSize(_CCSize)", "contents": "setTileSize(_CCSize)"},
{ "trigger": "CCTMXMapInfo_getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "CCTMXMapInfo:getParentGID()"},
{ "trigger": ":getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "getParentGID()"},
{ "trigger": "CCTMXMapInfo_getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "CCTMXMapInfo:getParentElement()"},
{ "trigger": ":getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "getParentElement()"},
{ "trigger": "CCTMXMapInfo_getProperties\tCCTMXMapInfo:getProperties()", "contents": "CCTMXMapInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXMapInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXMapInfo_getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "CCTMXMapInfo:getTilesets()"},
{ "trigger": ":getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "getTilesets()"},
{ "trigger": "CCTMXMapInfo_setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "CCTMXMapInfo:setCurrentString(_str)"},
{ "trigger": ":setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "setCurrentString(_str)"},
{ "trigger": "CCTMXMapInfo_parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "CCTMXMapInfo:parseXMLFile(_str)"},
{ "trigger": ":parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "parseXMLFile(_str)"},
{ "trigger": "CCTMXMapInfo_getLayers\tCCTMXMapInfo:getLayers()", "contents": "CCTMXMapInfo:getLayers()"},
{ "trigger": ":getLayers\tCCTMXMapInfo:getLayers()", "contents": "getLayers()"},
{ "trigger": "CCTMXMapInfo_setStoringCharacters\tCCTMXMapInfo:setStoringCharacters(_boo)", "contents": "CCTMXMapInfo:setStoringCharacters(_boo)"},
{ "trigger": ":setStoringCharacters\tCCTMXMapInfo:setStoringCharacters(_boo)", "contents": "setStoringCharacters(_boo)"},
{ "trigger": "CCTMXMapInfo_formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "CCTMXMapInfo:formatWithTMXFile(_str)"},
{ "trigger": ":formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "formatWithTMXFile(_str)"},
{ "trigger": "CCTMXMapInfo_getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "CCTMXMapInfo:getTileProperties()"},
{ "trigger": ":getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "getTileProperties()"},
{ "trigger": "CCTMXMapInfo_setProperties\tCCTMXMapInfo:setProperties(_CCDictionary)", "contents": "CCTMXMapInfo:setProperties(_CCDictionary)"},
{ "trigger": ":setProperties\tCCTMXMapInfo:setProperties(_CCDictionary)", "contents": "setProperties(_CCDictionary)"},
{ "trigger": "CCTMXMapInfo_textHandler\tCCTMXMapInfo:textHandler(_userdata,_str,_num)", "contents": "CCTMXMapInfo:textHandler(_userdata,_str,_num)"},
{ "trigger": ":textHandler\tCCTMXMapInfo:textHandler(_userdata,_str,_num)", "contents": "textHandler(_userdata,_str,_num)"},
{ "trigger": "CCTMXMapInfo_getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "CCTMXMapInfo:getTMXFileName()"},
{ "trigger": ":getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "getTMXFileName()"},
{ "trigger": "CCTMXMapInfo_setParentGID\tCCTMXMapInfo:setParentGID(_num)", "contents": "CCTMXMapInfo:setParentGID(_num)"},
{ "trigger": ":setParentGID\tCCTMXMapInfo:setParentGID(_num)", "contents": "setParentGID(_num)"},
{ "trigger": "CCTMXMapInfo_getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "CCTMXMapInfo:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCTMXMapInfo_setMapSize\tCCTMXMapInfo:setMapSize(_CCSize)", "contents": "CCTMXMapInfo:setMapSize(_CCSize)"},
{ "trigger": ":setMapSize\tCCTMXMapInfo:setMapSize(_CCSize)", "contents": "setMapSize(_CCSize)"},
{ "trigger": "CCTMXMapInfo_setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "CCTMXMapInfo:setTMXFileName(_str)"},
{ "trigger": ":setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "setTMXFileName(_str)"},
{ "trigger": "CCTMXMapInfo_setLayers\tCCTMXMapInfo:setLayers(_CCArray)", "contents": "CCTMXMapInfo:setLayers(_CCArray)"},
{ "trigger": ":setLayers\tCCTMXMapInfo:setLayers(_CCArray)", "contents": "setLayers(_CCArray)"},
{ "trigger": "CCTwirl\t", "contents": "CCTwirl"},
{ "trigger": "CCTwirl_getAmplitude\tCCTwirl:getAmplitude()", "contents": "CCTwirl:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCTwirl:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCTwirl_setPosition\tCCTwirl:setPosition(_CCPoint)", "contents": "CCTwirl:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCTwirl:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCTwirl_getPosition\tCCTwirl:getPosition()", "contents": "CCTwirl:getPosition()"},
{ "trigger": ":getPosition\tCCTwirl:getPosition()", "contents": "getPosition()"},
{ "trigger": "CCTwirl_create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "CCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": "CCTwirl_getAmplitudeRate\tCCTwirl:getAmplitudeRate()", "contents": "CCTwirl:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCTwirl:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCTwirl_setAmplitudeRate\tCCTwirl:setAmplitudeRate(_num)", "contents": "CCTwirl:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCTwirl:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCTwirl_setAmplitude\tCCTwirl:setAmplitude(_num)", "contents": "CCTwirl:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCTwirl:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCTransitionShrinkGrow\t", "contents": "CCTransitionShrinkGrow"},
{ "trigger": "CCTransitionShrinkGrow_create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "CCTransitionShrinkGrow:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCMenuItemFont\t", "contents": "CCMenuItemFont"},
{ "trigger": "CCMenuItemFont_fontName\tCCMenuItemFont:fontName()", "contents": "CCMenuItemFont:fontName()"},
{ "trigger": ":fontName\tCCMenuItemFont:fontName()", "contents": "fontName()"},
{ "trigger": "CCMenuItemFont_setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "CCMenuItemFont:setFontName(_str)"},
{ "trigger": ":setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCMenuItemFont_setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "CCMenuItemFont:setFontNameObj(_str)"},
{ "trigger": ":setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "setFontNameObj(_str)"},
{ "trigger": "CCMenuItemFont_setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "CCMenuItemFont:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCMenuItemFont_setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "CCMenuItemFont:setFontSizeObj(_num)"},
{ "trigger": ":setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "setFontSizeObj(_num)"},
{ "trigger": "CCMenuItemFont_fontSize\tCCMenuItemFont:fontSize()", "contents": "CCMenuItemFont:fontSize()"},
{ "trigger": ":fontSize\tCCMenuItemFont:fontSize()", "contents": "fontSize()"},
{ "trigger": "CCMenuItemFont_create\tCCMenuItemFont:create(_str)", "contents": "CCMenuItemFont:create(_str)"},
{ "trigger": ":create\tCCMenuItemFont:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCMenuItemFont_fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "CCMenuItemFont:fontNameObj()"},
{ "trigger": ":fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "fontNameObj()"},
{ "trigger": "CCMenuItemFont_fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "CCMenuItemFont:fontSizeObj()"},
{ "trigger": ":fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "fontSizeObj()"},
{ "trigger": "CCActionCamera\t", "contents": "CCActionCamera"},
{ "trigger": "CCTransitionFade\t", "contents": "CCTransitionFade"},
{ "trigger": "CCTransitionFade_create\tCCTransitionFade:create(_num,_CCScene,_ccColor3B)", "contents": "CCTransitionFade:create(_num,_CCScene,_ccColor3B)"},
{ "trigger": ":create\tCCTransitionFade:create(_num,_CCScene,_ccColor3B)", "contents": "create(_num,_CCScene,_ccColor3B)"},
{ "trigger": "CCNetwork\t", "contents": "CCNetwork"},
{ "trigger": "CCNetwork_isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "CCNetwork:isHostNameReachable(_str)"},
{ "trigger": ":isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "isHostNameReachable(_str)"},
{ "trigger": "CCNetwork_createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "CCNetwork:createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": ":createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": "CCNetwork_isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "CCNetwork:isInternetConnectionAvailable()"},
{ "trigger": ":isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "isInternetConnectionAvailable()"},
{ "trigger": "CCNetwork_isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "CCNetwork:isLocalWiFiAvailable()"},
{ "trigger": ":isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "isLocalWiFiAvailable()"},
{ "trigger": "CCNetwork_getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "CCNetwork:getInternetConnectionStatus()"},
{ "trigger": ":getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "getInternetConnectionStatus()"},
{ "trigger": "CCClippingNode\t", "contents": "CCClippingNode"},
{ "trigger": "CCClippingNode_setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "CCClippingNode:setAlphaThreshold(_num)"},
{ "trigger": ":setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "setAlphaThreshold(_num)"},
{ "trigger": "CCClippingNode_getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "CCClippingNode:getAlphaThreshold()"},
{ "trigger": ":getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "getAlphaThreshold()"},
{ "trigger": "CCClippingNode_getStencil\tCCClippingNode:getStencil()", "contents": "CCClippingNode:getStencil()"},
{ "trigger": ":getStencil\tCCClippingNode:getStencil()", "contents": "getStencil()"},
{ "trigger": "CCClippingNode_setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "CCClippingNode:setStencil(_CCNode)"},
{ "trigger": ":setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "setStencil(_CCNode)"},
{ "trigger": "CCClippingNode_setInverted\tCCClippingNode:setInverted(_boo)", "contents": "CCClippingNode:setInverted(_boo)"},
{ "trigger": ":setInverted\tCCClippingNode:setInverted(_boo)", "contents": "setInverted(_boo)"},
{ "trigger": "CCClippingNode_isInverted\tCCClippingNode:isInverted()", "contents": "CCClippingNode:isInverted()"},
{ "trigger": ":isInverted\tCCClippingNode:isInverted()", "contents": "isInverted()"},
{ "trigger": "CCClippingNode_create\tCCClippingNode:create(_CCNode)", "contents": "CCClippingNode:create(_CCNode)"},
{ "trigger": ":create\tCCClippingNode:create(_CCNode)", "contents": "create(_CCNode)"},
{ "trigger": "CCProgressTimer\t", "contents": "CCProgressTimer"},
{ "trigger": "CCProgressTimer_setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "CCProgressTimer:setSprite(_CCSprite)"},
{ "trigger": ":setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "setSprite(_CCSprite)"},
{ "trigger": "CCProgressTimer_getColor\tCCProgressTimer:getColor()", "contents": "CCProgressTimer:getColor()"},
{ "trigger": ":getColor\tCCProgressTimer:getColor()", "contents": "getColor()"},
{ "trigger": "CCProgressTimer_isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "CCProgressTimer:isReverseDirection()"},
{ "trigger": ":isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "isReverseDirection()"},
{ "trigger": "CCProgressTimer_setOpacity\tCCProgressTimer:setOpacity(_num)", "contents": "CCProgressTimer:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCProgressTimer:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCProgressTimer_getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "CCProgressTimer:getBarChangeRate()"},
{ "trigger": ":getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "getBarChangeRate()"},
{ "trigger": "CCProgressTimer_setType\tCCProgressTimer:setType(_num)", "contents": "CCProgressTimer:setType(_num)"},
{ "trigger": ":setType\tCCProgressTimer:setType(_num)", "contents": "setType(_num)"},
{ "trigger": "CCProgressTimer_setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "CCProgressTimer:setMidpoint(_CCPoint)"},
{ "trigger": ":setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "setMidpoint(_CCPoint)"},
{ "trigger": "CCProgressTimer_isOpacityModifyRGB\tCCProgressTimer:isOpacityModifyRGB()", "contents": "CCProgressTimer:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCProgressTimer:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCProgressTimer_create\tCCProgressTimer:create(_CCSprite)", "contents": "CCProgressTimer:create(_CCSprite)"},
{ "trigger": ":create\tCCProgressTimer:create(_CCSprite)", "contents": "create(_CCSprite)"},
{ "trigger": "CCProgressTimer_setAnchorPoint\tCCProgressTimer:setAnchorPoint(_CCPoint)", "contents": "CCProgressTimer:setAnchorPoint(_CCPoint)"},
{ "trigger": ":setAnchorPoint\tCCProgressTimer:setAnchorPoint(_CCPoint)", "contents": "setAnchorPoint(_CCPoint)"},
{ "trigger": "CCProgressTimer_setOpacityModifyRGB\tCCProgressTimer:setOpacityModifyRGB(_boo)", "contents": "CCProgressTimer:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCProgressTimer:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCProgressTimer_setColor\tCCProgressTimer:setColor(_const_ccColor3B)", "contents": "CCProgressTimer:setColor(_const_ccColor3B)"},
{ "trigger": ":setColor\tCCProgressTimer:setColor(_const_ccColor3B)", "contents": "setColor(_const_ccColor3B)"},
{ "trigger": "CCProgressTimer_getType\tCCProgressTimer:getType()", "contents": "CCProgressTimer:getType()"},
{ "trigger": ":getType\tCCProgressTimer:getType()", "contents": "getType()"},
{ "trigger": "CCProgressTimer_setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "CCProgressTimer:setBarChangeRate(_CCPoint)"},
{ "trigger": ":setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "setBarChangeRate(_CCPoint)"},
{ "trigger": "CCProgressTimer_getPercentage\tCCProgressTimer:getPercentage()", "contents": "CCProgressTimer:getPercentage()"},
{ "trigger": ":getPercentage\tCCProgressTimer:getPercentage()", "contents": "getPercentage()"},
{ "trigger": "CCProgressTimer_setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "CCProgressTimer:setPercentage(_num)"},
{ "trigger": ":setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "setPercentage(_num)"},
{ "trigger": "CCProgressTimer_setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "CCProgressTimer:setReverseProgress(_boo)"},
{ "trigger": ":setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "setReverseProgress(_boo)"},
{ "trigger": "CCProgressTimer_getOpacity\tCCProgressTimer:getOpacity()", "contents": "CCProgressTimer:getOpacity()"},
{ "trigger": ":getOpacity\tCCProgressTimer:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCProgressTimer_getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "CCProgressTimer:getMidpoint()"},
{ "trigger": ":getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "getMidpoint()"},
{ "trigger": "CCProgressTimer_getSprite\tCCProgressTimer:getSprite()", "contents": "CCProgressTimer:getSprite()"},
{ "trigger": ":getSprite\tCCProgressTimer:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCProgressTimer_setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "CCProgressTimer:setReverseDirection(_boo)"},
{ "trigger": ":setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "setReverseDirection(_boo)"},
{ "trigger": "CCTransitionTurnOffTiles\t", "contents": "CCTransitionTurnOffTiles"},
{ "trigger": "CCTransitionTurnOffTiles_create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "CCTransitionTurnOffTiles:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTileMapAtlas\t", "contents": "CCTileMapAtlas"},
{ "trigger": "CCTileMapAtlas_releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "CCTileMapAtlas:releaseMap()"},
{ "trigger": ":releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTileMapAtlas_setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "CCTileMapAtlas:setTile(_ccColor3B,_CCPoint)"},
{ "trigger": ":setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "setTile(_ccColor3B,_CCPoint)"},
{ "trigger": "CCTileMapAtlas_create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "CCTileMapAtlas:create(_str,_str,_num,_num)"},
{ "trigger": ":create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "create(_str,_str,_num,_num)"},
{ "trigger": "CCTileMapAtlas_tileAt\tCCTileMapAtlas:tileAt(_const_CCPoint)", "contents": "CCTileMapAtlas:tileAt(_const_CCPoint)"},
{ "trigger": ":tileAt\tCCTileMapAtlas:tileAt(_const_CCPoint)", "contents": "tileAt(_const_CCPoint)"},
{ "trigger": "CCParticleGalaxy\t", "contents": "CCParticleGalaxy"},
{ "trigger": "CCParticleGalaxy_create\tCCParticleGalaxy:create()", "contents": "CCParticleGalaxy:create()"},
{ "trigger": ":create\tCCParticleGalaxy:create()", "contents": "create()"},
{ "trigger": "CCEaseSineInOut\t", "contents": "CCEaseSineInOut"},
{ "trigger": "CCEaseSineInOut_create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "CCEaseSineInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFlipX\t", "contents": "CCTransitionFlipX"},
{ "trigger": "CCTransitionFlipX_create\tCCTransitionFlipX:create(_num,_CCScene,_num)", "contents": "CCTransitionFlipX:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionFlipX:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCOrbitCamera\t", "contents": "CCOrbitCamera"},
{ "trigger": "CCOrbitCamera_sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "CCOrbitCamera:sphericalRadius(_num,_num,_num)"},
{ "trigger": ":sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "sphericalRadius(_num,_num,_num)"},
{ "trigger": "CCOrbitCamera_create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "CCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": ":create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": "CCTransitionFlipY\t", "contents": "CCTransitionFlipY"},
{ "trigger": "CCTransitionFlipY_create\tCCTransitionFlipY:create(_num,_CCScene,_num)", "contents": "CCTransitionFlipY:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionFlipY:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCToggleVisibility\t", "contents": "CCToggleVisibility"},
{ "trigger": "CCToggleVisibility_create\tCCToggleVisibility:create()", "contents": "CCToggleVisibility:create()"},
{ "trigger": ":create\tCCToggleVisibility:create()", "contents": "create()"},
{ "trigger": "CCShaky3D\t", "contents": "CCShaky3D"},
{ "trigger": "CCShaky3D_create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShaky3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCCatmullRomTo\t", "contents": "CCCatmullRomTo"},
{ "trigger": "CCCatmullRomTo_create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "CCCatmullRomTo:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCWaves\t", "contents": "CCWaves"},
{ "trigger": "CCWaves_getAmplitude\tCCWaves:getAmplitude()", "contents": "CCWaves:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCWaves:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCWaves_create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "CCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": ":create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": "CCWaves_getAmplitudeRate\tCCWaves:getAmplitudeRate()", "contents": "CCWaves:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCWaves:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCWaves_setAmplitudeRate\tCCWaves:setAmplitudeRate(_num)", "contents": "CCWaves:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCWaves:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCWaves_setAmplitude\tCCWaves:setAmplitude(_num)", "contents": "CCWaves:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCWaves:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCSpriteBatchNode\t", "contents": "CCSpriteBatchNode"},
{ "trigger": "CCSpriteBatchNode_getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "CCSpriteBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSpriteBatchNode_insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:insertChild(_CCSprite,_num)"},
{ "trigger": ":insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "insertChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": ":atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "CCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": ":rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_reorderBatch\tCCSpriteBatchNode:reorderBatch(_boo)", "contents": "CCSpriteBatchNode:reorderBatch(_boo)"},
{ "trigger": ":reorderBatch\tCCSpriteBatchNode:reorderBatch(_boo)", "contents": "reorderBatch(_boo)"},
{ "trigger": "CCSpriteBatchNode_appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "CCSpriteBatchNode:appendChild(_CCSprite)"},
{ "trigger": ":appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "appendChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_create\tCCSpriteBatchNode:create(_str)", "contents": "CCSpriteBatchNode:create(_str)"},
{ "trigger": ":create\tCCSpriteBatchNode:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCSpriteBatchNode_setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_increaseAtlasCapacity\tCCSpriteBatchNode:increaseAtlasCapacity()", "contents": "CCSpriteBatchNode:increaseAtlasCapacity()"},
{ "trigger": ":increaseAtlasCapacity\tCCSpriteBatchNode:increaseAtlasCapacity()", "contents": "increaseAtlasCapacity()"},
{ "trigger": "CCSpriteBatchNode_removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "CCSpriteBatchNode:removeChildAtIndex(_num,_boo)"},
{ "trigger": ":removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "removeChildAtIndex(_num,_boo)"},
{ "trigger": "CCSpriteBatchNode_lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCSpriteBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSpriteBatchNode_removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "CCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": ":removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_getTexture\tCCSpriteBatchNode:getTexture()", "contents": "CCSpriteBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteBatchNode_highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCEaseBounce\t", "contents": "CCEaseBounce"},
{ "trigger": "CCEaseBounce_create\tCCEaseBounce:create(_CCActionInterval)", "contents": "CCEaseBounce:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounce:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCStopGrid\t", "contents": "CCStopGrid"},
{ "trigger": "CCStopGrid_create\tCCStopGrid:create()", "contents": "CCStopGrid:create()"},
{ "trigger": ":create\tCCStopGrid:create()", "contents": "create()"},
{ "trigger": "CCSize\t", "contents": "CCSize"},
{ "trigger": "CCSize_call\tCCSize:call()", "contents": "CCSize:call()"},
{ "trigger": ":call\tCCSize:call()", "contents": "call()"},
{ "trigger": "CCSize_new\tCCSize:new()", "contents": "CCSize:new()"},
{ "trigger": ":new\tCCSize:new()", "contents": "new()"},
{ "trigger": "CCSize_equals\tCCSize:equals(_const_CCSize)", "contents": "CCSize:equals(_const_CCSize)"},
{ "trigger": ":equals\tCCSize:equals(_const_CCSize)", "contents": "equals(_const_CCSize)"},
{ "trigger": "CCSize_new_local\tCCSize:new_local()", "contents": "CCSize:new_local()"},
{ "trigger": ":new_local\tCCSize:new_local()", "contents": "new_local()"},
{ "trigger": "CCParticleSmoke\t", "contents": "CCParticleSmoke"},
{ "trigger": "CCParticleSmoke_create\tCCParticleSmoke:create()", "contents": "CCParticleSmoke:create()"},
{ "trigger": ":create\tCCParticleSmoke:create()", "contents": "create()"},
{ "trigger": "CCArray\t", "contents": "CCArray"},
{ "trigger": "CCArray_count\tCCArray:count()", "contents": "CCArray:count()"},
{ "trigger": ":count\tCCArray:count()", "contents": "count()"},
{ "trigger": "CCArray_fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "CCArray:fastRemoveObject(_CCObject)"},
{ "trigger": ":fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "fastRemoveObject(_CCObject)"},
{ "trigger": "CCArray_containsObject\tCCArray:containsObject(_CCObject)", "contents": "CCArray:containsObject(_CCObject)"},
{ "trigger": ":containsObject\tCCArray:containsObject(_CCObject)", "contents": "containsObject(_CCObject)"},
{ "trigger": "CCArray_exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "CCArray:exchangeObjectAtIndex(_num,_num)"},
{ "trigger": ":exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "exchangeObjectAtIndex(_num,_num)"},
{ "trigger": "CCArray_removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "CCArray:removeLastObject(_boo)"},
{ "trigger": ":removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "removeLastObject(_boo)"},
{ "trigger": "CCArray_objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "CCArray:objectAtIndex(_num)"},
{ "trigger": ":objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "objectAtIndex(_num)"},
{ "trigger": "CCArray_addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "CCArray:addObjectsFromArray(_CCArray)"},
{ "trigger": ":addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "addObjectsFromArray(_CCArray)"},
{ "trigger": "CCArray_fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "CCArray:fastRemoveObjectAtIndex(_num)"},
{ "trigger": ":fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "fastRemoveObjectAtIndex(_num)"},
{ "trigger": "CCArray_createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "CCArray:createWithObject(_CCObject)"},
{ "trigger": ":createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "createWithObject(_CCObject)"},
{ "trigger": "CCArray_createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "CCArray:createWithCapacity(_num)"},
{ "trigger": ":createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "createWithCapacity(_num)"},
{ "trigger": "CCArray_capacity\tCCArray:capacity()", "contents": "CCArray:capacity()"},
{ "trigger": ":capacity\tCCArray:capacity()", "contents": "capacity()"},
{ "trigger": "CCArray_replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "CCArray:replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": ":replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": "CCArray_removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "CCArray:removeObjectsInArray(_CCArray)"},
{ "trigger": ":removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "removeObjectsInArray(_CCArray)"},
{ "trigger": "CCArray_randomObject\tCCArray:randomObject()", "contents": "CCArray:randomObject()"},
{ "trigger": ":randomObject\tCCArray:randomObject()", "contents": "randomObject()"},
{ "trigger": "CCArray_createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "CCArray:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCArray_reverseObjects\tCCArray:reverseObjects()", "contents": "CCArray:reverseObjects()"},
{ "trigger": ":reverseObjects\tCCArray:reverseObjects()", "contents": "reverseObjects()"},
{ "trigger": "CCArray_createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "CCArray:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCArray_removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "CCArray:removeObjectAtIndex(_num,_boo)"},
{ "trigger": ":removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "removeObjectAtIndex(_num,_boo)"},
{ "trigger": "CCArray_isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "CCArray:isEqualToArray(_CCArray)"},
{ "trigger": ":isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "isEqualToArray(_CCArray)"},
{ "trigger": "CCArray_removeAllObjects\tCCArray:removeAllObjects()", "contents": "CCArray:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCArray:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCArray_reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "CCArray:reduceMemoryFootprint()"},
{ "trigger": ":reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "reduceMemoryFootprint()"},
{ "trigger": "CCArray_create\tCCArray:create()", "contents": "CCArray:create()"},
{ "trigger": ":create\tCCArray:create()", "contents": "create()"},
{ "trigger": "CCArray_lastObject\tCCArray:lastObject()", "contents": "CCArray:lastObject()"},
{ "trigger": ":lastObject\tCCArray:lastObject()", "contents": "lastObject()"},
{ "trigger": "CCArray_indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "CCArray:indexOfObject(_CCObject)"},
{ "trigger": ":indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "indexOfObject(_CCObject)"},
{ "trigger": "CCArray_removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "CCArray:removeObject(_CCObject,_boo)"},
{ "trigger": ":removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "removeObject(_CCObject,_boo)"},
{ "trigger": "CCArray_exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "CCArray:exchangeObject(_CCObject,_CCObject)"},
{ "trigger": ":exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "exchangeObject(_CCObject,_CCObject)"},
{ "trigger": "CCArray_addObject\tCCArray:addObject(_CCObject)", "contents": "CCArray:addObject(_CCObject)"},
{ "trigger": ":addObject\tCCArray:addObject(_CCObject)", "contents": "addObject(_CCObject)"},
{ "trigger": "CCArray_insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "CCArray:insertObject(_CCObject,_num)"},
{ "trigger": ":insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "insertObject(_CCObject,_num)"},
{ "trigger": "CCTransitionFadeUp\t", "contents": "CCTransitionFadeUp"},
{ "trigger": "CCTransitionFadeUp_create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "CCTransitionFadeUp:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressVertical\t", "contents": "CCTransitionProgressVertical"},
{ "trigger": "CCTransitionProgressVertical_create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "CCTransitionProgressVertical:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTurnOffTiles\t", "contents": "CCTurnOffTiles"},
{ "trigger": "CCTurnOffTiles_turnOffTile\tCCTurnOffTiles:turnOffTile(_CCPoint)", "contents": "CCTurnOffTiles:turnOffTile(_CCPoint)"},
{ "trigger": ":turnOffTile\tCCTurnOffTiles:turnOffTile(_CCPoint)", "contents": "turnOffTile(_CCPoint)"},
{ "trigger": "CCTurnOffTiles_shuffle\tCCTurnOffTiles:shuffle(_num,_num)", "contents": "CCTurnOffTiles:shuffle(_num,_num)"},
{ "trigger": ":shuffle\tCCTurnOffTiles:shuffle(_num,_num)", "contents": "shuffle(_num,_num)"},
{ "trigger": "CCTurnOffTiles_turnOnTile\tCCTurnOffTiles:turnOnTile(_CCPoint)", "contents": "CCTurnOffTiles:turnOnTile(_CCPoint)"},
{ "trigger": ":turnOnTile\tCCTurnOffTiles:turnOnTile(_CCPoint)", "contents": "turnOnTile(_CCPoint)"},
{ "trigger": "CCTurnOffTiles_create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "CCTurnOffTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCAtlasNode\t", "contents": "CCAtlasNode"},
{ "trigger": "CCAtlasNode_getColor\tCCAtlasNode:getColor()", "contents": "CCAtlasNode:getColor()"},
{ "trigger": ":getColor\tCCAtlasNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCAtlasNode_setQuadsToDraw\tCCAtlasNode:setQuadsToDraw(_num)", "contents": "CCAtlasNode:setQuadsToDraw(_num)"},
{ "trigger": ":setQuadsToDraw\tCCAtlasNode:setQuadsToDraw(_num)", "contents": "setQuadsToDraw(_num)"},
{ "trigger": "CCAtlasNode_setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "CCAtlasNode:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCAtlasNode_setTextureAtlas\tCCAtlasNode:setTextureAtlas(_CCTextureAtlas)", "contents": "CCAtlasNode:setTextureAtlas(_CCTextureAtlas)"},
{ "trigger": ":setTextureAtlas\tCCAtlasNode:setTextureAtlas(_CCTextureAtlas)", "contents": "setTextureAtlas(_CCTextureAtlas)"},
{ "trigger": "CCAtlasNode_getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "CCAtlasNode:getQuadsToDraw()"},
{ "trigger": ":getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "getQuadsToDraw()"},
{ "trigger": "CCAtlasNode_isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "CCAtlasNode:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCAtlasNode_getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "CCAtlasNode:getTextureAtlas()"},
{ "trigger": ":getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "getTextureAtlas()"},
{ "trigger": "CCAtlasNode_create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "CCAtlasNode:create(_str,_num,_num,_num)"},
{ "trigger": ":create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "create(_str,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "CCAtlasNode:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCAtlasNode_setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "CCAtlasNode:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCAtlasNode_setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "CCAtlasNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCAtlasNode_updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "CCAtlasNode:updateAtlasValues()"},
{ "trigger": ":updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "updateAtlasValues()"},
{ "trigger": "CCAtlasNode_getTexture\tCCAtlasNode:getTexture()", "contents": "CCAtlasNode:getTexture()"},
{ "trigger": ":getTexture\tCCAtlasNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCAtlasNode_getOpacity\tCCAtlasNode:getOpacity()", "contents": "CCAtlasNode:getOpacity()"},
{ "trigger": ":getOpacity\tCCAtlasNode:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCShakyTiles3D\t", "contents": "CCShakyTiles3D"},
{ "trigger": "CCShakyTiles3D_create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShakyTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCTransitionCrossFade\t", "contents": "CCTransitionCrossFade"},
{ "trigger": "CCTransitionCrossFade_create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "CCTransitionCrossFade:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTargetedAction\t", "contents": "CCTargetedAction"},
{ "trigger": "CCTargetedAction_setForcedTarget\tCCTargetedAction:setForcedTarget(_CCNode)", "contents": "CCTargetedAction:setForcedTarget(_CCNode)"},
{ "trigger": ":setForcedTarget\tCCTargetedAction:setForcedTarget(_CCNode)", "contents": "setForcedTarget(_CCNode)"},
{ "trigger": "CCTargetedAction_create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "CCTargetedAction:create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": "CCTargetedAction_getForcedTarget\tCCTargetedAction:getForcedTarget()", "contents": "CCTargetedAction:getForcedTarget()"},
{ "trigger": ":getForcedTarget\tCCTargetedAction:getForcedTarget()", "contents": "getForcedTarget()"},
{ "trigger": "CCSpriteFrame\t", "contents": "CCSpriteFrame"},
{ "trigger": "CCSpriteFrame_setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "CCSpriteFrame:setRect(_CCRect)"},
{ "trigger": ":setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "setRect(_CCRect)"},
{ "trigger": "CCSpriteFrame_getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "CCSpriteFrame:getRectInPixels()"},
{ "trigger": ":getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "getRectInPixels()"},
{ "trigger": "CCSpriteFrame_setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "CCSpriteFrame:setOffsetInPixels(_CCPoint)"},
{ "trigger": ":setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "setOffsetInPixels(_CCPoint)"},
{ "trigger": "CCSpriteFrame_createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "CCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": ":createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "CCSpriteFrame:setOriginalSizeInPixels(_CCSize)"},
{ "trigger": ":setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "setOriginalSizeInPixels(_CCSize)"},
{ "trigger": "CCSpriteFrame_create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "CCSpriteFrame:create(_str,_CCRect)"},
{ "trigger": ":create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "create(_str,_CCRect)"},
{ "trigger": "CCSpriteFrame_setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "CCSpriteFrame:setRectInPixels(_CCRect)"},
{ "trigger": ":setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "setRectInPixels(_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSize\tCCSpriteFrame:setOriginalSize(_const_CCSize)", "contents": "CCSpriteFrame:setOriginalSize(_const_CCSize)"},
{ "trigger": ":setOriginalSize\tCCSpriteFrame:setOriginalSize(_const_CCSize)", "contents": "setOriginalSize(_const_CCSize)"},
{ "trigger": "CCSpriteFrame_getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "CCSpriteFrame:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCSpriteFrame_isRotated\tCCSpriteFrame:isRotated()", "contents": "CCSpriteFrame:isRotated()"},
{ "trigger": ":isRotated\tCCSpriteFrame:isRotated()", "contents": "isRotated()"},
{ "trigger": "CCSpriteFrame_setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "CCSpriteFrame:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrame_getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "CCSpriteFrame:getOriginalSizeInPixels()"},
{ "trigger": ":getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "getOriginalSizeInPixels()"},
{ "trigger": "CCSpriteFrame_setOffset\tCCSpriteFrame:setOffset(_const_CCPoint)", "contents": "CCSpriteFrame:setOffset(_const_CCPoint)"},
{ "trigger": ":setOffset\tCCSpriteFrame:setOffset(_const_CCPoint)", "contents": "setOffset(_const_CCPoint)"},
{ "trigger": "CCSpriteFrame_setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "CCSpriteFrame:setRotated(_boo)"},
{ "trigger": ":setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "setRotated(_boo)"},
{ "trigger": "CCSpriteFrame_getOffset\tCCSpriteFrame:getOffset()", "contents": "CCSpriteFrame:getOffset()"},
{ "trigger": ":getOffset\tCCSpriteFrame:getOffset()", "contents": "getOffset()"},
{ "trigger": "CCSpriteFrame_getTexture\tCCSpriteFrame:getTexture()", "contents": "CCSpriteFrame:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteFrame:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteFrame_getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "CCSpriteFrame:getOffsetInPixels()"},
{ "trigger": ":getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "getOffsetInPixels()"},
{ "trigger": "CCSpriteFrame_getRect\tCCSpriteFrame:getRect()", "contents": "CCSpriteFrame:getRect()"},
{ "trigger": ":getRect\tCCSpriteFrame:getRect()", "contents": "getRect()"},
{ "trigger": "CCScale9Sprite\t", "contents": "CCScale9Sprite"},
{ "trigger": "CCScale9Sprite_getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "CCScale9Sprite:getCapInsets()"},
{ "trigger": ":getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "getCapInsets()"},
{ "trigger": "CCScale9Sprite_setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "CCScale9Sprite:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCScale9Sprite_setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "CCScale9Sprite:setCapInsets(_CCRect)"},
{ "trigger": ":setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "setCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "CCScale9Sprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCScale9Sprite_setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "CCScale9Sprite:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCScale9Sprite_getOpacity\tCCScale9Sprite:getOpacity()", "contents": "CCScale9Sprite:getOpacity()"},
{ "trigger": ":getOpacity\tCCScale9Sprite:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCScale9Sprite_resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "CCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": ":resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "CCScale9Sprite:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_create\tCCScale9Sprite:create(_str)", "contents": "CCScale9Sprite:create(_str)"},
{ "trigger": ":create\tCCScale9Sprite:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCScale9Sprite_setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "CCScale9Sprite:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCPageTurn3D\t", "contents": "CCPageTurn3D"},
{ "trigger": "CCPageTurn3D_create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "CCPageTurn3D:create(_num,_CCSize)"},
{ "trigger": ":create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCParticleRain\t", "contents": "CCParticleRain"},
{ "trigger": "CCParticleRain_create\tCCParticleRain:create()", "contents": "CCParticleRain:create()"},
{ "trigger": ":create\tCCParticleRain:create()", "contents": "create()"},
{ "trigger": "CCString\t", "contents": "CCString"},
{ "trigger": "CCString_getCString\tCCString:getCString()", "contents": "CCString:getCString()"},
{ "trigger": ":getCString\tCCString:getCString()", "contents": "getCString()"},
{ "trigger": "CCString_isEqual\tCCString:isEqual(_const_CCObject)", "contents": "CCString:isEqual(_const_CCObject)"},
{ "trigger": ":isEqual\tCCString:isEqual(_const_CCObject)", "contents": "isEqual(_const_CCObject)"},
{ "trigger": "CCString_compare\tCCString:compare(_str)", "contents": "CCString:compare(_str)"},
{ "trigger": ":compare\tCCString:compare(_str)", "contents": "compare(_str)"},
{ "trigger": "CCString_length\tCCString:length()", "contents": "CCString:length()"},
{ "trigger": ":length\tCCString:length()", "contents": "length()"},
{ "trigger": "CCString_doubleValue\tCCString:doubleValue()", "contents": "CCString:doubleValue()"},
{ "trigger": ":doubleValue\tCCString:doubleValue()", "contents": "doubleValue()"},
{ "trigger": "CCString_createWithData\tCCString:createWithData(_str,_num)", "contents": "CCString:createWithData(_str,_num)"},
{ "trigger": ":createWithData\tCCString:createWithData(_str,_num)", "contents": "createWithData(_str,_num)"},
{ "trigger": "CCString_boolValue\tCCString:boolValue()", "contents": "CCString:boolValue()"},
{ "trigger": ":boolValue\tCCString:boolValue()", "contents": "boolValue()"},
{ "trigger": "CCString_floatValue\tCCString:floatValue()", "contents": "CCString:floatValue()"},
{ "trigger": ":floatValue\tCCString:floatValue()", "contents": "floatValue()"},
{ "trigger": "CCString_create\tCCString:create(_str)", "contents": "CCString:create(_str)"},
{ "trigger": ":create\tCCString:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCString_uintValue\tCCString:uintValue()", "contents": "CCString:uintValue()"},
{ "trigger": ":uintValue\tCCString:uintValue()", "contents": "uintValue()"},
{ "trigger": "CCString_intValue\tCCString:intValue()", "contents": "CCString:intValue()"},
{ "trigger": ":intValue\tCCString:intValue()", "contents": "intValue()"},
{ "trigger": "CCString_createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "CCString:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCCrypto\t", "contents": "CCCrypto"},
{ "trigger": "CCCrypto_decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "CCCrypto:MD5Lua(_str,_boo)"},
{ "trigger": ":MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "MD5Lua(_str,_boo)"},
{ "trigger": "CCCrypto_encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "CCCrypto:encodeBase64Lua(_str,_num)"},
{ "trigger": ":encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "encodeBase64Lua(_str,_num)"},
{ "trigger": "CCCrypto_decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "CCCrypto:decodeBase64Lua(_str)"},
{ "trigger": ":decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "decodeBase64Lua(_str)"},
{ "trigger": "CCCrypto_encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "CCCrypto:getAES256KeyLength()"},
{ "trigger": ":getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "getAES256KeyLength()"},
{ "trigger": "CCCrypto_sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "CCCrypto:sha1Lua(_str,_str,_boo)"},
{ "trigger": ":sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "sha1Lua(_str,_str,_boo)"},
{ "trigger": "CCFlipY\t", "contents": "CCFlipY"},
{ "trigger": "CCFlipY_create\tCCFlipY:create(_boo)", "contents": "CCFlipY:create(_boo)"},
{ "trigger": ":create\tCCFlipY:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCMenuItemToggle\t", "contents": "CCMenuItemToggle"},
{ "trigger": "CCMenuItemToggle_getColor\tCCMenuItemToggle:getColor()", "contents": "CCMenuItemToggle:getColor()"},
{ "trigger": ":getColor\tCCMenuItemToggle:getColor()", "contents": "getColor()"},
{ "trigger": "CCMenuItemToggle_setOpacity\tCCMenuItemToggle:setOpacity(_num)", "contents": "CCMenuItemToggle:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMenuItemToggle:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMenuItemToggle_selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "CCMenuItemToggle:selectedItem()"},
{ "trigger": ":selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "selectedItem()"},
{ "trigger": "CCMenuItemToggle_isOpacityModifyRGB\tCCMenuItemToggle:isOpacityModifyRGB()", "contents": "CCMenuItemToggle:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenuItemToggle:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenuItemToggle_setOpacityModifyRGB\tCCMenuItemToggle:setOpacityModifyRGB(_boo)", "contents": "CCMenuItemToggle:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenuItemToggle:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenuItemToggle_create\tCCMenuItemToggle:create(_CCMenuItem)", "contents": "CCMenuItemToggle:create(_CCMenuItem)"},
{ "trigger": ":create\tCCMenuItemToggle:create(_CCMenuItem)", "contents": "create(_CCMenuItem)"},
{ "trigger": "CCMenuItemToggle_getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "CCMenuItemToggle:getSubItems()"},
{ "trigger": ":getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "getSubItems()"},
{ "trigger": "CCMenuItemToggle_setColor\tCCMenuItemToggle:setColor(_ccColor3B)", "contents": "CCMenuItemToggle:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCMenuItemToggle:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCMenuItemToggle_getOpacity\tCCMenuItemToggle:getOpacity()", "contents": "CCMenuItemToggle:getOpacity()"},
{ "trigger": ":getOpacity\tCCMenuItemToggle:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMenuItemToggle_setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "CCMenuItemToggle:setSelectedIndex(_num)"},
{ "trigger": ":setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "setSelectedIndex(_num)"},
{ "trigger": "CCMenuItemToggle_addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "CCMenuItemToggle:addSubItem(_CCMenuItem)"},
{ "trigger": ":addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "addSubItem(_CCMenuItem)"},
{ "trigger": "CCMenuItemToggle_getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "CCMenuItemToggle:getSelectedIndex()"},
{ "trigger": ":getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "getSelectedIndex()"},
{ "trigger": "CCMenuItemToggle_setSubItems\tCCMenuItemToggle:setSubItems(_CCArray)", "contents": "CCMenuItemToggle:setSubItems(_CCArray)"},
{ "trigger": ":setSubItems\tCCMenuItemToggle:setSubItems(_CCArray)", "contents": "setSubItems(_CCArray)"},
{ "trigger": "CCPolygonShape\t", "contents": "CCPolygonShape"},
{ "trigger": "CCPolygonShape_setFill\tCCPolygonShape:setFill(_boo)", "contents": "CCPolygonShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCPolygonShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCPolygonShape_setClose\tCCPolygonShape:setClose(_boo)", "contents": "CCPolygonShape:setClose(_boo)"},
{ "trigger": ":setClose\tCCPolygonShape:setClose(_boo)", "contents": "setClose(_boo)"},
{ "trigger": "CCPolygonShape_isFill\tCCPolygonShape:isFill()", "contents": "CCPolygonShape:isFill()"},
{ "trigger": ":isFill\tCCPolygonShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCPolygonShape_create\tCCPolygonShape:create(_CCPointArray)", "contents": "CCPolygonShape:create(_CCPointArray)"},
{ "trigger": ":create\tCCPolygonShape:create(_CCPointArray)", "contents": "create(_CCPointArray)"},
{ "trigger": "CCPolygonShape_isClose\tCCPolygonShape:isClose()", "contents": "CCPolygonShape:isClose()"},
{ "trigger": ":isClose\tCCPolygonShape:isClose()", "contents": "isClose()"},
{ "trigger": "CCParticleBatchNode\t", "contents": "CCParticleBatchNode"},
{ "trigger": "CCParticleBatchNode_disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "CCParticleBatchNode:disableParticle(_num)"},
{ "trigger": ":disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "disableParticle(_num)"},
{ "trigger": "CCParticleBatchNode_getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "CCParticleBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleBatchNode_insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "CCParticleBatchNode:insertChild(_CCParticleSystem,_num)"},
{ "trigger": ":insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "insertChild(_CCParticleSystem,_num)"},
{ "trigger": "CCParticleBatchNode_createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "CCParticleBatchNode:createWithTexture(_CCTexture2D,_num)"},
{ "trigger": ":createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "createWithTexture(_CCTexture2D,_num)"},
{ "trigger": "CCParticleBatchNode_reorderChild\tCCParticleBatchNode:reorderChild(_CCNode,_num)", "contents": "CCParticleBatchNode:reorderChild(_CCNode,_num)"},
{ "trigger": ":reorderChild\tCCParticleBatchNode:reorderChild(_CCNode,_num)", "contents": "reorderChild(_CCNode,_num)"},
{ "trigger": "CCParticleBatchNode_create\tCCParticleBatchNode:create(_str,_num)", "contents": "CCParticleBatchNode:create(_str,_num)"},
{ "trigger": ":create\tCCParticleBatchNode:create(_str,_num)", "contents": "create(_str,_num)"},
{ "trigger": "CCParticleBatchNode_removeChild\tCCParticleBatchNode:removeChild(_CCNode,_boo)", "contents": "CCParticleBatchNode:removeChild(_CCNode,_boo)"},
{ "trigger": ":removeChild\tCCParticleBatchNode:removeChild(_CCNode,_boo)", "contents": "removeChild(_CCNode,_boo)"},
{ "trigger": "CCParticleBatchNode_setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "CCParticleBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleBatchNode_removeChildAtIndex\tCCParticleBatchNode:removeChildAtIndex(_num,_boo)", "contents": "CCParticleBatchNode:removeChildAtIndex(_num,_boo)"},
{ "trigger": ":removeChildAtIndex\tCCParticleBatchNode:removeChildAtIndex(_num,_boo)", "contents": "removeChildAtIndex(_num,_boo)"},
{ "trigger": "CCParticleBatchNode_setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleBatchNode_removeAllChildrenWithCleanup\tCCParticleBatchNode:removeAllChildrenWithCleanup(_boo)", "contents": "CCParticleBatchNode:removeAllChildrenWithCleanup(_boo)"},
{ "trigger": ":removeAllChildrenWithCleanup\tCCParticleBatchNode:removeAllChildrenWithCleanup(_boo)", "contents": "removeAllChildrenWithCleanup(_boo)"},
{ "trigger": "CCParticleBatchNode_addChild\tCCParticleBatchNode:addChild(_CCNode)", "contents": "CCParticleBatchNode:addChild(_CCNode)"},
{ "trigger": ":addChild\tCCParticleBatchNode:addChild(_CCNode)", "contents": "addChild(_CCNode)"},
{ "trigger": "CCParticleBatchNode_getTexture\tCCParticleBatchNode:getTexture()", "contents": "CCParticleBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCParticleBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCAnimate\t", "contents": "CCAnimate"},
{ "trigger": "CCAnimate_setAnimation\tCCAnimate:setAnimation(_CCAnimation)", "contents": "CCAnimate:setAnimation(_CCAnimation)"},
{ "trigger": ":setAnimation\tCCAnimate:setAnimation(_CCAnimation)", "contents": "setAnimation(_CCAnimation)"},
{ "trigger": "CCAnimate_getAnimation\tCCAnimate:getAnimation()", "contents": "CCAnimate:getAnimation()"},
{ "trigger": ":getAnimation\tCCAnimate:getAnimation()", "contents": "getAnimation()"},
{ "trigger": "CCAnimate_create\tCCAnimate:create(_CCAnimation)", "contents": "CCAnimate:create(_CCAnimation)"},
{ "trigger": ":create\tCCAnimate:create(_CCAnimation)", "contents": "create(_CCAnimation)"},
{ "trigger": "CCFlipX\t", "contents": "CCFlipX"},
{ "trigger": "CCFlipX_create\tCCFlipX:create(_boo)", "contents": "CCFlipX:create(_boo)"},
{ "trigger": ":create\tCCFlipX:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCEaseElasticOut\t", "contents": "CCEaseElasticOut"},
{ "trigger": "CCEaseElasticOut_create\tCCEaseElasticOut:create(_CCActionInterval,_num)", "contents": "CCEaseElasticOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseElasticOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCTextureCache\t", "contents": "CCTextureCache"},
{ "trigger": "CCTextureCache_dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "CCTextureCache:dumpCachedTextureInfo()"},
{ "trigger": ":dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "dumpCachedTextureInfo()"},
{ "trigger": "CCTextureCache_removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "CCTextureCache:removeUnusedTextures()"},
{ "trigger": ":removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "removeUnusedTextures()"},
{ "trigger": "CCTextureCache_removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "CCTextureCache:removeTexture(_CCTexture2D)"},
{ "trigger": ":removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "removeTexture(_CCTexture2D)"},
{ "trigger": "CCTextureCache_removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "CCTextureCache:removeTextureForKey(_str)"},
{ "trigger": ":removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "removeTextureForKey(_str)"},
{ "trigger": "CCTextureCache_removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "CCTextureCache:removeAllTextures()"},
{ "trigger": ":removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "removeAllTextures()"},
{ "trigger": "CCTextureCache_addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "CCTextureCache:addPVRImage(_str)"},
{ "trigger": ":addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "addPVRImage(_str)"},
{ "trigger": "CCTextureCache_textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "CCTextureCache:textureForKey(_str)"},
{ "trigger": ":textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "textureForKey(_str)"},
{ "trigger": "CCTextureCache_addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "CCTextureCache:addUIImage(_CCImage,_str)"},
{ "trigger": ":addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "addUIImage(_CCImage,_str)"},
{ "trigger": "CCTextureCache_reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "CCTextureCache:reloadAllTextures()"},
{ "trigger": ":reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "reloadAllTextures()"},
{ "trigger": "CCTextureCache_addImage\tCCTextureCache:addImage(_str)", "contents": "CCTextureCache:addImage(_str)"},
{ "trigger": ":addImage\tCCTextureCache:addImage(_str)", "contents": "addImage(_str)"},
{ "trigger": "CCTextureCache_purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "CCTextureCache:purgeSharedTextureCache()"},
{ "trigger": ":purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "purgeSharedTextureCache()"},
{ "trigger": "CCTextureCache_sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "CCTextureCache:sharedTextureCache()"},
{ "trigger": ":sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "sharedTextureCache()"},
{ "trigger": "CCCallFunc\t", "contents": "CCCallFunc"},
{ "trigger": "CCCallFunc_create\tCCCallFunc:create(_listener)", "contents": "CCCallFunc:create(_listener)"},
{ "trigger": ":create\tCCCallFunc:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCProgressFromTo\t", "contents": "CCProgressFromTo"},
{ "trigger": "CCProgressFromTo_create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "CCProgressFromTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCAnimationFrame\t", "contents": "CCAnimationFrame"},
{ "trigger": "CCAnimationFrame_setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "CCAnimationFrame:setDelayUnits(_num)"},
{ "trigger": ":setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "setDelayUnits(_num)"},
{ "trigger": "CCAnimationFrame_getUserInfo\tCCAnimationFrame:getUserInfo()", "contents": "CCAnimationFrame:getUserInfo()"},
{ "trigger": ":getUserInfo\tCCAnimationFrame:getUserInfo()", "contents": "getUserInfo()"},
{ "trigger": "CCAnimationFrame_getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "CCAnimationFrame:getSpriteFrame()"},
{ "trigger": ":getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "getSpriteFrame()"},
{ "trigger": "CCAnimationFrame_setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimationFrame:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimationFrame_setUserInfo\tCCAnimationFrame:setUserInfo(_CCDictionary)", "contents": "CCAnimationFrame:setUserInfo(_CCDictionary)"},
{ "trigger": ":setUserInfo\tCCAnimationFrame:setUserInfo(_CCDictionary)", "contents": "setUserInfo(_CCDictionary)"},
{ "trigger": "CCAnimationFrame_getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "CCAnimationFrame:getDelayUnits()"},
{ "trigger": ":getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "getDelayUnits()"},
{ "trigger": "CCEaseBounceIn\t", "contents": "CCEaseBounceIn"},
{ "trigger": "CCEaseBounceIn_create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "CCEaseBounceIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFadeTR\t", "contents": "CCTransitionFadeTR"},
{ "trigger": "CCTransitionFadeTR_create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "CCTransitionFadeTR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressRadialCW\t", "contents": "CCTransitionProgressRadialCW"},
{ "trigger": "CCTransitionProgressRadialCW_create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCNotificationCenter\t", "contents": "CCNotificationCenter"},
{ "trigger": "CCNotificationCenter_unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver()", "contents": "CCNotificationCenter:unregisterScriptObserver()"},
{ "trigger": ":unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver()", "contents": "unregisterScriptObserver()"},
{ "trigger": "CCNotificationCenter_sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "CCNotificationCenter:sharedNotificationCenter()"},
{ "trigger": ":sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "sharedNotificationCenter()"},
{ "trigger": "CCNotificationCenter_registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_listener)", "contents": "CCNotificationCenter:registerScriptObserver(_listener)"},
{ "trigger": ":registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_listener)", "contents": "registerScriptObserver(_listener)"},
{ "trigger": "CCNotificationCenter_postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "CCNotificationCenter:postNotification(_str)"},
{ "trigger": ":postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "postNotification(_str)"},
{ "trigger": "CCDrawNode\t", "contents": "CCDrawNode"},
{ "trigger": "CCDrawNode_clear\tCCDrawNode:clear()", "contents": "CCDrawNode:clear()"},
{ "trigger": ":clear\tCCDrawNode:clear()", "contents": "clear()"},
{ "trigger": "CCDrawNode_drawDot\tCCDrawNode:drawDot(_const_CCPoint,_num,_const_ccColor4F)", "contents": "CCDrawNode:drawDot(_const_CCPoint,_num,_const_ccColor4F)"},
{ "trigger": ":drawDot\tCCDrawNode:drawDot(_const_CCPoint,_num,_const_ccColor4F)", "contents": "drawDot(_const_CCPoint,_num,_const_ccColor4F)"},
{ "trigger": "CCDrawNode_getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "CCDrawNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCDrawNode_setBlendFunc\tCCDrawNode:setBlendFunc(_const_ccBlendFunc)", "contents": "CCDrawNode:setBlendFunc(_const_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCDrawNode:setBlendFunc(_const_ccBlendFunc)", "contents": "setBlendFunc(_const_ccBlendFunc)"},
{ "trigger": "CCDrawNode_drawSegment\tCCDrawNode:drawSegment(_const_CCPoint,_const_CCPoint,_num,_const_ccColor4F)", "contents": "CCDrawNode:drawSegment(_const_CCPoint,_const_CCPoint,_num,_const_ccColor4F)"},
{ "trigger": ":drawSegment\tCCDrawNode:drawSegment(_const_CCPoint,_const_CCPoint,_num,_const_ccColor4F)", "contents": "drawSegment(_const_CCPoint,_const_CCPoint,_num,_const_ccColor4F)"},
{ "trigger": "CCDrawNode_drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_const_ccColor4F,_num,_const_ccColor4F)", "contents": "CCDrawNode:drawPolygon(_CCPointArray,_const_ccColor4F,_num,_const_ccColor4F)"},
{ "trigger": ":drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_const_ccColor4F,_num,_const_ccColor4F)", "contents": "drawPolygon(_CCPointArray,_const_ccColor4F,_num,_const_ccColor4F)"},
{ "trigger": "CCDrawNode_create\tCCDrawNode:create()", "contents": "CCDrawNode:create()"},
{ "trigger": ":create\tCCDrawNode:create()", "contents": "create()"},
{ "trigger": "CCTouchDispatcher\t", "contents": "CCTouchDispatcher"},
{ "trigger": "CCTouchDispatcher_isDispatchEvents\tCCTouchDispatcher:isDispatchEvents()", "contents": "CCTouchDispatcher:isDispatchEvents()"},
{ "trigger": ":isDispatchEvents\tCCTouchDispatcher:isDispatchEvents()", "contents": "isDispatchEvents()"},
{ "trigger": "CCTouchDispatcher_setDispatchEvents\tCCTouchDispatcher:setDispatchEvents(_boo)", "contents": "CCTouchDispatcher:setDispatchEvents(_boo)"},
{ "trigger": ":setDispatchEvents\tCCTouchDispatcher:setDispatchEvents(_boo)", "contents": "setDispatchEvents(_boo)"},
{ "trigger": "CCTransitionProgressHorizontal\t", "contents": "CCTransitionProgressHorizontal"},
{ "trigger": "CCTransitionProgressHorizontal_create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "CCTransitionProgressHorizontal:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCProgressTo\t", "contents": "CCProgressTo"},
{ "trigger": "CCProgressTo_create\tCCProgressTo:create(_num,_num)", "contents": "CCProgressTo:create(_num,_num)"},
{ "trigger": ":create\tCCProgressTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCAnimation\t", "contents": "CCAnimation"},
{ "trigger": "CCAnimation_setLoops\tCCAnimation:setLoops(_num)", "contents": "CCAnimation:setLoops(_num)"},
{ "trigger": ":setLoops\tCCAnimation:setLoops(_num)", "contents": "setLoops(_num)"},
{ "trigger": "CCAnimation_getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "CCAnimation:getTotalDelayUnits()"},
{ "trigger": ":getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "getTotalDelayUnits()"},
{ "trigger": "CCAnimation_setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "CCAnimation:setRestoreOriginalFrame(_boo)"},
{ "trigger": ":setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "setRestoreOriginalFrame(_boo)"},
{ "trigger": "CCAnimation_create\tCCAnimation:create()", "contents": "CCAnimation:create()"},
{ "trigger": ":create\tCCAnimation:create()", "contents": "create()"},
{ "trigger": "CCAnimation_getDuration\tCCAnimation:getDuration()", "contents": "CCAnimation:getDuration()"},
{ "trigger": ":getDuration\tCCAnimation:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCAnimation_addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_const_CCRect)", "contents": "CCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_const_CCRect)"},
{ "trigger": ":addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_const_CCRect)", "contents": "addSpriteFrameWithTexture(_CCTexture2D,_const_CCRect)"},
{ "trigger": "CCAnimation_getLoops\tCCAnimation:getLoops()", "contents": "CCAnimation:getLoops()"},
{ "trigger": ":getLoops\tCCAnimation:getLoops()", "contents": "getLoops()"},
{ "trigger": "CCAnimation_addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimation:addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimation_addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "CCAnimation:addSpriteFrameWithFileName(_str)"},
{ "trigger": ":addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "addSpriteFrameWithFileName(_str)"},
{ "trigger": "CCAnimation_getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "CCAnimation:getRestoreOriginalFrame()"},
{ "trigger": ":getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "getRestoreOriginalFrame()"},
{ "trigger": "CCAnimation_getFrames\tCCAnimation:getFrames()", "contents": "CCAnimation:getFrames()"},
{ "trigger": ":getFrames\tCCAnimation:getFrames()", "contents": "getFrames()"},
{ "trigger": "CCAnimation_setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "CCAnimation:setDelayPerUnit(_num)"},
{ "trigger": ":setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "setDelayPerUnit(_num)"},
{ "trigger": "CCAnimation_getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "CCAnimation:getDelayPerUnit()"},
{ "trigger": ":getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "getDelayPerUnit()"},
{ "trigger": "CCAnimation_createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray)", "contents": "CCAnimation:createWithSpriteFrames(_CCArray)"},
{ "trigger": ":createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray)", "contents": "createWithSpriteFrames(_CCArray)"},
{ "trigger": "CCAnimation_setFrames\tCCAnimation:setFrames(_CCArray)", "contents": "CCAnimation:setFrames(_CCArray)"},
{ "trigger": ":setFrames\tCCAnimation:setFrames(_CCArray)", "contents": "setFrames(_CCArray)"},
{ "trigger": "CCAnimation_copy\tCCAnimation:copy()", "contents": "CCAnimation:copy()"},
{ "trigger": ":copy\tCCAnimation:copy()", "contents": "copy()"},
{ "trigger": "CCFiniteTimeAction\t", "contents": "CCFiniteTimeAction"},
{ "trigger": "CCFiniteTimeAction_setDuration\tCCFiniteTimeAction:setDuration(_num)", "contents": "CCFiniteTimeAction:setDuration(_num)"},
{ "trigger": ":setDuration\tCCFiniteTimeAction:setDuration(_num)", "contents": "setDuration(_num)"},
{ "trigger": "CCFiniteTimeAction_reverse\tCCFiniteTimeAction:reverse()", "contents": "CCFiniteTimeAction:reverse()"},
{ "trigger": ":reverse\tCCFiniteTimeAction:reverse()", "contents": "reverse()"},
{ "trigger": "CCFiniteTimeAction_getDuration\tCCFiniteTimeAction:getDuration()", "contents": "CCFiniteTimeAction:getDuration()"},
{ "trigger": ":getDuration\tCCFiniteTimeAction:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCFlipX3D\t", "contents": "CCFlipX3D"},
{ "trigger": "CCFlipX3D_create\tCCFlipX3D:create(_num)", "contents": "CCFlipX3D:create(_num)"},
{ "trigger": ":create\tCCFlipX3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCSplitCols\t", "contents": "CCSplitCols"},
{ "trigger": "CCSplitCols_create\tCCSplitCols:create(_num,_num)", "contents": "CCSplitCols:create(_num,_num)"},
{ "trigger": ":create\tCCSplitCols:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCSequence\t", "contents": "CCSequence"},
{ "trigger": "CCSequence_createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSequence_create\tCCSequence:create(_CCArray)", "contents": "CCSequence:create(_CCArray)"},
{ "trigger": ":create\tCCSequence:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCTransitionZoomFlipAngular\t", "contents": "CCTransitionZoomFlipAngular"},
{ "trigger": "CCTransitionZoomFlipAngular_create\tCCTransitionZoomFlipAngular:create(_num,_CCScene,_num)", "contents": "CCTransitionZoomFlipAngular:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionZoomFlipAngular:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCDelayTime\t", "contents": "CCDelayTime"},
{ "trigger": "CCDelayTime_create\tCCDelayTime:create(_num)", "contents": "CCDelayTime:create(_num)"},
{ "trigger": ":create\tCCDelayTime:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCAnimationCache\t", "contents": "CCAnimationCache"},
{ "trigger": "CCAnimationCache_addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "CCAnimationCache:addAnimationsWithFile(_str)"},
{ "trigger": ":addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "addAnimationsWithFile(_str)"},
{ "trigger": "CCAnimationCache_animationByName\tCCAnimationCache:animationByName(_str)", "contents": "CCAnimationCache:animationByName(_str)"},
{ "trigger": ":animationByName\tCCAnimationCache:animationByName(_str)", "contents": "animationByName(_str)"},
{ "trigger": "CCAnimationCache_addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "CCAnimationCache:addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": ":addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": "CCAnimationCache_removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "CCAnimationCache:removeAnimationByName(_str)"},
{ "trigger": ":removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "removeAnimationByName(_str)"},
{ "trigger": "CCAnimationCache_sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "CCAnimationCache:sharedAnimationCache()"},
{ "trigger": ":sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "sharedAnimationCache()"},
{ "trigger": "CCAnimationCache_addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "CCAnimationCache:addAnimation(_CCAnimation,_str)"},
{ "trigger": ":addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "addAnimation(_CCAnimation,_str)"},
{ "trigger": "CCAnimationCache_purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "CCAnimationCache:purgeSharedAnimationCache()"},
{ "trigger": ":purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "purgeSharedAnimationCache()"},
{ "trigger": "CCTMXLayer\t", "contents": "CCTMXLayer"},
{ "trigger": "CCTMXLayer_removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "CCTMXLayer:removeTileAt(_CCPoint)"},
{ "trigger": ":removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "removeTileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_setMapTileSize\tCCTMXLayer:setMapTileSize(_CCSize)", "contents": "CCTMXLayer:setMapTileSize(_CCSize)"},
{ "trigger": ":setMapTileSize\tCCTMXLayer:setMapTileSize(_CCSize)", "contents": "setMapTileSize(_CCSize)"},
{ "trigger": "CCTMXLayer_getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "CCTMXLayer:getMapTileSize()"},
{ "trigger": ":getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "getMapTileSize()"},
{ "trigger": "CCTMXLayer_getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "CCTMXLayer:getLayerOrientation()"},
{ "trigger": ":getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "getLayerOrientation()"},
{ "trigger": "CCTMXLayer_releaseMap\tCCTMXLayer:releaseMap()", "contents": "CCTMXLayer:releaseMap()"},
{ "trigger": ":releaseMap\tCCTMXLayer:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTMXLayer_getTiles\tCCTMXLayer:getTiles()", "contents": "CCTMXLayer:getTiles()"},
{ "trigger": ":getTiles\tCCTMXLayer:getTiles()", "contents": "getTiles()"},
{ "trigger": "CCTMXLayer_tileGIDAt\tCCTMXLayer:tileGIDAt(_const_CCPoint)", "contents": "CCTMXLayer:tileGIDAt(_const_CCPoint)"},
{ "trigger": ":tileGIDAt\tCCTMXLayer:tileGIDAt(_const_CCPoint)", "contents": "tileGIDAt(_const_CCPoint)"},
{ "trigger": "CCTMXLayer_setTileSet\tCCTMXLayer:setTileSet(_CCTMXTilesetInfo)", "contents": "CCTMXLayer:setTileSet(_CCTMXTilesetInfo)"},
{ "trigger": ":setTileSet\tCCTMXLayer:setTileSet(_CCTMXTilesetInfo)", "contents": "setTileSet(_CCTMXTilesetInfo)"},
{ "trigger": "CCTMXLayer_setupTiles\tCCTMXLayer:setupTiles()", "contents": "CCTMXLayer:setupTiles()"},
{ "trigger": ":setupTiles\tCCTMXLayer:setupTiles()", "contents": "setupTiles()"},
{ "trigger": "CCTMXLayer_propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "CCTMXLayer:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXLayer_getProperties\tCCTMXLayer:getProperties()", "contents": "CCTMXLayer:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayer:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXLayer_create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "CCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": ":create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": "CCTMXLayer_tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "CCTMXLayer:tileAt(_CCPoint)"},
{ "trigger": ":tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "tileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_getLayerName\tCCTMXLayer:getLayerName()", "contents": "CCTMXLayer:getLayerName()"},
{ "trigger": ":getLayerName\tCCTMXLayer:getLayerName()", "contents": "getLayerName()"},
{ "trigger": "CCTMXLayer_getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "CCTMXLayer:getLayerSize()"},
{ "trigger": ":getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "getLayerSize()"},
{ "trigger": "CCTMXLayer_setLayerSize\tCCTMXLayer:setLayerSize(_CCSize)", "contents": "CCTMXLayer:setLayerSize(_CCSize)"},
{ "trigger": ":setLayerSize\tCCTMXLayer:setLayerSize(_CCSize)", "contents": "setLayerSize(_CCSize)"},
{ "trigger": "CCTMXLayer_positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "CCTMXLayer:positionAt(_CCPoint)"},
{ "trigger": ":positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "positionAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_setLayerOrientation\tCCTMXLayer:setLayerOrientation(_num)", "contents": "CCTMXLayer:setLayerOrientation(_num)"},
{ "trigger": ":setLayerOrientation\tCCTMXLayer:setLayerOrientation(_num)", "contents": "setLayerOrientation(_num)"},
{ "trigger": "CCTMXLayer_setTileGID\tCCTMXLayer:setTileGID(_num,_const_CCPoint,_num)", "contents": "CCTMXLayer:setTileGID(_num,_const_CCPoint,_num)"},
{ "trigger": ":setTileGID\tCCTMXLayer:setTileGID(_num,_const_CCPoint,_num)", "contents": "setTileGID(_num,_const_CCPoint,_num)"},
{ "trigger": "CCTMXLayer_setProperties\tCCTMXLayer:setProperties(_CCDictionary)", "contents": "CCTMXLayer:setProperties(_CCDictionary)"},
{ "trigger": ":setProperties\tCCTMXLayer:setProperties(_CCDictionary)", "contents": "setProperties(_CCDictionary)"},
{ "trigger": "CCTMXLayer_setTiles\tCCTMXLayer:setTiles(_num)", "contents": "CCTMXLayer:setTiles(_num)"},
{ "trigger": ":setTiles\tCCTMXLayer:setTiles(_num)", "contents": "setTiles(_num)"},
{ "trigger": "CCTMXLayer_setLayerName\tCCTMXLayer:setLayerName(_str)", "contents": "CCTMXLayer:setLayerName(_str)"},
{ "trigger": ":setLayerName\tCCTMXLayer:setLayerName(_str)", "contents": "setLayerName(_str)"},
{ "trigger": "CCTMXLayer_getTileSet\tCCTMXLayer:getTileSet()", "contents": "CCTMXLayer:getTileSet()"},
{ "trigger": ":getTileSet\tCCTMXLayer:getTileSet()", "contents": "getTileSet()"},
{ "trigger": "CCAccelAmplitude\t", "contents": "CCAccelAmplitude"},
{ "trigger": "CCAccelAmplitude_setRate\tCCAccelAmplitude:setRate(_num)", "contents": "CCAccelAmplitude:setRate(_num)"},
{ "trigger": ":setRate\tCCAccelAmplitude:setRate(_num)", "contents": "setRate(_num)"},
{ "trigger": "CCAccelAmplitude_getRate\tCCAccelAmplitude:getRate()", "contents": "CCAccelAmplitude:getRate()"},
{ "trigger": ":getRate\tCCAccelAmplitude:getRate()", "contents": "getRate()"},
{ "trigger": "CCAccelAmplitude_create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCJumpTiles3D\t", "contents": "CCJumpTiles3D"},
{ "trigger": "CCJumpTiles3D_getAmplitude\tCCJumpTiles3D:getAmplitude()", "contents": "CCJumpTiles3D:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCJumpTiles3D:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCJumpTiles3D_create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCJumpTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCJumpTiles3D_getAmplitudeRate\tCCJumpTiles3D:getAmplitudeRate()", "contents": "CCJumpTiles3D:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCJumpTiles3D:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCJumpTiles3D_setAmplitudeRate\tCCJumpTiles3D:setAmplitudeRate(_num)", "contents": "CCJumpTiles3D:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCJumpTiles3D:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCJumpTiles3D_setAmplitude\tCCJumpTiles3D:setAmplitude(_num)", "contents": "CCJumpTiles3D:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCJumpTiles3D:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCMenuItemLabel\t", "contents": "CCMenuItemLabel"},
{ "trigger": "CCMenuItemLabel_setColor\tCCMenuItemLabel:setColor(_ccColor3B)", "contents": "CCMenuItemLabel:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCMenuItemLabel:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCMenuItemLabel_getColor\tCCMenuItemLabel:getColor()", "contents": "CCMenuItemLabel:getColor()"},
{ "trigger": ":getColor\tCCMenuItemLabel:getColor()", "contents": "getColor()"},
{ "trigger": "CCMenuItemLabel_setOpacity\tCCMenuItemLabel:setOpacity(_num)", "contents": "CCMenuItemLabel:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMenuItemLabel:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMenuItemLabel_setString\tCCMenuItemLabel:setString(_str)", "contents": "CCMenuItemLabel:setString(_str)"},
{ "trigger": ":setString\tCCMenuItemLabel:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCMenuItemLabel_getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "CCMenuItemLabel:getDisabledColor()"},
{ "trigger": ":getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "getDisabledColor()"},
{ "trigger": "CCMenuItemLabel_getOpacity\tCCMenuItemLabel:getOpacity()", "contents": "CCMenuItemLabel:getOpacity()"},
{ "trigger": ":getOpacity\tCCMenuItemLabel:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMenuItemLabel_setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "CCMenuItemLabel:setLabel(_CCNode)"},
{ "trigger": ":setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "setLabel(_CCNode)"},
{ "trigger": "CCMenuItemLabel_isOpacityModifyRGB\tCCMenuItemLabel:isOpacityModifyRGB()", "contents": "CCMenuItemLabel:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenuItemLabel:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenuItemLabel_create\tCCMenuItemLabel:create(_CCNode)", "contents": "CCMenuItemLabel:create(_CCNode)"},
{ "trigger": ":create\tCCMenuItemLabel:create(_CCNode)", "contents": "create(_CCNode)"},
{ "trigger": "CCMenuItemLabel_setOpacityModifyRGB\tCCMenuItemLabel:setOpacityModifyRGB(_boo)", "contents": "CCMenuItemLabel:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenuItemLabel:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenuItemLabel_getLabel\tCCMenuItemLabel:getLabel()", "contents": "CCMenuItemLabel:getLabel()"},
{ "trigger": ":getLabel\tCCMenuItemLabel:getLabel()", "contents": "getLabel()"},
{ "trigger": "CCMenuItemLabel_setDisabledColor\tCCMenuItemLabel:setDisabledColor(_const_ccColor3B)", "contents": "CCMenuItemLabel:setDisabledColor(_const_ccColor3B)"},
{ "trigger": ":setDisabledColor\tCCMenuItemLabel:setDisabledColor(_const_ccColor3B)", "contents": "setDisabledColor(_const_ccColor3B)"},
{ "trigger": "CCLayerColor\t", "contents": "CCLayerColor"},
{ "trigger": "CCLayerColor_getColor\tCCLayerColor:getColor()", "contents": "CCLayerColor:getColor()"},
{ "trigger": ":getColor\tCCLayerColor:getColor()", "contents": "getColor()"},
{ "trigger": "CCLayerColor_setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "CCLayerColor:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLayerColor_getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "CCLayerColor:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCLayerColor_isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "CCLayerColor:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLayerColor_setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "CCLayerColor:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLayerColor_create\tCCLayerColor:create(_ccColor4B)", "contents": "CCLayerColor:create(_ccColor4B)"},
{ "trigger": ":create\tCCLayerColor:create(_ccColor4B)", "contents": "create(_ccColor4B)"},
{ "trigger": "CCLayerColor_changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "CCLayerColor:changeWidthAndHeight(_num,_num)"},
{ "trigger": ":changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "changeWidthAndHeight(_num,_num)"},
{ "trigger": "CCLayerColor_setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "CCLayerColor:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLayerColor_setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "CCLayerColor:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCLayerColor_changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "CCLayerColor:changeWidth(_num)"},
{ "trigger": ":changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "changeWidth(_num)"},
{ "trigger": "CCLayerColor_getOpacity\tCCLayerColor:getOpacity()", "contents": "CCLayerColor:getOpacity()"},
{ "trigger": ":getOpacity\tCCLayerColor:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLayerColor_changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "CCLayerColor:changeHeight(_num)"},
{ "trigger": ":changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "changeHeight(_num)"},
{ "trigger": "CCLayerColor_setContentSize\tCCLayerColor:setContentSize(_const_CCSize)", "contents": "CCLayerColor:setContentSize(_const_CCSize)"},
{ "trigger": ":setContentSize\tCCLayerColor:setContentSize(_const_CCSize)", "contents": "setContentSize(_const_CCSize)"},
{ "trigger": "CCRenderTexture\t", "contents": "CCRenderTexture"},
{ "trigger": "CCRenderTexture_clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "CCRenderTexture:clear(_num,_num,_num,_num)"},
{ "trigger": ":clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "clear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_setSprite\tCCRenderTexture:setSprite(_CCSprite)", "contents": "CCRenderTexture:setSprite(_CCSprite)"},
{ "trigger": ":setSprite\tCCRenderTexture:setSprite(_CCSprite)", "contents": "setSprite(_CCSprite)"},
{ "trigger": "CCRenderTexture_newCCImage\tCCRenderTexture:newCCImage()", "contents": "CCRenderTexture:newCCImage()"},
{ "trigger": ":newCCImage\tCCRenderTexture:newCCImage()", "contents": "newCCImage()"},
{ "trigger": "CCRenderTexture_saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "CCRenderTexture:saveToFile(_str)"},
{ "trigger": ":saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "saveToFile(_str)"},
{ "trigger": "CCRenderTexture_endToLua\tCCRenderTexture:endToLua()", "contents": "CCRenderTexture:endToLua()"},
{ "trigger": ":endToLua\tCCRenderTexture:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCRenderTexture_getSprite\tCCRenderTexture:getSprite()", "contents": "CCRenderTexture:getSprite()"},
{ "trigger": ":getSprite\tCCRenderTexture:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCRenderTexture_clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "CCRenderTexture:clearDepth(_num)"},
{ "trigger": ":clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "clearDepth(_num)"},
{ "trigger": "CCRenderTexture_beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "CCRenderTexture:beginWithClear(_num,_num,_num,_num)"},
{ "trigger": ":beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "beginWithClear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_create\tCCRenderTexture:create(_num,_num)", "contents": "CCRenderTexture:create(_num,_num)"},
{ "trigger": ":create\tCCRenderTexture:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCRenderTexture_clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "CCRenderTexture:clearStencil(_num)"},
{ "trigger": ":clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "clearStencil(_num)"},
{ "trigger": "CCRenderTexture_begin\tCCRenderTexture:begin()", "contents": "CCRenderTexture:begin()"},
{ "trigger": ":begin\tCCRenderTexture:begin()", "contents": "begin()"},
{ "trigger": "CCTransitionMoveInB\t", "contents": "CCTransitionMoveInB"},
{ "trigger": "CCTransitionMoveInB_create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "CCTransitionMoveInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCCatmullRomBy\t", "contents": "CCCatmullRomBy"},
{ "trigger": "CCCatmullRomBy_create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "CCCatmullRomBy:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCTiledGrid3DAction\t", "contents": "CCTiledGrid3DAction"},
{ "trigger": "CCTiledGrid3DAction_create\tCCTiledGrid3DAction:create(_num,_const_CCSize)", "contents": "CCTiledGrid3DAction:create(_num,_const_CCSize)"},
{ "trigger": ":create\tCCTiledGrid3DAction:create(_num,_const_CCSize)", "contents": "create(_num,_const_CCSize)"},
{ "trigger": "CCEGLViewProtocol\t", "contents": "CCEGLViewProtocol"},
{ "trigger": "CCEGLViewProtocol_setViewPortInPoints\tCCEGLViewProtocol:setViewPortInPoints(_num,_num,_num,_num)", "contents": "CCEGLViewProtocol:setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setViewPortInPoints\tCCEGLViewProtocol:setViewPortInPoints(_num,_num,_num,_num)", "contents": "setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCEGLViewProtocol_getDesignResolutionSize\tCCEGLViewProtocol:getDesignResolutionSize()", "contents": "CCEGLViewProtocol:getDesignResolutionSize()"},
{ "trigger": ":getDesignResolutionSize\tCCEGLViewProtocol:getDesignResolutionSize()", "contents": "getDesignResolutionSize()"},
{ "trigger": "CCEGLViewProtocol_setDesignResolutionSize\tCCEGLViewProtocol:setDesignResolutionSize(_num,_num,_num)", "contents": "CCEGLViewProtocol:setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": ":setDesignResolutionSize\tCCEGLViewProtocol:setDesignResolutionSize(_num,_num,_num)", "contents": "setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": "CCEGLViewProtocol_setFrameSize\tCCEGLViewProtocol:setFrameSize(_num,_num)", "contents": "CCEGLViewProtocol:setFrameSize(_num,_num)"},
{ "trigger": ":setFrameSize\tCCEGLViewProtocol:setFrameSize(_num,_num)", "contents": "setFrameSize(_num,_num)"},
{ "trigger": "CCEGLViewProtocol_getVisibleSize\tCCEGLViewProtocol:getVisibleSize()", "contents": "CCEGLViewProtocol:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCEGLViewProtocol:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCEGLViewProtocol_getFrameSize\tCCEGLViewProtocol:getFrameSize()", "contents": "CCEGLViewProtocol:getFrameSize()"},
{ "trigger": ":getFrameSize\tCCEGLViewProtocol:getFrameSize()", "contents": "getFrameSize()"},
{ "trigger": "CCEGLViewProtocol_getViewPortRect\tCCEGLViewProtocol:getViewPortRect()", "contents": "CCEGLViewProtocol:getViewPortRect()"},
{ "trigger": ":getViewPortRect\tCCEGLViewProtocol:getViewPortRect()", "contents": "getViewPortRect()"},
{ "trigger": "CCEGLViewProtocol_getScaleY\tCCEGLViewProtocol:getScaleY()", "contents": "CCEGLViewProtocol:getScaleY()"},
{ "trigger": ":getScaleY\tCCEGLViewProtocol:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCEGLViewProtocol_getVisibleOrigin\tCCEGLViewProtocol:getVisibleOrigin()", "contents": "CCEGLViewProtocol:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCEGLViewProtocol:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCEGLViewProtocol_getScaleX\tCCEGLViewProtocol:getScaleX()", "contents": "CCEGLViewProtocol:getScaleX()"},
{ "trigger": ":getScaleX\tCCEGLViewProtocol:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCEGLViewProtocol_setScissorInPoints\tCCEGLViewProtocol:setScissorInPoints(_num,_num,_num,_num)", "contents": "CCEGLViewProtocol:setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setScissorInPoints\tCCEGLViewProtocol:setScissorInPoints(_num,_num,_num,_num)", "contents": "setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCTransitionMoveInT\t", "contents": "CCTransitionMoveInT"},
{ "trigger": "CCTransitionMoveInT_create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "CCTransitionMoveInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionMoveInL\t", "contents": "CCTransitionMoveInL"},
{ "trigger": "CCTransitionMoveInL_create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "CCTransitionMoveInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionRotoZoom\t", "contents": "CCTransitionRotoZoom"},
{ "trigger": "CCTransitionRotoZoom_create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "CCTransitionRotoZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCFadeOutTRTiles\t", "contents": "CCFadeOutTRTiles"},
{ "trigger": "CCFadeOutTRTiles_turnOffTile\tCCFadeOutTRTiles:turnOffTile(_CCPoint)", "contents": "CCFadeOutTRTiles:turnOffTile(_CCPoint)"},
{ "trigger": ":turnOffTile\tCCFadeOutTRTiles:turnOffTile(_CCPoint)", "contents": "turnOffTile(_CCPoint)"},
{ "trigger": "CCFadeOutTRTiles_transformTile\tCCFadeOutTRTiles:transformTile(_CCPoint,_num)", "contents": "CCFadeOutTRTiles:transformTile(_CCPoint,_num)"},
{ "trigger": ":transformTile\tCCFadeOutTRTiles:transformTile(_CCPoint,_num)", "contents": "transformTile(_CCPoint,_num)"},
{ "trigger": "CCFadeOutTRTiles_turnOnTile\tCCFadeOutTRTiles:turnOnTile(_CCPoint)", "contents": "CCFadeOutTRTiles:turnOnTile(_CCPoint)"},
{ "trigger": ":turnOnTile\tCCFadeOutTRTiles:turnOnTile(_CCPoint)", "contents": "turnOnTile(_CCPoint)"},
{ "trigger": "CCFadeOutTRTiles_create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "CCFadeOutTRTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionMoveInR\t", "contents": "CCTransitionMoveInR"},
{ "trigger": "CCTransitionMoveInR_create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "CCTransitionMoveInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCGridAction\t", "contents": "CCGridAction"},
{ "trigger": "CCGridAction_create\tCCGridAction:create(_num,_CCSize)", "contents": "CCGridAction:create(_num,_CCSize)"},
{ "trigger": ":create\tCCGridAction:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCParallaxNode\t", "contents": "CCParallaxNode"},
{ "trigger": "CCParallaxNode_removeChild\tCCParallaxNode:removeChild(_CCNode,_boo)", "contents": "CCParallaxNode:removeChild(_CCNode,_boo)"},
{ "trigger": ":removeChild\tCCParallaxNode:removeChild(_CCNode,_boo)", "contents": "removeChild(_CCNode,_boo)"},
{ "trigger": "CCParallaxNode_removeAllChildrenWithCleanup\tCCParallaxNode:removeAllChildrenWithCleanup(_boo)", "contents": "CCParallaxNode:removeAllChildrenWithCleanup(_boo)"},
{ "trigger": ":removeAllChildrenWithCleanup\tCCParallaxNode:removeAllChildrenWithCleanup(_boo)", "contents": "removeAllChildrenWithCleanup(_boo)"},
{ "trigger": "CCParallaxNode_addChild\tCCParallaxNode:addChild(_CCNode,_num,_num)", "contents": "CCParallaxNode:addChild(_CCNode,_num,_num)"},
{ "trigger": ":addChild\tCCParallaxNode:addChild(_CCNode,_num,_num)", "contents": "addChild(_CCNode,_num,_num)"},
{ "trigger": "CCParallaxNode_visit\tCCParallaxNode:visit()", "contents": "CCParallaxNode:visit()"},
{ "trigger": ":visit\tCCParallaxNode:visit()", "contents": "visit()"},
{ "trigger": "CCParallaxNode_create\tCCParallaxNode:create()", "contents": "CCParallaxNode:create()"},
{ "trigger": ":create\tCCParallaxNode:create()", "contents": "create()"},
{ "trigger": "CCEaseOut\t", "contents": "CCEaseOut"},
{ "trigger": "CCEaseOut_create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "CCEaseOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCNode\t", "contents": "CCNode"},
{ "trigger": "CCNode_cleanup\tCCNode:cleanup()", "contents": "CCNode:cleanup()"},
{ "trigger": ":cleanup\tCCNode:cleanup()", "contents": "cleanup()"},
{ "trigger": "CCNode_setScaleY\tCCNode:setScaleY(_num)", "contents": "CCNode:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCNode:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCNode_getChildrenCount\tCCNode:getChildrenCount()", "contents": "CCNode:getChildrenCount()"},
{ "trigger": ":getChildrenCount\tCCNode:getChildrenCount()", "contents": "getChildrenCount()"},
{ "trigger": "CCNode_setScaleX\tCCNode:setScaleX(_num)", "contents": "CCNode:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCNode:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCNode_getChildren\tCCNode:getChildren()", "contents": "CCNode:getChildren()"},
{ "trigger": ":getChildren\tCCNode:getChildren()", "contents": "getChildren()"},
{ "trigger": "CCNode_reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "CCNode:reorderChild(_CCNode,_num)"},
{ "trigger": ":reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "reorderChild(_CCNode,_num)"},
{ "trigger": "CCNode_visit\tCCNode:visit()", "contents": "CCNode:visit()"},
{ "trigger": ":visit\tCCNode:visit()", "contents": "visit()"},
{ "trigger": "CCNode_isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "CCNode:isIgnoreAnchorPointForPosition()"},
{ "trigger": ":isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "isIgnoreAnchorPointForPosition()"},
{ "trigger": "CCNode_convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "CCNode:convertToWorldSpace(_CCPoint)"},
{ "trigger": ":convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "convertToWorldSpace(_CCPoint)"},
{ "trigger": "CCNode_numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "CCNode:numberOfRunningActions()"},
{ "trigger": ":numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "numberOfRunningActions()"},
{ "trigger": "CCNode_setRotation\tCCNode:setRotation(_num)", "contents": "CCNode:setRotation(_num)"},
{ "trigger": ":setRotation\tCCNode:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCNode_setTag\tCCNode:setTag(_num)", "contents": "CCNode:setTag(_num)"},
{ "trigger": ":setTag\tCCNode:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCNode_getScale\tCCNode:getScale()", "contents": "CCNode:getScale()"},
{ "trigger": ":getScale\tCCNode:getScale()", "contents": "getScale()"},
{ "trigger": "CCNode_description\tCCNode:description()", "contents": "CCNode:description()"},
{ "trigger": ":description\tCCNode:description()", "contents": "description()"},
{ "trigger": "CCNode_convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "CCNode:convertToNodeSpace(_CCPoint)"},
{ "trigger": ":convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "convertToNodeSpace(_CCPoint)"},
{ "trigger": "CCNode_runAction\tCCNode:runAction(_CCAction)", "contents": "CCNode:runAction(_CCAction)"},
{ "trigger": ":runAction\tCCNode:runAction(_CCAction)", "contents": "runAction(_CCAction)"},
{ "trigger": "CCNode_getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "CCNode:getAnchorPointInPoints()"},
{ "trigger": ":getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "getAnchorPointInPoints()"},
{ "trigger": "CCNode_convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": "CCNode_setVertexZ\tCCNode:setVertexZ(_num)", "contents": "CCNode:setVertexZ(_num)"},
{ "trigger": ":setVertexZ\tCCNode:setVertexZ(_num)", "contents": "setVertexZ(_num)"},
{ "trigger": "CCNode_isRunning\tCCNode:isRunning()", "contents": "CCNode:isRunning()"},
{ "trigger": ":isRunning\tCCNode:isRunning()", "contents": "isRunning()"},
{ "trigger": "CCNode_getParent\tCCNode:getParent()", "contents": "CCNode:getParent()"},
{ "trigger": ":getParent\tCCNode:getParent()", "contents": "getParent()"},
{ "trigger": "CCNode_setParent\tCCNode:setParent(_CCNode)", "contents": "CCNode:setParent(_CCNode)"},
{ "trigger": ":setParent\tCCNode:setParent(_CCNode)", "contents": "setParent(_CCNode)"},
{ "trigger": "CCNode_getContentSize\tCCNode:getContentSize()", "contents": "CCNode:getContentSize()"},
{ "trigger": ":getContentSize\tCCNode:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCNode_getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "CCNode:getAnchorPoint()"},
{ "trigger": ":getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "getAnchorPoint()"},
{ "trigger": "CCNode_setPosition\tCCNode:setPosition(_CCPoint)", "contents": "CCNode:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCNode:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCNode_getRotation\tCCNode:getRotation()", "contents": "CCNode:getRotation()"},
{ "trigger": ":getRotation\tCCNode:getRotation()", "contents": "getRotation()"},
{ "trigger": "CCNode_create\tCCNode:create()", "contents": "CCNode:create()"},
{ "trigger": ":create\tCCNode:create()", "contents": "create()"},
{ "trigger": "CCNode_convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "CCNode:convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": ":convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_getUserObject\tCCNode:getUserObject()", "contents": "CCNode:getUserObject()"},
{ "trigger": ":getUserObject\tCCNode:getUserObject()", "contents": "getUserObject()"},
{ "trigger": "CCNode_stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "CCNode:stopActionByTag(_num)"},
{ "trigger": ":stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "stopActionByTag(_num)"},
{ "trigger": "CCNode_convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": "CCNode_convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "CCNode:convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": ":convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_removeChild\tCCNode:removeChild(_CCNode,_boo)", "contents": "CCNode:removeChild(_CCNode,_boo)"},
{ "trigger": ":removeChild\tCCNode:removeChild(_CCNode,_boo)", "contents": "removeChild(_CCNode,_boo)"},
{ "trigger": "CCNode_getActionByTag\tCCNode:getActionByTag(_num)", "contents": "CCNode:getActionByTag(_num)"},
{ "trigger": ":getActionByTag\tCCNode:getActionByTag(_num)", "contents": "getActionByTag(_num)"},
{ "trigger": "CCNode_stopAllActions\tCCNode:stopAllActions()", "contents": "CCNode:stopAllActions()"},
{ "trigger": ":stopAllActions\tCCNode:stopAllActions()", "contents": "stopAllActions()"},
{ "trigger": "CCNode_addChild\tCCNode:addChild(_CCNode)", "contents": "CCNode:addChild(_CCNode)"},
{ "trigger": ":addChild\tCCNode:addChild(_CCNode)", "contents": "addChild(_CCNode)"},
{ "trigger": "CCNode_unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "CCNode:unregisterScriptHandler()"},
{ "trigger": ":unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "unregisterScriptHandler()"},
{ "trigger": "CCNode_getChildByTag\tCCNode:getChildByTag(_num)", "contents": "CCNode:getChildByTag(_num)"},
{ "trigger": ":getChildByTag\tCCNode:getChildByTag(_num)", "contents": "getChildByTag(_num)"},
{ "trigger": "CCNode_transformAncestors\tCCNode:transformAncestors()", "contents": "CCNode:transformAncestors()"},
{ "trigger": ":transformAncestors\tCCNode:transformAncestors()", "contents": "transformAncestors()"},
{ "trigger": "CCNode_getTag\tCCNode:getTag()", "contents": "CCNode:getTag()"},
{ "trigger": ":getTag\tCCNode:getTag()", "contents": "getTag()"},
{ "trigger": "CCNode_getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "CCNode:getOrderOfArrival()"},
{ "trigger": ":getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "getOrderOfArrival()"},
{ "trigger": "CCNode_setZOrder\tCCNode:setZOrder(_num)", "contents": "CCNode:setZOrder(_num)"},
{ "trigger": ":setZOrder\tCCNode:setZOrder(_num)", "contents": "setZOrder(_num)"},
{ "trigger": "CCNode_getVertexZ\tCCNode:getVertexZ()", "contents": "CCNode:getVertexZ()"},
{ "trigger": ":getVertexZ\tCCNode:getVertexZ()", "contents": "getVertexZ()"},
{ "trigger": "CCNode_getScaleY\tCCNode:getScaleY()", "contents": "CCNode:getScaleY()"},
{ "trigger": ":getScaleY\tCCNode:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCNode_getPosition\tCCNode:getPosition(_num,_num)", "contents": "CCNode:getPosition(_num,_num)"},
{ "trigger": ":getPosition\tCCNode:getPosition(_num,_num)", "contents": "getPosition(_num,_num)"},
{ "trigger": "CCNode_getScaleX\tCCNode:getScaleX()", "contents": "CCNode:getScaleX()"},
{ "trigger": ":getScaleX\tCCNode:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCNode_setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "CCNode:setAnchorPoint(_CCPoint)"},
{ "trigger": ":setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "setAnchorPoint(_CCPoint)"},
{ "trigger": "CCNode_transform\tCCNode:transform()", "contents": "CCNode:transform()"},
{ "trigger": ":transform\tCCNode:transform()", "contents": "transform()"},
{ "trigger": "CCNode_boundingBox\tCCNode:boundingBox()", "contents": "CCNode:boundingBox()"},
{ "trigger": ":boundingBox\tCCNode:boundingBox()", "contents": "boundingBox()"},
{ "trigger": "CCNode_isVisible\tCCNode:isVisible()", "contents": "CCNode:isVisible()"},
{ "trigger": ":isVisible\tCCNode:isVisible()", "contents": "isVisible()"},
{ "trigger": "CCNode_getPositionY\tCCNode:getPositionY()", "contents": "CCNode:getPositionY()"},
{ "trigger": ":getPositionY\tCCNode:getPositionY()", "contents": "getPositionY()"},
{ "trigger": "CCNode_getPositionX\tCCNode:getPositionX()", "contents": "CCNode:getPositionX()"},
{ "trigger": ":getPositionX\tCCNode:getPositionX()", "contents": "getPositionX()"},
{ "trigger": "CCNode_scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "CCNode:scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": ":scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": "CCNode_getZOrder\tCCNode:getZOrder()", "contents": "CCNode:getZOrder()"},
{ "trigger": ":getZOrder\tCCNode:getZOrder()", "contents": "getZOrder()"},
{ "trigger": "CCNode_getSkewY\tCCNode:getSkewY()", "contents": "CCNode:getSkewY()"},
{ "trigger": ":getSkewY\tCCNode:getSkewY()", "contents": "getSkewY()"},
{ "trigger": "CCNode_getSkewX\tCCNode:getSkewX()", "contents": "CCNode:getSkewX()"},
{ "trigger": ":getSkewX\tCCNode:getSkewX()", "contents": "getSkewX()"},
{ "trigger": "CCNode_unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "CCNode:unscheduleUpdate()"},
{ "trigger": ":unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "unscheduleUpdate()"},
{ "trigger": "CCNode_setSkewY\tCCNode:setSkewY(_num)", "contents": "CCNode:setSkewY(_num)"},
{ "trigger": ":setSkewY\tCCNode:setSkewY(_num)", "contents": "setSkewY(_num)"},
{ "trigger": "CCNode_setSkewX\tCCNode:setSkewX(_num)", "contents": "CCNode:setSkewX(_num)"},
{ "trigger": ":setSkewX\tCCNode:setSkewX(_num)", "contents": "setSkewX(_num)"},
{ "trigger": "CCNode_stopAction\tCCNode:stopAction(_CCAction)", "contents": "CCNode:stopAction(_CCAction)"},
{ "trigger": ":stopAction\tCCNode:stopAction(_CCAction)", "contents": "stopAction(_CCAction)"},
{ "trigger": "CCNode_setVisible\tCCNode:setVisible(_boo)", "contents": "CCNode:setVisible(_boo)"},
{ "trigger": ":setVisible\tCCNode:setVisible(_boo)", "contents": "setVisible(_boo)"},
{ "trigger": "CCNode_setScale\tCCNode:setScale(_num)", "contents": "CCNode:setScale(_num)"},
{ "trigger": ":setScale\tCCNode:setScale(_num)", "contents": "setScale(_num)"},
{ "trigger": "CCNode_setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "CCNode:setUserObject(_CCObject)"},
{ "trigger": ":setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "setUserObject(_CCObject)"},
{ "trigger": "CCNode_removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "CCNode:removeFromParentAndCleanup(_boo)"},
{ "trigger": ":removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "removeFromParentAndCleanup(_boo)"},
{ "trigger": "CCNode_registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "CCNode:registerScriptHandler(_listener)"},
{ "trigger": ":registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "registerScriptHandler(_listener)"},
{ "trigger": "CCNode_getCamera\tCCNode:getCamera()", "contents": "CCNode:getCamera()"},
{ "trigger": ":getCamera\tCCNode:getCamera()", "contents": "getCamera()"},
{ "trigger": "CCNode_ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "CCNode:ignoreAnchorPointForPosition(_boo)"},
{ "trigger": ":ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "ignoreAnchorPointForPosition(_boo)"},
{ "trigger": "CCNode_setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "CCNode:setOrderOfArrival(_num)"},
{ "trigger": ":setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "setOrderOfArrival(_num)"},
{ "trigger": "CCNode_removeChildByTag\tCCNode:removeChildByTag(_num,_boo)", "contents": "CCNode:removeChildByTag(_num,_boo)"},
{ "trigger": ":removeChildByTag\tCCNode:removeChildByTag(_num,_boo)", "contents": "removeChildByTag(_num,_boo)"},
{ "trigger": "CCNode_removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "CCNode:removeAllChildrenWithCleanup(_boo)"},
{ "trigger": ":removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "removeAllChildrenWithCleanup(_boo)"},
{ "trigger": "CCNode_setPositionY\tCCNode:setPositionY(_num)", "contents": "CCNode:setPositionY(_num)"},
{ "trigger": ":setPositionY\tCCNode:setPositionY(_num)", "contents": "setPositionY(_num)"},
{ "trigger": "CCNode_setPositionX\tCCNode:setPositionX(_num)", "contents": "CCNode:setPositionX(_num)"},
{ "trigger": ":setPositionX\tCCNode:setPositionX(_num)", "contents": "setPositionX(_num)"},
{ "trigger": "CCNode_setContentSize\tCCNode:setContentSize(_const_CCSize)", "contents": "CCNode:setContentSize(_const_CCSize)"},
{ "trigger": ":setContentSize\tCCNode:setContentSize(_const_CCSize)", "contents": "setContentSize(_const_CCSize)"},
{ "trigger": "CCLens3D\t", "contents": "CCLens3D"},
{ "trigger": "CCLens3D_setPosition\tCCLens3D:setPosition(_CCPoint)", "contents": "CCLens3D:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCLens3D:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCLens3D_getLensEffect\tCCLens3D:getLensEffect()", "contents": "CCLens3D:getLensEffect()"},
{ "trigger": ":getLensEffect\tCCLens3D:getLensEffect()", "contents": "getLensEffect()"},
{ "trigger": "CCLens3D_setLensEffect\tCCLens3D:setLensEffect(_num)", "contents": "CCLens3D:setLensEffect(_num)"},
{ "trigger": ":setLensEffect\tCCLens3D:setLensEffect(_num)", "contents": "setLensEffect(_num)"},
{ "trigger": "CCLens3D_getPosition\tCCLens3D:getPosition()", "contents": "CCLens3D:getPosition()"},
{ "trigger": ":getPosition\tCCLens3D:getPosition()", "contents": "getPosition()"},
{ "trigger": "CCLens3D_create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "CCLens3D:create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": ":create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": "CCBlink\t", "contents": "CCBlink"},
{ "trigger": "CCBlink_create\tCCBlink:create(_num,_num)", "contents": "CCBlink:create(_num,_num)"},
{ "trigger": ":create\tCCBlink:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCFadeOutUpTiles\t", "contents": "CCFadeOutUpTiles"},
{ "trigger": "CCFadeOutUpTiles_transformTile\tCCFadeOutUpTiles:transformTile(_CCPoint,_num)", "contents": "CCFadeOutUpTiles:transformTile(_CCPoint,_num)"},
{ "trigger": ":transformTile\tCCFadeOutUpTiles:transformTile(_CCPoint,_num)", "contents": "transformTile(_CCPoint,_num)"},
{ "trigger": "CCFadeOutUpTiles_create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "CCFadeOutUpTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCMenuItemAtlasFont\t", "contents": "CCMenuItemAtlasFont"},
{ "trigger": "CCMenuItemAtlasFont_create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "CCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)"},
{ "trigger": ":create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "create(_str,_str,_num,_num,_num)"},
{ "trigger": "CCWavesTiles3D\t", "contents": "CCWavesTiles3D"},
{ "trigger": "CCWavesTiles3D_getAmplitude\tCCWavesTiles3D:getAmplitude()", "contents": "CCWavesTiles3D:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCWavesTiles3D:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCWavesTiles3D_create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCWavesTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCWavesTiles3D_getAmplitudeRate\tCCWavesTiles3D:getAmplitudeRate()", "contents": "CCWavesTiles3D:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCWavesTiles3D:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCWavesTiles3D_setAmplitudeRate\tCCWavesTiles3D:setAmplitudeRate(_num)", "contents": "CCWavesTiles3D:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCWavesTiles3D:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCWavesTiles3D_setAmplitude\tCCWavesTiles3D:setAmplitude(_num)", "contents": "CCWavesTiles3D:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCWavesTiles3D:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCMoveBy\t", "contents": "CCMoveBy"},
{ "trigger": "CCMoveBy_create\tCCMoveBy:create(_num,_CCPoint)", "contents": "CCMoveBy:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveBy:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCRectShape\t", "contents": "CCRectShape"},
{ "trigger": "CCRectShape_setFill\tCCRectShape:setFill(_boo)", "contents": "CCRectShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCRectShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCRectShape_setSize\tCCRectShape:setSize(_const_CCSize)", "contents": "CCRectShape:setSize(_const_CCSize)"},
{ "trigger": ":setSize\tCCRectShape:setSize(_const_CCSize)", "contents": "setSize(_const_CCSize)"},
{ "trigger": "CCRectShape_isFill\tCCRectShape:isFill()", "contents": "CCRectShape:isFill()"},
{ "trigger": ":isFill\tCCRectShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCRectShape_getSize\tCCRectShape:getSize()", "contents": "CCRectShape:getSize()"},
{ "trigger": ":getSize\tCCRectShape:getSize()", "contents": "getSize()"},
{ "trigger": "CCRectShape_create\tCCRectShape:create(_const_CCSize)", "contents": "CCRectShape:create(_const_CCSize)"},
{ "trigger": ":create\tCCRectShape:create(_const_CCSize)", "contents": "create(_const_CCSize)"},
{ "trigger": "CCPointShape\t", "contents": "CCPointShape"},
{ "trigger": "CCPointShape_create\tCCPointShape:create()", "contents": "CCPointShape:create()"},
{ "trigger": ":create\tCCPointShape:create()", "contents": "create()"},
{ "trigger": "CCMoveTo\t", "contents": "CCMoveTo"},
{ "trigger": "CCMoveTo_create\tCCMoveTo:create(_num,_CCPoint)", "contents": "CCMoveTo:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveTo:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCEaseBounceOut\t", "contents": "CCEaseBounceOut"},
{ "trigger": "CCEaseBounceOut_create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "CCEaseBounceOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCSpriteFrameCache\t", "contents": "CCSpriteFrameCache"},
{ "trigger": "CCSpriteFrameCache_spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "CCSpriteFrameCache:spriteFrameByName(_str)"},
{ "trigger": ":spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "spriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "CCSpriteFrameCache:removeSpriteFrames()"},
{ "trigger": ":removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "removeSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "CCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": ":addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": "CCSpriteFrameCache_addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "CCSpriteFrameCache:addSpriteFramesWithFile(_str)"},
{ "trigger": ":addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "addSpriteFramesWithFile(_str)"},
{ "trigger": "CCSpriteFrameCache_purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:purgeSharedSpriteFrameCache()"},
{ "trigger": ":purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "purgeSharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "CCSpriteFrameCache:removeSpriteFrameByName(_str)"},
{ "trigger": ":removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "removeSpriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "CCSpriteFrameCache:removeUnusedSpriteFrames()"},
{ "trigger": ":removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "removeUnusedSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:sharedSpriteFrameCache()"},
{ "trigger": ":sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "sharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": ":removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromFile(_str)"},
{ "trigger": ":removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "removeSpriteFramesFromFile(_str)"},
{ "trigger": "CCMenuItemSprite\t", "contents": "CCMenuItemSprite"},
{ "trigger": "CCMenuItemSprite_getColor\tCCMenuItemSprite:getColor()", "contents": "CCMenuItemSprite:getColor()"},
{ "trigger": ":getColor\tCCMenuItemSprite:getColor()", "contents": "getColor()"},
{ "trigger": "CCMenuItemSprite_setOpacity\tCCMenuItemSprite:setOpacity(_num)", "contents": "CCMenuItemSprite:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMenuItemSprite:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMenuItemSprite_setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "CCMenuItemSprite:setNormalImage(_CCNode)"},
{ "trigger": ":setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "setNormalImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "CCMenuItemSprite:setSelectedImage(_CCNode)"},
{ "trigger": ":setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "setSelectedImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "CCMenuItemSprite:getSelectedImage()"},
{ "trigger": ":getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "getSelectedImage()"},
{ "trigger": "CCMenuItemSprite_isOpacityModifyRGB\tCCMenuItemSprite:isOpacityModifyRGB()", "contents": "CCMenuItemSprite:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenuItemSprite:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenuItemSprite_setOpacityModifyRGB\tCCMenuItemSprite:setOpacityModifyRGB(_boo)", "contents": "CCMenuItemSprite:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenuItemSprite:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenuItemSprite_create\tCCMenuItemSprite:create(_CCNode,_CCNode)", "contents": "CCMenuItemSprite:create(_CCNode,_CCNode)"},
{ "trigger": ":create\tCCMenuItemSprite:create(_CCNode,_CCNode)", "contents": "create(_CCNode,_CCNode)"},
{ "trigger": "CCMenuItemSprite_setColor\tCCMenuItemSprite:setColor(_ccColor3B)", "contents": "CCMenuItemSprite:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCMenuItemSprite:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCMenuItemSprite_getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "CCMenuItemSprite:getNormalImage()"},
{ "trigger": ":getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "getNormalImage()"},
{ "trigger": "CCMenuItemSprite_setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "CCMenuItemSprite:setDisabledImage(_CCNode)"},
{ "trigger": ":setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "setDisabledImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_getOpacity\tCCMenuItemSprite:getOpacity()", "contents": "CCMenuItemSprite:getOpacity()"},
{ "trigger": ":getOpacity\tCCMenuItemSprite:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMenuItemSprite_getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "CCMenuItemSprite:getDisabledImage()"},
{ "trigger": ":getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "getDisabledImage()"},
{ "trigger": "ccBezierConfig\t", "contents": "ccBezierConfig"},
{ "trigger": "ccBezierConfig_call\tccBezierConfig:call()", "contents": "ccBezierConfig:call()"},
{ "trigger": ":call\tccBezierConfig:call()", "contents": "call()"},
{ "trigger": "ccBezierConfig_new\tccBezierConfig:new()", "contents": "ccBezierConfig:new()"},
{ "trigger": ":new\tccBezierConfig:new()", "contents": "new()"},
{ "trigger": "ccBezierConfig_new_local\tccBezierConfig:new_local()", "contents": "ccBezierConfig:new_local()"},
{ "trigger": ":new_local\tccBezierConfig:new_local()", "contents": "new_local()"},
{ "trigger": "CCUserDefault\t", "contents": "CCUserDefault"},
{ "trigger": "CCUserDefault_purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "CCUserDefault:purgeSharedUserDefault()"},
{ "trigger": ":purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "purgeSharedUserDefault()"},
{ "trigger": "CCUserDefault_getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "CCUserDefault:getFloatForKey(_str)"},
{ "trigger": ":getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "getFloatForKey(_str)"},
{ "trigger": "CCUserDefault_getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "CCUserDefault:getDoubleForKey(_str)"},
{ "trigger": ":getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "getDoubleForKey(_str)"},
{ "trigger": "CCUserDefault_setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "CCUserDefault:setDoubleForKey(_str,_num)"},
{ "trigger": ":setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "setDoubleForKey(_str,_num)"},
{ "trigger": "CCUserDefault_getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "CCUserDefault:getStringForKey(_str)"},
{ "trigger": ":getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "getStringForKey(_str)"},
{ "trigger": "CCUserDefault_setStringForKey\tCCUserDefault:setStringForKey(_str,_cpp)", "contents": "CCUserDefault:setStringForKey(_str,_cpp)"},
{ "trigger": ":setStringForKey\tCCUserDefault:setStringForKey(_str,_cpp)", "contents": "setStringForKey(_str,_cpp)"},
{ "trigger": "CCUserDefault_getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "CCUserDefault:getBoolForKey(_str)"},
{ "trigger": ":getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "getBoolForKey(_str)"},
{ "trigger": "CCUserDefault_flush\tCCUserDefault:flush()", "contents": "CCUserDefault:flush()"},
{ "trigger": ":flush\tCCUserDefault:flush()", "contents": "flush()"},
{ "trigger": "CCUserDefault_getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "CCUserDefault:getIntegerForKey(_str)"},
{ "trigger": ":getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "getIntegerForKey(_str)"},
{ "trigger": "CCUserDefault_setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "CCUserDefault:setFloatForKey(_str,_num)"},
{ "trigger": ":setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "setFloatForKey(_str,_num)"},
{ "trigger": "CCUserDefault_setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "CCUserDefault:setIntegerForKey(_str,_num)"},
{ "trigger": ":setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "setIntegerForKey(_str,_num)"},
{ "trigger": "CCUserDefault_sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "CCUserDefault:sharedUserDefault()"},
{ "trigger": ":sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "sharedUserDefault()"},
{ "trigger": "CCUserDefault_setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "CCUserDefault:setBoolForKey(_str,_boo)"},
{ "trigger": ":setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "setBoolForKey(_str,_boo)"},
{ "trigger": "CCUserDefault_getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "CCUserDefault:getXMLFilePath()"},
{ "trigger": ":getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "getXMLFilePath()"},
{ "trigger": "CCLayer\t", "contents": "CCLayer"},
{ "trigger": "CCLayer_unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "CCLayer:unregisterScriptAccelerateHandler()"},
{ "trigger": ":unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "unregisterScriptAccelerateHandler()"},
{ "trigger": "CCLayer_registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "CCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": ":registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": "CCLayer_setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "CCLayer:setTouchEnabled(_boo)"},
{ "trigger": ":setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "setTouchEnabled(_boo)"},
{ "trigger": "CCLayer_create\tCCLayer:create()", "contents": "CCLayer:create()"},
{ "trigger": ":create\tCCLayer:create()", "contents": "create()"},
{ "trigger": "CCLayer_unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "CCLayer:unregisterScriptTouchHandler()"},
{ "trigger": ":unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "unregisterScriptTouchHandler()"},
{ "trigger": "CCLayer_isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "CCLayer:isKeypadEnabled()"},
{ "trigger": ":isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "isKeypadEnabled()"},
{ "trigger": "CCLayer_getTouchPriority\tCCLayer:getTouchPriority()", "contents": "CCLayer:getTouchPriority()"},
{ "trigger": ":getTouchPriority\tCCLayer:getTouchPriority()", "contents": "getTouchPriority()"},
{ "trigger": "CCLayer_setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "CCLayer:setTouchPriority(_num)"},
{ "trigger": ":setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "setTouchPriority(_num)"},
{ "trigger": "CCLayer_setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "CCLayer:setAccelerometerEnabled(_boo)"},
{ "trigger": ":setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "setAccelerometerEnabled(_boo)"},
{ "trigger": "CCLayer_setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "CCLayer:setKeypadEnabled(_boo)"},
{ "trigger": ":setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "setKeypadEnabled(_boo)"},
{ "trigger": "CCLayer_registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "CCLayer:registerScriptAccelerateHandler(_listener)"},
{ "trigger": ":registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "registerScriptAccelerateHandler(_listener)"},
{ "trigger": "CCLayer_isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "CCLayer:isAccelerometerEnabled()"},
{ "trigger": ":isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "isAccelerometerEnabled()"},
{ "trigger": "CCLayer_isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "CCLayer:isTouchEnabled()"},
{ "trigger": ":isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "isTouchEnabled()"},
{ "trigger": "CCLayer_registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "CCLayer:registerScriptKeypadHandler(_listener)"},
{ "trigger": ":registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "registerScriptKeypadHandler(_listener)"},
{ "trigger": "CCLayer_unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "CCLayer:unregisterScriptKeypadHandler()"},
{ "trigger": ":unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "unregisterScriptKeypadHandler()"},
{ "trigger": "CCTransitionFadeDown\t", "contents": "CCTransitionFadeDown"},
{ "trigger": "CCTransitionFadeDown_create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "CCTransitionFadeDown:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLiquid\t", "contents": "CCLiquid"},
{ "trigger": "CCLiquid_getAmplitude\tCCLiquid:getAmplitude()", "contents": "CCLiquid:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCLiquid:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCLiquid_create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "CCLiquid:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCLiquid_getAmplitudeRate\tCCLiquid:getAmplitudeRate()", "contents": "CCLiquid:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCLiquid:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCLiquid_setAmplitudeRate\tCCLiquid:setAmplitudeRate(_num)", "contents": "CCLiquid:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCLiquid:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCLiquid_setAmplitude\tCCLiquid:setAmplitude(_num)", "contents": "CCLiquid:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCLiquid:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCShatteredTiles3D\t", "contents": "CCShatteredTiles3D"},
{ "trigger": "CCShatteredTiles3D_create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShatteredTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCShapeNode\t", "contents": "CCShapeNode"},
{ "trigger": "CCShapeNode_setColor\tCCShapeNode:setColor(_const_ccColor4F)", "contents": "CCShapeNode:setColor(_const_ccColor4F)"},
{ "trigger": ":setColor\tCCShapeNode:setColor(_const_ccColor4F)", "contents": "setColor(_const_ccColor4F)"},
{ "trigger": "CCShapeNode_setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "CCShapeNode:setLineStippleEnabled(_boo)"},
{ "trigger": ":setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "setLineStippleEnabled(_boo)"},
{ "trigger": "CCShapeNode_isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "CCShapeNode:isLineStippleEnabled()"},
{ "trigger": ":isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "isLineStippleEnabled()"},
{ "trigger": "CCShapeNode_getLineWidth\tCCShapeNode:getLineWidth()", "contents": "CCShapeNode:getLineWidth()"},
{ "trigger": ":getLineWidth\tCCShapeNode:getLineWidth()", "contents": "getLineWidth()"},
{ "trigger": "CCShapeNode_getColor\tCCShapeNode:getColor()", "contents": "CCShapeNode:getColor()"},
{ "trigger": ":getColor\tCCShapeNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCShapeNode_getLineStipple\tCCShapeNode:getLineStipple()", "contents": "CCShapeNode:getLineStipple()"},
{ "trigger": ":getLineStipple\tCCShapeNode:getLineStipple()", "contents": "getLineStipple()"},
{ "trigger": "CCShapeNode_setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "CCShapeNode:setLineStipple(_num)"},
{ "trigger": ":setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "setLineStipple(_num)"},
{ "trigger": "CCShapeNode_setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "CCShapeNode:setLineWidth(_num)"},
{ "trigger": ":setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "setLineWidth(_num)"},
{ "trigger": "CCReverseTime\t", "contents": "CCReverseTime"},
{ "trigger": "CCReverseTime_create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "CCReverseTime:create(_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "create(_CCFiniteTimeAction)"},
{ "trigger": "CCAction\t", "contents": "CCAction"},
{ "trigger": "CCAction_isDone\tCCAction:isDone()", "contents": "CCAction:isDone()"},
{ "trigger": ":isDone\tCCAction:isDone()", "contents": "isDone()"},
{ "trigger": "CCAction_setTag\tCCAction:setTag(_num)", "contents": "CCAction:setTag(_num)"},
{ "trigger": ":setTag\tCCAction:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCAction_getTag\tCCAction:getTag()", "contents": "CCAction:getTag()"},
{ "trigger": ":getTag\tCCAction:getTag()", "contents": "getTag()"},
{ "trigger": "CCAction_getTarget\tCCAction:getTarget()", "contents": "CCAction:getTarget()"},
{ "trigger": ":getTarget\tCCAction:getTarget()", "contents": "getTarget()"},
{ "trigger": "CCAction_getOriginalTarget\tCCAction:getOriginalTarget()", "contents": "CCAction:getOriginalTarget()"},
{ "trigger": ":getOriginalTarget\tCCAction:getOriginalTarget()", "contents": "getOriginalTarget()"},
{ "trigger": "CCLabelBMFont\t", "contents": "CCLabelBMFont"},
{ "trigger": "CCLabelBMFont_getFntFile\tCCLabelBMFont:getFntFile()", "contents": "CCLabelBMFont:getFntFile()"},
{ "trigger": ":getFntFile\tCCLabelBMFont:getFntFile()", "contents": "getFntFile()"},
{ "trigger": "CCLabelBMFont_getColor\tCCLabelBMFont:getColor()", "contents": "CCLabelBMFont:getColor()"},
{ "trigger": ":getColor\tCCLabelBMFont:getColor()", "contents": "getColor()"},
{ "trigger": "CCLabelBMFont_setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "CCLabelBMFont:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLabelBMFont_setScaleY\tCCLabelBMFont:setScaleY(_num)", "contents": "CCLabelBMFont:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCLabelBMFont:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCLabelBMFont_setString\tCCLabelBMFont:setString(_str,_boo)", "contents": "CCLabelBMFont:setString(_str,_boo)"},
{ "trigger": ":setString\tCCLabelBMFont:setString(_str,_boo)", "contents": "setString(_str,_boo)"},
{ "trigger": "CCLabelBMFont_setScaleX\tCCLabelBMFont:setScaleX(_num)", "contents": "CCLabelBMFont:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCLabelBMFont:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCLabelBMFont_setScale\tCCLabelBMFont:setScale(_num)", "contents": "CCLabelBMFont:setScale(_num)"},
{ "trigger": ":setScale\tCCLabelBMFont:setScale(_num)", "contents": "setScale(_num)"},
{ "trigger": "CCLabelBMFont_setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "CCLabelBMFont:setFntFile(_str)"},
{ "trigger": ":setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "setFntFile(_str)"},
{ "trigger": "CCLabelBMFont_isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "CCLabelBMFont:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLabelBMFont_purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "CCLabelBMFont:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCLabelBMFont_create\tCCLabelBMFont:create()", "contents": "CCLabelBMFont:create()"},
{ "trigger": ":create\tCCLabelBMFont:create()", "contents": "create()"},
{ "trigger": "CCLabelBMFont_setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "CCLabelBMFont:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLabelBMFont_setAnchorPoint\tCCLabelBMFont:setAnchorPoint(_const_CCPoint)", "contents": "CCLabelBMFont:setAnchorPoint(_const_CCPoint)"},
{ "trigger": ":setAnchorPoint\tCCLabelBMFont:setAnchorPoint(_const_CCPoint)", "contents": "setAnchorPoint(_const_CCPoint)"},
{ "trigger": "CCLabelBMFont_setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "CCLabelBMFont:setLineBreakWithoutSpace(_boo)"},
{ "trigger": ":setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "setLineBreakWithoutSpace(_boo)"},
{ "trigger": "CCLabelBMFont_setColor\tCCLabelBMFont:setColor(_const_ccColor3B)", "contents": "CCLabelBMFont:setColor(_const_ccColor3B)"},
{ "trigger": ":setColor\tCCLabelBMFont:setColor(_const_ccColor3B)", "contents": "setColor(_const_ccColor3B)"},
{ "trigger": "CCLabelBMFont_updateString\tCCLabelBMFont:updateString(_boo)", "contents": "CCLabelBMFont:updateString(_boo)"},
{ "trigger": ":updateString\tCCLabelBMFont:updateString(_boo)", "contents": "updateString(_boo)"},
{ "trigger": "CCLabelBMFont_getOpacity\tCCLabelBMFont:getOpacity()", "contents": "CCLabelBMFont:getOpacity()"},
{ "trigger": ":getOpacity\tCCLabelBMFont:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLabelBMFont_setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "CCLabelBMFont:setAlignment(_num)"},
{ "trigger": ":setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "setAlignment(_num)"},
{ "trigger": "CCLabelBMFont_setCString\tCCLabelBMFont:setCString(_str)", "contents": "CCLabelBMFont:setCString(_str)"},
{ "trigger": ":setCString\tCCLabelBMFont:setCString(_str)", "contents": "setCString(_str)"},
{ "trigger": "CCLabelBMFont_getString\tCCLabelBMFont:getString()", "contents": "CCLabelBMFont:getString()"},
{ "trigger": ":getString\tCCLabelBMFont:getString()", "contents": "getString()"},
{ "trigger": "CCLabelBMFont_setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "CCLabelBMFont:setWidth(_num)"},
{ "trigger": ":setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "setWidth(_num)"},
{ "trigger": "CCBezierBy\t", "contents": "CCBezierBy"},
{ "trigger": "CCBezierBy_create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "CCBezierBy:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCTMXLayerInfo\t", "contents": "CCTMXLayerInfo"},
{ "trigger": "CCTMXLayerInfo_setProperties\tCCTMXLayerInfo:setProperties(_CCDictionary)", "contents": "CCTMXLayerInfo:setProperties(_CCDictionary)"},
{ "trigger": ":setProperties\tCCTMXLayerInfo:setProperties(_CCDictionary)", "contents": "setProperties(_CCDictionary)"},
{ "trigger": "CCTMXLayerInfo_getProperties\tCCTMXLayerInfo:getProperties()", "contents": "CCTMXLayerInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayerInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCClippingRegionNode\t", "contents": "CCClippingRegionNode"},
{ "trigger": "CCClippingRegionNode_getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "CCClippingRegionNode:getClippingRegion()"},
{ "trigger": ":getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "getClippingRegion()"},
{ "trigger": "CCClippingRegionNode_setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "CCClippingRegionNode:setClippingEnabled(_boo)"},
{ "trigger": ":setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "setClippingEnabled(_boo)"},
{ "trigger": "CCClippingRegionNode_setClippingRegion\tCCClippingRegionNode:setClippingRegion(_const_CCRect)", "contents": "CCClippingRegionNode:setClippingRegion(_const_CCRect)"},
{ "trigger": ":setClippingRegion\tCCClippingRegionNode:setClippingRegion(_const_CCRect)", "contents": "setClippingRegion(_const_CCRect)"},
{ "trigger": "CCClippingRegionNode_isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "CCClippingRegionNode:isClippingEnabled()"},
{ "trigger": ":isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "isClippingEnabled()"},
{ "trigger": "CCClippingRegionNode_create\tCCClippingRegionNode:create()", "contents": "CCClippingRegionNode:create()"},
{ "trigger": ":create\tCCClippingRegionNode:create()", "contents": "create()"},
{ "trigger": "CCWaves3D\t", "contents": "CCWaves3D"},
{ "trigger": "CCWaves3D_getAmplitude\tCCWaves3D:getAmplitude()", "contents": "CCWaves3D:getAmplitude()"},
{ "trigger": ":getAmplitude\tCCWaves3D:getAmplitude()", "contents": "getAmplitude()"},
{ "trigger": "CCWaves3D_create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "CCWaves3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCWaves3D_getAmplitudeRate\tCCWaves3D:getAmplitudeRate()", "contents": "CCWaves3D:getAmplitudeRate()"},
{ "trigger": ":getAmplitudeRate\tCCWaves3D:getAmplitudeRate()", "contents": "getAmplitudeRate()"},
{ "trigger": "CCWaves3D_setAmplitudeRate\tCCWaves3D:setAmplitudeRate(_num)", "contents": "CCWaves3D:setAmplitudeRate(_num)"},
{ "trigger": ":setAmplitudeRate\tCCWaves3D:setAmplitudeRate(_num)", "contents": "setAmplitudeRate(_num)"},
{ "trigger": "CCWaves3D_setAmplitude\tCCWaves3D:setAmplitude(_num)", "contents": "CCWaves3D:setAmplitude(_num)"},
{ "trigger": ":setAmplitude\tCCWaves3D:setAmplitude(_num)", "contents": "setAmplitude(_num)"},
{ "trigger": "CCMotionStreak\t", "contents": "CCMotionStreak"},
{ "trigger": "CCMotionStreak_getColor\tCCMotionStreak:getColor()", "contents": "CCMotionStreak:getColor()"},
{ "trigger": ":getColor\tCCMotionStreak:getColor()", "contents": "getColor()"},
{ "trigger": "CCMotionStreak_getBlendFunc\tCCMotionStreak:getBlendFunc()", "contents": "CCMotionStreak:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCMotionStreak:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCMotionStreak_setOpacity\tCCMotionStreak:setOpacity(_num)", "contents": "CCMotionStreak:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCMotionStreak:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCMotionStreak_setPosition\tCCMotionStreak:setPosition(_CCPoint)", "contents": "CCMotionStreak:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCMotionStreak:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCMotionStreak_isOpacityModifyRGB\tCCMotionStreak:isOpacityModifyRGB()", "contents": "CCMotionStreak:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMotionStreak:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMotionStreak_isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "CCMotionStreak:isStartingPositionInitialized()"},
{ "trigger": ":isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "isStartingPositionInitialized()"},
{ "trigger": "CCMotionStreak_create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "CCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": ":create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": "CCMotionStreak_setOpacityModifyRGB\tCCMotionStreak:setOpacityModifyRGB(_boo)", "contents": "CCMotionStreak:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMotionStreak:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMotionStreak_setColor\tCCMotionStreak:setColor(_const_ccColor3B)", "contents": "CCMotionStreak:setColor(_const_ccColor3B)"},
{ "trigger": ":setColor\tCCMotionStreak:setColor(_const_ccColor3B)", "contents": "setColor(_const_ccColor3B)"},
{ "trigger": "CCMotionStreak_setTexture\tCCMotionStreak:setTexture(_CCTexture2D)", "contents": "CCMotionStreak:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCMotionStreak:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCMotionStreak_setBlendFunc\tCCMotionStreak:setBlendFunc(_ccBlendFunc)", "contents": "CCMotionStreak:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCMotionStreak:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCMotionStreak_setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "CCMotionStreak:setStartingPositionInitialized(_boo)"},
{ "trigger": ":setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "setStartingPositionInitialized(_boo)"},
{ "trigger": "CCMotionStreak_reset\tCCMotionStreak:reset()", "contents": "CCMotionStreak:reset()"},
{ "trigger": ":reset\tCCMotionStreak:reset()", "contents": "reset()"},
{ "trigger": "CCMotionStreak_getTexture\tCCMotionStreak:getTexture()", "contents": "CCMotionStreak:getTexture()"},
{ "trigger": ":getTexture\tCCMotionStreak:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCMotionStreak_getOpacity\tCCMotionStreak:getOpacity()", "contents": "CCMotionStreak:getOpacity()"},
{ "trigger": ":getOpacity\tCCMotionStreak:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCMotionStreak_isFastMode\tCCMotionStreak:isFastMode()", "contents": "CCMotionStreak:isFastMode()"},
{ "trigger": ":isFastMode\tCCMotionStreak:isFastMode()", "contents": "isFastMode()"},
{ "trigger": "CCMotionStreak_tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "CCMotionStreak:tintWithColor(_ccColor3B)"},
{ "trigger": ":tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "tintWithColor(_ccColor3B)"},
{ "trigger": "CCMotionStreak_setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "CCMotionStreak:setFastMode(_boo)"},
{ "trigger": ":setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "setFastMode(_boo)"},
{ "trigger": "CCBezierTo\t", "contents": "CCBezierTo"},
{ "trigger": "CCBezierTo_create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "CCBezierTo:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCNative\t", "contents": "CCNative"},
{ "trigger": "CCNative_getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "CCNative:getInputText(_str,_str,_str)"},
{ "trigger": ":getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "getInputText(_str,_str,_str)"},
{ "trigger": "CCNative_createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "CCNative:createAlert(_str,_str,_str)"},
{ "trigger": ":createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "createAlert(_str,_str,_str)"},
{ "trigger": "CCNative_showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "CCNative:showActivityIndicator()"},
{ "trigger": ":showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "showActivityIndicator()"},
{ "trigger": "CCNative_getDeviceName\tCCNative:getDeviceName()", "contents": "CCNative:getDeviceName()"},
{ "trigger": ":getDeviceName\tCCNative:getDeviceName()", "contents": "getDeviceName()"},
{ "trigger": "CCNative_hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "CCNative:hideActivityIndicator()"},
{ "trigger": ":hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "hideActivityIndicator()"},
{ "trigger": "CCNative_vibrate\tCCNative:vibrate()", "contents": "CCNative:vibrate()"},
{ "trigger": ":vibrate\tCCNative:vibrate()", "contents": "vibrate()"},
{ "trigger": "CCNative_cancelAlert\tCCNative:cancelAlert()", "contents": "CCNative:cancelAlert()"},
{ "trigger": ":cancelAlert\tCCNative:cancelAlert()", "contents": "cancelAlert()"},
{ "trigger": "CCNative_showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "CCNative:showAlertLua(_listener)"},
{ "trigger": ":showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "showAlertLua(_listener)"},
{ "trigger": "CCNative_addAlertButton\tCCNative:addAlertButton(_str)", "contents": "CCNative:addAlertButton(_str)"},
{ "trigger": ":addAlertButton\tCCNative:addAlertButton(_str)", "contents": "addAlertButton(_str)"},
{ "trigger": "CCNative_openURL\tCCNative:openURL(_str)", "contents": "CCNative:openURL(_str)"},
{ "trigger": ":openURL\tCCNative:openURL(_str)", "contents": "openURL(_str)"},
{ "trigger": "CCNative_getOpenUDID\tCCNative:getOpenUDID()", "contents": "CCNative:getOpenUDID()"},
{ "trigger": ":getOpenUDID\tCCNative:getOpenUDID()", "contents": "getOpenUDID()"},
{ "trigger": "CCFadeIn\t", "contents": "CCFadeIn"},
{ "trigger": "CCFadeIn_create\tCCFadeIn:create(_num)", "contents": "CCFadeIn:create(_num)"},
{ "trigger": ":create\tCCFadeIn:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCFlipY3D\t", "contents": "CCFlipY3D"},
{ "trigger": "CCFlipY3D_create\tCCFlipY3D:create(_num)", "contents": "CCFlipY3D:create(_num)"},
{ "trigger": ":create\tCCFlipY3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTMXTiledMap\t", "contents": "CCTMXTiledMap"},
{ "trigger": "CCTMXTiledMap_propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "CCTMXTiledMap:propertiesForGID(_num)"},
{ "trigger": ":propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "propertiesForGID(_num)"},
{ "trigger": "CCTMXTiledMap_setTileSize\tCCTMXTiledMap:setTileSize(_CCSize)", "contents": "CCTMXTiledMap:setTileSize(_CCSize)"},
{ "trigger": ":setTileSize\tCCTMXTiledMap:setTileSize(_CCSize)", "contents": "setTileSize(_CCSize)"},
{ "trigger": "CCTMXTiledMap_getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "CCTMXTiledMap:getMapOrientation()"},
{ "trigger": ":getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "getMapOrientation()"},
{ "trigger": "CCTMXTiledMap_getProperties\tCCTMXTiledMap:getProperties()", "contents": "CCTMXTiledMap:getProperties()"},
{ "trigger": ":getProperties\tCCTMXTiledMap:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXTiledMap_propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "CCTMXTiledMap:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXTiledMap_create\tCCTMXTiledMap:create(_str)", "contents": "CCTMXTiledMap:create(_str)"},
{ "trigger": ":create\tCCTMXTiledMap:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCTMXTiledMap_getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "CCTMXTiledMap:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXTiledMap_setMapOrientation\tCCTMXTiledMap:setMapOrientation(_num)", "contents": "CCTMXTiledMap:setMapOrientation(_num)"},
{ "trigger": ":setMapOrientation\tCCTMXTiledMap:setMapOrientation(_num)", "contents": "setMapOrientation(_num)"},
{ "trigger": "CCTMXTiledMap_setProperties\tCCTMXTiledMap:setProperties(_CCDictionary)", "contents": "CCTMXTiledMap:setProperties(_CCDictionary)"},
{ "trigger": ":setProperties\tCCTMXTiledMap:setProperties(_CCDictionary)", "contents": "setProperties(_CCDictionary)"},
{ "trigger": "CCTMXTiledMap_layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "CCTMXTiledMap:layerNamed(_str)"},
{ "trigger": ":layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "layerNamed(_str)"},
{ "trigger": "CCTMXTiledMap_objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "CCTMXTiledMap:objectGroupNamed(_str)"},
{ "trigger": ":objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "objectGroupNamed(_str)"},
{ "trigger": "CCTMXTiledMap_createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "CCTMXTiledMap:createWithXML(_str,_str)"},
{ "trigger": ":createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "createWithXML(_str,_str)"},
{ "trigger": "CCTMXTiledMap_getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "CCTMXTiledMap:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXTiledMap_setObjectGroups\tCCTMXTiledMap:setObjectGroups(_CCArray)", "contents": "CCTMXTiledMap:setObjectGroups(_CCArray)"},
{ "trigger": ":setObjectGroups\tCCTMXTiledMap:setObjectGroups(_CCArray)", "contents": "setObjectGroups(_CCArray)"},
{ "trigger": "CCTMXTiledMap_setMapSize\tCCTMXTiledMap:setMapSize(_CCSize)", "contents": "CCTMXTiledMap:setMapSize(_CCSize)"},
{ "trigger": ":setMapSize\tCCTMXTiledMap:setMapSize(_CCSize)", "contents": "setMapSize(_CCSize)"},
{ "trigger": "CCTMXTiledMap_getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "CCTMXTiledMap:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCEaseIn\t", "contents": "CCEaseIn"},
{ "trigger": "CCEaseIn_create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "CCEaseIn:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCAccelDeccelAmplitude\t", "contents": "CCAccelDeccelAmplitude"},
{ "trigger": "CCAccelDeccelAmplitude_setRate\tCCAccelDeccelAmplitude:setRate(_num)", "contents": "CCAccelDeccelAmplitude:setRate(_num)"},
{ "trigger": ":setRate\tCCAccelDeccelAmplitude:setRate(_num)", "contents": "setRate(_num)"},
{ "trigger": "CCAccelDeccelAmplitude_getRate\tCCAccelDeccelAmplitude:getRate()", "contents": "CCAccelDeccelAmplitude:getRate()"},
{ "trigger": ":getRate\tCCAccelDeccelAmplitude:getRate()", "contents": "getRate()"},
{ "trigger": "CCAccelDeccelAmplitude_create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCTextFieldTTF\t", "contents": "CCTextFieldTTF"},
{ "trigger": "CCTextFieldTTF_detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "CCTextFieldTTF:detachWithIME()"},
{ "trigger": ":detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "detachWithIME()"},
{ "trigger": "CCTextFieldTTF_setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "CCTextFieldTTF:setColorSpaceHolder(_ccColor3B)"},
{ "trigger": ":setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "setColorSpaceHolder(_ccColor3B)"},
{ "trigger": "CCTextFieldTTF_setString\tCCTextFieldTTF:setString(_str)", "contents": "CCTextFieldTTF:setString(_str)"},
{ "trigger": ":setString\tCCTextFieldTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCTextFieldTTF_getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "CCTextFieldTTF:getColorSpaceHolder()"},
{ "trigger": ":getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "getColorSpaceHolder()"},
{ "trigger": "CCTextFieldTTF_getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "CCTextFieldTTF:getCharCount()"},
{ "trigger": ":getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "getCharCount()"},
{ "trigger": "CCTextFieldTTF_textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "CCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": ":textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": "CCTextFieldTTF_setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "CCTextFieldTTF:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCTextFieldTTF_attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "CCTextFieldTTF:attachWithIME()"},
{ "trigger": ":attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "attachWithIME()"},
{ "trigger": "CCTextFieldTTF_getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "CCTextFieldTTF:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCTextFieldTTF_getString\tCCTextFieldTTF:getString()", "contents": "CCTextFieldTTF:getString()"},
{ "trigger": ":getString\tCCTextFieldTTF:getString()", "contents": "getString()"},
{ "trigger": "CCControlStateNormal\tCCControlStateNormal", "contents": "CCControlStateNormal"},
{ "trigger": "CCControlStateHighlighted\tCCControlStateHighlighted", "contents": "CCControlStateHighlighted"},
{ "trigger": "CCControlStateDisabled\tCCControlStateDisabled", "contents": "CCControlStateDisabled"},
{ "trigger": "CCControlStateSelected\tCCControlStateSelected", "contents": "CCControlStateSelected"},
{ "trigger": "kKeyboardReturnTypeDefault\tkKeyboardReturnTypeDefault", "contents": "kKeyboardReturnTypeDefault"},
{ "trigger": "kKeyboardReturnTypeDone\tkKeyboardReturnTypeDone", "contents": "kKeyboardReturnTypeDone"},
{ "trigger": "kKeyboardReturnTypeSend\tkKeyboardReturnTypeSend", "contents": "kKeyboardReturnTypeSend"},
{ "trigger": "kKeyboardReturnTypeSearch\tkKeyboardReturnTypeSearch", "contents": "kKeyboardReturnTypeSearch"},
{ "trigger": "kKeyboardReturnTypeGo\tkKeyboardReturnTypeGo", "contents": "kKeyboardReturnTypeGo"},
{ "trigger": "kEditBoxInputModeAny\tkEditBoxInputModeAny", "contents": "kEditBoxInputModeAny"},
{ "trigger": "kEditBoxInputModeEmailAddr\tkEditBoxInputModeEmailAddr", "contents": "kEditBoxInputModeEmailAddr"},
{ "trigger": "kEditBoxInputModeNumeric\tkEditBoxInputModeNumeric", "contents": "kEditBoxInputModeNumeric"},
{ "trigger": "kEditBoxInputModePhoneNumber\tkEditBoxInputModePhoneNumber", "contents": "kEditBoxInputModePhoneNumber"},
{ "trigger": "kEditBoxInputModeUrl\tkEditBoxInputModeUrl", "contents": "kEditBoxInputModeUrl"},
{ "trigger": "kEditBoxInputModeDecimal\tkEditBoxInputModeDecimal", "contents": "kEditBoxInputModeDecimal"},
{ "trigger": "kEditBoxInputModeSingleLine\tkEditBoxInputModeSingleLine", "contents": "kEditBoxInputModeSingleLine"},
{ "trigger": "kEditBoxInputFlagPassword\tkEditBoxInputFlagPassword", "contents": "kEditBoxInputFlagPassword"},
{ "trigger": "kEditBoxInputFlagSensitive\tkEditBoxInputFlagSensitive", "contents": "kEditBoxInputFlagSensitive"},
{ "trigger": "kEditBoxInputFlagInitialCapsWord\tkEditBoxInputFlagInitialCapsWord", "contents": "kEditBoxInputFlagInitialCapsWord"},
{ "trigger": "kEditBoxInputFlagInitialCapsSentence\tkEditBoxInputFlagInitialCapsSentence", "contents": "kEditBoxInputFlagInitialCapsSentence"},
{ "trigger": "kEditBoxInputFlagInitialCapsAllCharacters\tkEditBoxInputFlagInitialCapsAllCharacters", "contents": "kEditBoxInputFlagInitialCapsAllCharacters"},
{ "trigger": "kCCHTTPRequestMethodGET\tkCCHTTPRequestMethodGET", "contents": "kCCHTTPRequestMethodGET"},
{ "trigger": "kCCHTTPRequestMethodPOST\tkCCHTTPRequestMethodPOST", "contents": "kCCHTTPRequestMethodPOST"},
{ "trigger": "kCCHTTPRequestAcceptEncodingIdentity\tkCCHTTPRequestAcceptEncodingIdentity", "contents": "kCCHTTPRequestAcceptEncodingIdentity"},
{ "trigger": "kCCHTTPRequestAcceptEncodingGzip\tkCCHTTPRequestAcceptEncodingGzip", "contents": "kCCHTTPRequestAcceptEncodingGzip"},
{ "trigger": "kCCHTTPRequestAcceptEncodingDeflate\tkCCHTTPRequestAcceptEncodingDeflate", "contents": "kCCHTTPRequestAcceptEncodingDeflate"},
{ "trigger": "kCCHTTPRequestStateIdle\tkCCHTTPRequestStateIdle", "contents": "kCCHTTPRequestStateIdle"},
{ "trigger": "kCCHTTPRequestStateInProgress\tkCCHTTPRequestStateInProgress", "contents": "kCCHTTPRequestStateInProgress"},
{ "trigger": "kCCHTTPRequestStateCompleted\tkCCHTTPRequestStateCompleted", "contents": "kCCHTTPRequestStateCompleted"},
{ "trigger": "kCCHTTPRequestStateCancelled\tkCCHTTPRequestStateCancelled", "contents": "kCCHTTPRequestStateCancelled"},
{ "trigger": "kCCHTTPRequestStateCleared\tkCCHTTPRequestStateCleared", "contents": "kCCHTTPRequestStateCleared"},
{ "trigger": "kCCNetworkStatusNotReachable\tkCCNetworkStatusNotReachable", "contents": "kCCNetworkStatusNotReachable"},
{ "trigger": "kCCNetworkStatusReachableViaWiFi\tkCCNetworkStatusReachableViaWiFi", "contents": "kCCNetworkStatusReachableViaWiFi"},
{ "trigger": "kCCNetworkStatusReachableViaWWAN\tkCCNetworkStatusReachableViaWWAN", "contents": "kCCNetworkStatusReachableViaWWAN"},
{ "trigger": "kCCVerticalTextAlignmentTop\tkCCVerticalTextAlignmentTop", "contents": "kCCVerticalTextAlignmentTop"},
{ "trigger": "kCCVerticalTextAlignmentCenter\tkCCVerticalTextAlignmentCenter", "contents": "kCCVerticalTextAlignmentCenter"},
{ "trigger": "kCCVerticalTextAlignmentBottom\tkCCVerticalTextAlignmentBottom", "contents": "kCCVerticalTextAlignmentBottom"},
{ "trigger": "kCCTextAlignmentLeft\tkCCTextAlignmentLeft", "contents": "kCCTextAlignmentLeft"},
{ "trigger": "kCCTextAlignmentCenter\tkCCTextAlignmentCenter", "contents": "kCCTextAlignmentCenter"},
{ "trigger": "kCCTextAlignmentRight\tkCCTextAlignmentRight", "contents": "kCCTextAlignmentRight"},
{ "trigger": "kResolutionExactFit\tkResolutionExactFit", "contents": "kResolutionExactFit"},
{ "trigger": "kResolutionNoBorder\tkResolutionNoBorder", "contents": "kResolutionNoBorder"},
{ "trigger": "kResolutionShowAll\tkResolutionShowAll", "contents": "kResolutionShowAll"},
{ "trigger": "kResolutionUnKnown\tkResolutionUnKnown", "contents": "kResolutionUnKnown"},
{ "trigger": "kLanguageEnglish\tkLanguageEnglish", "contents": "kLanguageEnglish"},
{ "trigger": "kLanguageChinese\tkLanguageChinese", "contents": "kLanguageChinese"},
{ "trigger": "kLanguageFrench\tkLanguageFrench", "contents": "kLanguageFrench"},
{ "trigger": "kLanguageItalian\tkLanguageItalian", "contents": "kLanguageItalian"},
{ "trigger": "kLanguageGerman\tkLanguageGerman", "contents": "kLanguageGerman"},
{ "trigger": "kLanguageSpanish\tkLanguageSpanish", "contents": "kLanguageSpanish"},
{ "trigger": "kLanguageRussian\tkLanguageRussian", "contents": "kLanguageRussian"},
{ "trigger": "kLanguageKorean\tkLanguageKorean", "contents": "kLanguageKorean"},
{ "trigger": "kLanguageJapanese\tkLanguageJapanese", "contents": "kLanguageJapanese"},
{ "trigger": "kLanguageHungarian\tkLanguageHungarian", "contents": "kLanguageHungarian"},
{ "trigger": "kTargetWindows\tkTargetWindows", "contents": "kTargetWindows"},
{ "trigger": "kTargetLinux\tkTargetLinux", "contents": "kTargetLinux"},
{ "trigger": "kTargetMacOS\tkTargetMacOS", "contents": "kTargetMacOS"},
{ "trigger": "kTargetAndroid\tkTargetAndroid", "contents": "kTargetAndroid"},
{ "trigger": "kTargetIphone\tkTargetIphone", "contents": "kTargetIphone"},
{ "trigger": "kTargetIpad\tkTargetIpad", "contents": "kTargetIpad"},
{ "trigger": "kTargetBlackBerry\tkTargetBlackBerry", "contents": "kTargetBlackBerry"},
{ "trigger": "kCCDirectorProjection2D\tkCCDirectorProjection2D", "contents": "kCCDirectorProjection2D"},
{ "trigger": "kCCDirectorProjection3D\tkCCDirectorProjection3D", "contents": "kCCDirectorProjection3D"},
{ "trigger": "kCCDirectorProjectionCustom\tkCCDirectorProjectionCustom", "contents": "kCCDirectorProjectionCustom"},
{ "trigger": "kCCDirectorProjectionDefault\tkCCDirectorProjectionDefault", "contents": "kCCDirectorProjectionDefault"},
{ "trigger": "kCCNodeTagInvalid\tkCCNodeTagInvalid", "contents": "kCCNodeTagInvalid"},
{ "trigger": "kCCNodeOnEnter\tkCCNodeOnEnter", "contents": "kCCNodeOnEnter"},
{ "trigger": "kCCNodeOnExit\tkCCNodeOnExit", "contents": "kCCNodeOnExit"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA8888\tkCCTexture2DPixelFormat_RGBA8888", "contents": "kCCTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB888\tkCCTexture2DPixelFormat_RGB888", "contents": "kCCTexture2DPixelFormat_RGB888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB565\tkCCTexture2DPixelFormat_RGB565", "contents": "kCCTexture2DPixelFormat_RGB565"},
{ "trigger": "kCCTexture2DPixelFormat_A8\tkCCTexture2DPixelFormat_A8", "contents": "kCCTexture2DPixelFormat_A8"},
{ "trigger": "kCCTexture2DPixelFormat_I8\tkCCTexture2DPixelFormat_I8", "contents": "kCCTexture2DPixelFormat_I8"},
{ "trigger": "kCCTexture2DPixelFormat_AI88\tkCCTexture2DPixelFormat_AI88", "contents": "kCCTexture2DPixelFormat_AI88"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA4444\tkCCTexture2DPixelFormat_RGBA4444", "contents": "kCCTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kCCTexture2DPixelFormat_RGB5A1\tkCCTexture2DPixelFormat_RGB5A1", "contents": "kCCTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC4\tkCCTexture2DPixelFormat_PVRTC4", "contents": "kCCTexture2DPixelFormat_PVRTC4"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC2\tkCCTexture2DPixelFormat_PVRTC2", "contents": "kCCTexture2DPixelFormat_PVRTC2"},
{ "trigger": "kCCTexture2DPixelFormat_Default\tkCCTexture2DPixelFormat_Default", "contents": "kCCTexture2DPixelFormat_Default"},
{ "trigger": "kTexture2DPixelFormat_RGBA8888\tkTexture2DPixelFormat_RGBA8888", "contents": "kTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kTexture2DPixelFormat_RGB888\tkTexture2DPixelFormat_RGB888", "contents": "kTexture2DPixelFormat_RGB888"},
{ "trigger": "kTexture2DPixelFormat_RGB565\tkTexture2DPixelFormat_RGB565", "contents": "kTexture2DPixelFormat_RGB565"},
{ "trigger": "kTexture2DPixelFormat_A8\tkTexture2DPixelFormat_A8", "contents": "kTexture2DPixelFormat_A8"},
{ "trigger": "kTexture2DPixelFormat_RGBA4444\tkTexture2DPixelFormat_RGBA4444", "contents": "kTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kTexture2DPixelFormat_RGB5A1\tkTexture2DPixelFormat_RGB5A1", "contents": "kTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kTexture2DPixelFormat_Default\tkTexture2DPixelFormat_Default", "contents": "kTexture2DPixelFormat_Default"},
{ "trigger": "kCCImageFormatJPEG\tkCCImageFormatJPEG", "contents": "kCCImageFormatJPEG"},
{ "trigger": "kCCImageFormatPNG\tkCCImageFormatPNG", "contents": "kCCImageFormatPNG"},
{ "trigger": "kCCTransitionOrientationLeftOver\tkCCTransitionOrientationLeftOver", "contents": "kCCTransitionOrientationLeftOver"},
{ "trigger": "kCCTransitionOrientationRightOver\tkCCTransitionOrientationRightOver", "contents": "kCCTransitionOrientationRightOver"},
{ "trigger": "kCCTransitionOrientationUpOver\tkCCTransitionOrientationUpOver", "contents": "kCCTransitionOrientationUpOver"},
{ "trigger": "kCCTransitionOrientationDownOver\tkCCTransitionOrientationDownOver", "contents": "kCCTransitionOrientationDownOver"},
{ "trigger": "kCCActionTagInvalid\tkCCActionTagInvalid", "contents": "kCCActionTagInvalid"},
{ "trigger": "kCCLabelAutomaticWidth\tkCCLabelAutomaticWidth", "contents": "kCCLabelAutomaticWidth"},
{ "trigger": "kCCParticleDurationInfinity\tkCCParticleDurationInfinity", "contents": "kCCParticleDurationInfinity"},
{ "trigger": "kCCParticleStartSizeEqualToEndSize\tkCCParticleStartSizeEqualToEndSize", "contents": "kCCParticleStartSizeEqualToEndSize"},
{ "trigger": "kCCParticleStartRadiusEqualToEndRadius\tkCCParticleStartRadiusEqualToEndRadius", "contents": "kCCParticleStartRadiusEqualToEndRadius"},
{ "trigger": "kParticleStartSizeEqualToEndSize\tkParticleStartSizeEqualToEndSize", "contents": "kParticleStartSizeEqualToEndSize"},
{ "trigger": "kParticleDurationInfinity\tkParticleDurationInfinity", "contents": "kParticleDurationInfinity"},
{ "trigger": "kCCParticleModeGravity\tkCCParticleModeGravity", "contents": "kCCParticleModeGravity"},
{ "trigger": "kCCParticleModeRadius\tkCCParticleModeRadius", "contents": "kCCParticleModeRadius"},
{ "trigger": "kCCPositionTypeFree\tkCCPositionTypeFree", "contents": "kCCPositionTypeFree"},
{ "trigger": "kCCPositionTypeRelative\tkCCPositionTypeRelative", "contents": "kCCPositionTypeRelative"},
{ "trigger": "kCCPositionTypeGrouped\tkCCPositionTypeGrouped", "contents": "kCCPositionTypeGrouped"},
{ "trigger": "kPositionTypeFree\tkPositionTypeFree", "contents": "kPositionTypeFree"},
{ "trigger": "kPositionTypeGrouped\tkPositionTypeGrouped", "contents": "kPositionTypeGrouped"},
{ "trigger": "kCCProgressTimerTypeRadial\tkCCProgressTimerTypeRadial", "contents": "kCCProgressTimerTypeRadial"},
{ "trigger": "kCCProgressTimerTypeBar\tkCCProgressTimerTypeBar", "contents": "kCCProgressTimerTypeBar"},
{ "trigger": "CCTMXOrientationOrtho\tCCTMXOrientationOrtho", "contents": "CCTMXOrientationOrtho"},
{ "trigger": "CCTMXOrientationHex\tCCTMXOrientationHex", "contents": "CCTMXOrientationHex"},
{ "trigger": "CCTMXOrientationIso\tCCTMXOrientationIso", "contents": "CCTMXOrientationIso"},
{ "trigger": "TMXLayerAttribNone\tTMXLayerAttribNone", "contents": "TMXLayerAttribNone"},
{ "trigger": "TMXLayerAttribBase64\tTMXLayerAttribBase64", "contents": "TMXLayerAttribBase64"},
{ "trigger": "TMXLayerAttribGzip\tTMXLayerAttribGzip", "contents": "TMXLayerAttribGzip"},
{ "trigger": "TMXLayerAttribZlib\tTMXLayerAttribZlib", "contents": "TMXLayerAttribZlib"},
{ "trigger": "TMXPropertyNone\tTMXPropertyNone", "contents": "TMXPropertyNone"},
{ "trigger": "TMXPropertyMap\tTMXPropertyMap", "contents": "TMXPropertyMap"},
{ "trigger": "TMXPropertyLayer\tTMXPropertyLayer", "contents": "TMXPropertyLayer"},
{ "trigger": "TMXPropertyObjectGroup\tTMXPropertyObjectGroup", "contents": "TMXPropertyObjectGroup"},
{ "trigger": "TMXPropertyObject\tTMXPropertyObject", "contents": "TMXPropertyObject"},
{ "trigger": "TMXPropertyTile\tTMXPropertyTile", "contents": "TMXPropertyTile"},
{ "trigger": "kCCTMXTileHorizontalFlag\tkCCTMXTileHorizontalFlag", "contents": "kCCTMXTileHorizontalFlag"},
{ "trigger": "kCCTMXTileVerticalFlag\tkCCTMXTileVerticalFlag", "contents": "kCCTMXTileVerticalFlag"},
{ "trigger": "kCCTMXTileDiagonalFlag\tkCCTMXTileDiagonalFlag", "contents": "kCCTMXTileDiagonalFlag"},
{ "trigger": "kCCFlipedAll\tkCCFlipedAll", "contents": "kCCFlipedAll"},
{ "trigger": "kCCFlippedMask\tkCCFlippedMask", "contents": "kCCFlippedMask"},
{ "trigger": "CCStoreReceiptVerifyModeNone\tCCStoreReceiptVerifyModeNone", "contents": "CCStoreReceiptVerifyModeNone"},
{ "trigger": "CCStoreReceiptVerifyModeDevice\tCCStoreReceiptVerifyModeDevice", "contents": "CCStoreReceiptVerifyModeDevice"},
{ "trigger": "CCStoreReceiptVerifyModeServer\tCCStoreReceiptVerifyModeServer", "contents": "CCStoreReceiptVerifyModeServer"},
{ "trigger": "CCStoreReceiptVerifyStatusUnknownError\tCCStoreReceiptVerifyStatusUnknownError", "contents": "CCStoreReceiptVerifyStatusUnknownError"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidReceipt\tCCStoreReceiptVerifyStatusInvalidReceipt", "contents": "CCStoreReceiptVerifyStatusInvalidReceipt"},
{ "trigger": "CCStoreReceiptVerifyStatusRequestFailed\tCCStoreReceiptVerifyStatusRequestFailed", "contents": "CCStoreReceiptVerifyStatusRequestFailed"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidResult\tCCStoreReceiptVerifyStatusInvalidResult", "contents": "CCStoreReceiptVerifyStatusInvalidResult"},
{ "trigger": "CCStoreReceiptVerifyStatusNone\tCCStoreReceiptVerifyStatusNone", "contents": "CCStoreReceiptVerifyStatusNone"},
{ "trigger": "CCStoreReceiptVerifyStatusOK\tCCStoreReceiptVerifyStatusOK", "contents": "CCStoreReceiptVerifyStatusOK"},


		{ "trigger": "cjson_encode()", "contents":       "cjson.encode()"  },
		{ "trigger": "cjson_decode()", "contents":   "cjson.decode()"             },
		{ "trigger": "cjson_encode_sparse_array()", "contents":  "cjson.encode_sparse_array()"    },
		{ "trigger": "cjson_encode_max_depth()", "contents":  "cjson.encode_max_depth()"       },
		{ "trigger": "cjson_decode_max_depth()", "contents":  "cjson.decode_max_depth()"     },
		{ "trigger": "cjson_encode_number_precision()", "contents":   "cjson.encode_number_precision()"  },
		{ "trigger": "cjson_encode_keep_buffer()", "contents":   "cjson.encode_keep_buffer()"        },
		{ "trigger": "cjson_encode_invalid_numbers()", "contents":"cjson.encode_invalid_numbers()"   },
		{ "trigger": "cjson_decode_invalid_numbers()", "contents":  "cjson.decode_invalid_numbers()" },
		{ "trigger": "cjson_new()", "contents":  "cjson.new()" },
		{ "trigger": "zlib_deflate()", "contents":   "zlib.deflate()"   }  ,
		{ "trigger": "zlib_inflate()", "contents":      "zlib.inflate()" }  ,
		{ "trigger": "zlib_version()", "contents":  "zlib.version()"      }  ,
		{}
	]
}

