{
	"scope": "source.lua - keyword.control.lua - constant.language.lua - string",

	"completions":
		[
		"in", "else", "return", "false", "true", "break", "or", "and",
{ "trigger": "CCRect\t", "contents": "CCRect"},
{ "trigger": "CCRect_setRect\tCCRect:setRect(_num,_num,_num,_num)", "contents": "CCRect:setRect(_num,_num,_num,_num)"},
{ "trigger": ":setRect\tCCRect:setRect(_num,_num,_num,_num)", "contents": "setRect(_num,_num,_num,_num)"},
{ "trigger": "CCRect_call\tCCRect:call()", "contents": "CCRect:call()"},
{ "trigger": ":call\tCCRect:call()", "contents": "call()"},
{ "trigger": "CCRect_getMaxY\tCCRect:getMaxY()", "contents": "CCRect:getMaxY()"},
{ "trigger": ":getMaxY\tCCRect:getMaxY()", "contents": "getMaxY()"},
{ "trigger": "CCRect_getMaxX\tCCRect:getMaxX()", "contents": "CCRect:getMaxX()"},
{ "trigger": ":getMaxX\tCCRect:getMaxX()", "contents": "getMaxX()"},
{ "trigger": "CCRect_equals\tCCRect:equals(_CCRect)", "contents": "CCRect:equals(_CCRect)"},
{ "trigger": ":equals\tCCRect:equals(_CCRect)", "contents": "equals(_CCRect)"},
{ "trigger": "CCRect_getMinX\tCCRect:getMinX()", "contents": "CCRect:getMinX()"},
{ "trigger": ":getMinX\tCCRect:getMinX()", "contents": "getMinX()"},
{ "trigger": "CCRect_getMinY\tCCRect:getMinY()", "contents": "CCRect:getMinY()"},
{ "trigger": ":getMinY\tCCRect:getMinY()", "contents": "getMinY()"},
{ "trigger": "CCRect_intersectsRect\tCCRect:intersectsRect(_CCRect)", "contents": "CCRect:intersectsRect(_CCRect)"},
{ "trigger": ":intersectsRect\tCCRect:intersectsRect(_CCRect)", "contents": "intersectsRect(_CCRect)"},
{ "trigger": "CCRect_getMidY\tCCRect:getMidY()", "contents": "CCRect:getMidY()"},
{ "trigger": ":getMidY\tCCRect:getMidY()", "contents": "getMidY()"},
{ "trigger": "CCRect_getMidX\tCCRect:getMidX()", "contents": "CCRect:getMidX()"},
{ "trigger": ":getMidX\tCCRect:getMidX()", "contents": "getMidX()"},
{ "trigger": "CCRect_new\tCCRect:new()", "contents": "CCRect:new()"},
{ "trigger": ":new\tCCRect:new()", "contents": "new()"},
{ "trigger": "CCRect_new_local\tCCRect:new_local()", "contents": "CCRect:new_local()"},
{ "trigger": ":new_local\tCCRect:new_local()", "contents": "new_local()"},
{ "trigger": "CCRect_containsPoint\tCCRect:containsPoint(_CCPoint)", "contents": "CCRect:containsPoint(_CCPoint)"},
{ "trigger": ":containsPoint\tCCRect:containsPoint(_CCPoint)", "contents": "containsPoint(_CCPoint)"},
{ "trigger": "\t", "contents": ""},
{ "trigger": "ccpUnrotate\tccpUnrotate(_CCPoint,_CCPoint)", "contents": "ccpUnrotate(_CCPoint,_CCPoint)"},
{ "trigger": "ccpNeg\tccpNeg(_CCPoint)", "contents": "ccpNeg(_CCPoint)"},
{ "trigger": "CCPointFromString\tCCPointFromString(_str)", "contents": "CCPointFromString(_str)"},
{ "trigger": "ccp\tccp(_num,_num)", "contents": "ccp(_num,_num)"},
{ "trigger": "ccpIntersectPoint\tccpIntersectPoint(_CCPoint,_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpIntersectPoint(_CCPoint,_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "ccpCompMult\tccpCompMult(_CCPoint,_CCPoint)", "contents": "ccpCompMult(_CCPoint,_CCPoint)"},
{ "trigger": "ccpDistance\tccpDistance(_CCPoint,_CCPoint)", "contents": "ccpDistance(_CCPoint,_CCPoint)"},
{ "trigger": "CCSizeMake\tCCSizeMake(_num,_num)", "contents": "CCSizeMake(_num,_num)"},
{ "trigger": "ccPointSize\tccPointSize(_num)", "contents": "ccPointSize(_num)"},
{ "trigger": "CCLuaLog\tCCLuaLog(_str)", "contents": "CCLuaLog(_str)"},
{ "trigger": "kmGLTranslatef\tkmGLTranslatef(_num,_num,_num)", "contents": "kmGLTranslatef(_num,_num,_num)"},
{ "trigger": "ccc4f\tccc4f(_num,_num,_num,_num)", "contents": "ccc4f(_num,_num,_num,_num)"},
{ "trigger": "CCSizeFromString\tCCSizeFromString(_str)", "contents": "CCSizeFromString(_str)"},
{ "trigger": "ccpMult\tccpMult(_CCPoint,_num)", "contents": "ccpMult(_CCPoint,_num)"},
{ "trigger": "ccDrawQuadBezier\tccDrawQuadBezier(_CCPoint,_CCPoint,_CCPoint,_num)", "contents": "ccDrawQuadBezier(_CCPoint,_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccc3BEqual\tccc3BEqual(_ccColor3B,_ccColor3B)", "contents": "ccc3BEqual(_ccColor3B,_ccColor3B)"},
{ "trigger": "ccpDistanceSQ\tccpDistanceSQ(_CCPoint,_CCPoint)", "contents": "ccpDistanceSQ(_CCPoint,_CCPoint)"},
{ "trigger": "kmGLMatrixMode\tkmGLMatrixMode(_num)", "contents": "kmGLMatrixMode(_num)"},
{ "trigger": "ccDrawPoint\tccDrawPoint(_CCPoint)", "contents": "ccDrawPoint(_CCPoint)"},
{ "trigger": "ccpLineIntersect\tccpLineIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num,_num)", "contents": "ccpLineIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num,_num)"},
{ "trigger": "ccDrawColor4B\tccDrawColor4B(_num,_num,_num,_num)", "contents": "ccDrawColor4B(_num,_num,_num,_num)"},
{ "trigger": "CCPointMake\tCCPointMake(_num,_num)", "contents": "CCPointMake(_num,_num)"},
{ "trigger": "kmGLRotatef\tkmGLRotatef(_num,_num,_num,_num)", "contents": "kmGLRotatef(_num,_num,_num,_num)"},
{ "trigger": "ccpRPerp\tccpRPerp(_CCPoint)", "contents": "ccpRPerp(_CCPoint)"},
{ "trigger": "ccpNormalize\tccpNormalize(_CCPoint)", "contents": "ccpNormalize(_CCPoint)"},
{ "trigger": "kmGLPopMatrix\tkmGLPopMatrix()", "contents": "kmGLPopMatrix()"},
{ "trigger": "ccpSub\tccpSub(_CCPoint,_CCPoint)", "contents": "ccpSub(_CCPoint,_CCPoint)"},
{ "trigger": "ccc4FFromccc3B\tccc4FFromccc3B(_ccColor3B)", "contents": "ccc4FFromccc3B(_ccColor3B)"},
{ "trigger": "ccpForAngle\tccpForAngle(_num)", "contents": "ccpForAngle(_num)"},
{ "trigger": "ccpRotateByAngle\tccpRotateByAngle(_CCPoint,_CCPoint,_num)", "contents": "ccpRotateByAngle(_CCPoint,_CCPoint,_num)"},
{ "trigger": "kmGLLoadIdentity\tkmGLLoadIdentity()", "contents": "kmGLLoadIdentity()"},
{ "trigger": "ccpLengthSQ\tccpLengthSQ(_CCPoint)", "contents": "ccpLengthSQ(_CCPoint)"},
{ "trigger": "ccDrawCubicBezier\tccDrawCubicBezier(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num)", "contents": "ccDrawCubicBezier(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpLength\tccpLength(_CCPoint)", "contents": "ccpLength(_CCPoint)"},
{ "trigger": "ccc4FEqual\tccc4FEqual(_ccColor4F,_ccColor4F)", "contents": "ccc4FEqual(_ccColor4F,_ccColor4F)"},
{ "trigger": "ccpLerp\tccpLerp(_CCPoint,_CCPoint,_num)", "contents": "ccpLerp(_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpAngle\tccpAngle(_CCPoint,_CCPoint)", "contents": "ccpAngle(_CCPoint,_CCPoint)"},
{ "trigger": "ccpAngleSigned\tccpAngleSigned(_CCPoint,_CCPoint)", "contents": "ccpAngleSigned(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawColor4F\tccDrawColor4F(_num,_num,_num,_num)", "contents": "ccDrawColor4F(_num,_num,_num,_num)"},
{ "trigger": "ccpCross\tccpCross(_CCPoint,_CCPoint)", "contents": "ccpCross(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawSolidRect\tccDrawSolidRect(_CCPoint,_CCPoint,_ccColor4F)", "contents": "ccDrawSolidRect(_CCPoint,_CCPoint,_ccColor4F)"},
{ "trigger": "kmGLScalef\tkmGLScalef(_num,_num,_num)", "contents": "kmGLScalef(_num,_num,_num)"},
{ "trigger": "ccpFuzzyEqual\tccpFuzzyEqual(_CCPoint,_CCPoint,_num)", "contents": "ccpFuzzyEqual(_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpToAngle\tccpToAngle(_CCPoint)", "contents": "ccpToAngle(_CCPoint)"},
{ "trigger": "ccpPerp\tccpPerp(_CCPoint)", "contents": "ccpPerp(_CCPoint)"},
{ "trigger": "CCRectMake\tCCRectMake(_num,_num,_num,_num)", "contents": "CCRectMake(_num,_num,_num,_num)"},
{ "trigger": "ccDrawLine\tccDrawLine(_CCPoint,_CCPoint)", "contents": "ccDrawLine(_CCPoint,_CCPoint)"},
{ "trigger": "ccpFromSize\tccpFromSize(_CCSize)", "contents": "ccpFromSize(_CCSize)"},
{ "trigger": "ccDrawFree\tccDrawFree()", "contents": "ccDrawFree()"},
{ "trigger": "ccc4BFromccc4F\tccc4BFromccc4F(_ccColor4F)", "contents": "ccc4BFromccc4F(_ccColor4F)"},
{ "trigger": "ccc4\tccc4(_num,_num,_num,_num)", "contents": "ccc4(_num,_num,_num,_num)"},
{ "trigger": "CCMessageBox\tCCMessageBox(_str,_str)", "contents": "CCMessageBox(_str,_str)"},
{ "trigger": "ccc3\tccc3(_num,_num,_num)", "contents": "ccc3(_num,_num,_num)"},
{ "trigger": "ccpSegmentIntersect\tccpSegmentIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpSegmentIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "ccpAdd\tccpAdd(_CCPoint,_CCPoint)", "contents": "ccpAdd(_CCPoint,_CCPoint)"},
{ "trigger": "kmGLFreeAll\tkmGLFreeAll()", "contents": "kmGLFreeAll()"},
{ "trigger": "ccpMidpoint\tccpMidpoint(_CCPoint,_CCPoint)", "contents": "ccpMidpoint(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawInit\tccDrawInit()", "contents": "ccDrawInit()"},
{ "trigger": "ccpProject\tccpProject(_CCPoint,_CCPoint)", "contents": "ccpProject(_CCPoint,_CCPoint)"},
{ "trigger": "CCRectFromString\tCCRectFromString(_str)", "contents": "CCRectFromString(_str)"},
{ "trigger": "ccDrawCatmullRom\tccDrawCatmullRom(_CCPointArray,_num)", "contents": "ccDrawCatmullRom(_CCPointArray,_num)"},
{ "trigger": "kmGLPushMatrix\tkmGLPushMatrix()", "contents": "kmGLPushMatrix()"},
{ "trigger": "ccDrawCardinalSpline\tccDrawCardinalSpline(_CCPointArray,_num,_num)", "contents": "ccDrawCardinalSpline(_CCPointArray,_num,_num)"},
{ "trigger": "ccpDot\tccpDot(_CCPoint,_CCPoint)", "contents": "ccpDot(_CCPoint,_CCPoint)"},
{ "trigger": "ccpRotate\tccpRotate(_CCPoint,_CCPoint)", "contents": "ccpRotate(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawCircle\tccDrawCircle(_CCPoint,_num,_num,_num,_boo)", "contents": "ccDrawCircle(_CCPoint,_num,_num,_num,_boo)"},
{ "trigger": "ccc4FFromccc4B\tccc4FFromccc4B(_ccColor4B)", "contents": "ccc4FFromccc4B(_ccColor4B)"},
{ "trigger": "clampf\tclampf(_num,_num,_num)", "contents": "clampf(_num,_num,_num)"},
{ "trigger": "ccDrawRect\tccDrawRect(_CCPoint,_CCPoint)", "contents": "ccDrawRect(_CCPoint,_CCPoint)"},
{ "trigger": "ccpClamp\tccpClamp(_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpClamp(_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "CCTintTo\t", "contents": "CCTintTo"},
{ "trigger": "CCTintTo_create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "CCTintTo:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "SimpleAudioEngine\t", "contents": "SimpleAudioEngine"},
{ "trigger": "SimpleAudioEngine_pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "SimpleAudioEngine:pauseBackgroundMusic()"},
{ "trigger": ":pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "pauseBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "SimpleAudioEngine:willPlayBackgroundMusic()"},
{ "trigger": ":willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "willPlayBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "SimpleAudioEngine:setBackgroundMusicVolume(_num)"},
{ "trigger": ":setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "setBackgroundMusicVolume(_num)"},
{ "trigger": "SimpleAudioEngine_getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "SimpleAudioEngine:getEffectsVolume()"},
{ "trigger": ":getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "getEffectsVolume()"},
{ "trigger": "SimpleAudioEngine_pauseEffect\tSimpleAudioEngine:pauseEffect(_num)", "contents": "SimpleAudioEngine:pauseEffect(_num)"},
{ "trigger": ":pauseEffect\tSimpleAudioEngine:pauseEffect(_num)", "contents": "pauseEffect(_num)"},
{ "trigger": "SimpleAudioEngine_preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "SimpleAudioEngine:preloadEffect(_str)"},
{ "trigger": ":preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "preloadEffect(_str)"},
{ "trigger": "SimpleAudioEngine_stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "SimpleAudioEngine:stopEffect(_num)"},
{ "trigger": ":stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "stopEffect(_num)"},
{ "trigger": "SimpleAudioEngine_stopAllEffects\tSimpleAudioEngine:stopAllEffects()", "contents": "SimpleAudioEngine:stopAllEffects()"},
{ "trigger": ":stopAllEffects\tSimpleAudioEngine:stopAllEffects()", "contents": "stopAllEffects()"},
{ "trigger": "SimpleAudioEngine_stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "SimpleAudioEngine:stopBackgroundMusic(_boo)"},
{ "trigger": ":stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "stopBackgroundMusic(_boo)"},
{ "trigger": "SimpleAudioEngine_getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "SimpleAudioEngine:getBackgroundMusicVolume()"},
{ "trigger": ":getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "getBackgroundMusicVolume()"},
{ "trigger": "SimpleAudioEngine_setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "SimpleAudioEngine:setEffectsVolume(_num)"},
{ "trigger": ":setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "setEffectsVolume(_num)"},
{ "trigger": "SimpleAudioEngine_preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "SimpleAudioEngine:preloadBackgroundMusic(_str)"},
{ "trigger": ":preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "preloadBackgroundMusic(_str)"},
{ "trigger": "SimpleAudioEngine_resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "SimpleAudioEngine:resumeBackgroundMusic()"},
{ "trigger": ":resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "resumeBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "SimpleAudioEngine:rewindBackgroundMusic()"},
{ "trigger": ":rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "rewindBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "SimpleAudioEngine:sharedEngine()"},
{ "trigger": ":sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "sharedEngine()"},
{ "trigger": "SimpleAudioEngine_isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "SimpleAudioEngine:isBackgroundMusicPlaying()"},
{ "trigger": ":isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "isBackgroundMusicPlaying()"},
{ "trigger": "SimpleAudioEngine_resumeAllEffects\tSimpleAudioEngine:resumeAllEffects()", "contents": "SimpleAudioEngine:resumeAllEffects()"},
{ "trigger": ":resumeAllEffects\tSimpleAudioEngine:resumeAllEffects()", "contents": "resumeAllEffects()"},
{ "trigger": "SimpleAudioEngine_resumeEffect\tSimpleAudioEngine:resumeEffect(_num)", "contents": "SimpleAudioEngine:resumeEffect(_num)"},
{ "trigger": ":resumeEffect\tSimpleAudioEngine:resumeEffect(_num)", "contents": "resumeEffect(_num)"},
{ "trigger": "SimpleAudioEngine_playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "SimpleAudioEngine:playBackgroundMusic(_str,_boo)"},
{ "trigger": ":playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "playBackgroundMusic(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_pauseAllEffects\tSimpleAudioEngine:pauseAllEffects()", "contents": "SimpleAudioEngine:pauseAllEffects()"},
{ "trigger": ":pauseAllEffects\tSimpleAudioEngine:pauseAllEffects()", "contents": "pauseAllEffects()"},
{ "trigger": "SimpleAudioEngine_playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "SimpleAudioEngine:playEffect(_str,_boo)"},
{ "trigger": ":playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "playEffect(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "SimpleAudioEngine:unloadEffect(_str)"},
{ "trigger": ":unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "unloadEffect(_str)"},
{ "trigger": "CCEaseExponentialInOut\t", "contents": "CCEaseExponentialInOut"},
{ "trigger": "CCEaseExponentialInOut_create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "CCEaseExponentialInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseRateAction\t", "contents": "CCEaseRateAction"},
{ "trigger": "CCEaseRateAction_create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "CCEaseRateAction:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCParticleSun\t", "contents": "CCParticleSun"},
{ "trigger": "CCParticleSun_createWithTotalParticles\tCCParticleSun:createWithTotalParticles(_num)", "contents": "CCParticleSun:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSun:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSun_create\tCCParticleSun:create()", "contents": "CCParticleSun:create()"},
{ "trigger": ":create\tCCParticleSun:create()", "contents": "create()"},
{ "trigger": "ccColor4B\t", "contents": "ccColor4B"},
{ "trigger": "ccColor4B_call\tccColor4B:call()", "contents": "ccColor4B:call()"},
{ "trigger": ":call\tccColor4B:call()", "contents": "call()"},
{ "trigger": "ccColor4B_new\tccColor4B:new()", "contents": "ccColor4B:new()"},
{ "trigger": ":new\tccColor4B:new()", "contents": "new()"},
{ "trigger": "ccColor4B_new_local\tccColor4B:new_local()", "contents": "ccColor4B:new_local()"},
{ "trigger": ":new_local\tccColor4B:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor4B_delete\tccColor4B:delete()", "contents": "ccColor4B:delete()"},
{ "trigger": ":delete\tccColor4B:delete()", "contents": "delete()"},
{ "trigger": "CCHTTPRequest\t", "contents": "CCHTTPRequest"},
{ "trigger": "CCHTTPRequest_getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "CCHTTPRequest:getErrorCode()"},
{ "trigger": ":getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "getErrorCode()"},
{ "trigger": "CCHTTPRequest_getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "CCHTTPRequest:getResponseDataLua()"},
{ "trigger": ":getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "getResponseDataLua()"},
{ "trigger": "CCHTTPRequest_getState\tCCHTTPRequest:getState()", "contents": "CCHTTPRequest:getState()"},
{ "trigger": ":getState\tCCHTTPRequest:getState()", "contents": "getState()"},
{ "trigger": "CCHTTPRequest_setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "CCHTTPRequest:setAcceptEncoding(_num)"},
{ "trigger": ":setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "setAcceptEncoding(_num)"},
{ "trigger": "CCHTTPRequest_cancel\tCCHTTPRequest:cancel()", "contents": "CCHTTPRequest:cancel()"},
{ "trigger": ":cancel\tCCHTTPRequest:cancel()", "contents": "cancel()"},
{ "trigger": "CCHTTPRequest_getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "CCHTTPRequest:getResponseDataLength()"},
{ "trigger": ":getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "getResponseDataLength()"},
{ "trigger": "CCHTTPRequest_setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "CCHTTPRequest:setRequestUrl(_str)"},
{ "trigger": ":setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "setRequestUrl(_str)"},
{ "trigger": "CCHTTPRequest_saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "CCHTTPRequest:saveResponseData(_str)"},
{ "trigger": ":saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "saveResponseData(_str)"},
{ "trigger": "CCHTTPRequest_createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "CCHTTPRequest:createWithUrlLua(_listener,_str,_num)"},
{ "trigger": ":createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "createWithUrlLua(_listener,_str,_num)"},
{ "trigger": "CCHTTPRequest_getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "CCHTTPRequest:getErrorMessage()"},
{ "trigger": ":getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "getErrorMessage()"},
{ "trigger": "CCHTTPRequest_getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "CCHTTPRequest:getResponseStatusCode()"},
{ "trigger": ":getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "getResponseStatusCode()"},
{ "trigger": "CCHTTPRequest_addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "CCHTTPRequest:addRequestHeader(_str)"},
{ "trigger": ":addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "addRequestHeader(_str)"},
{ "trigger": "CCHTTPRequest_start\tCCHTTPRequest:start()", "contents": "CCHTTPRequest:start()"},
{ "trigger": ":start\tCCHTTPRequest:start()", "contents": "start()"},
{ "trigger": "CCHTTPRequest_addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "CCHTTPRequest:addPOSTValue(_str,_str)"},
{ "trigger": ":addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "addPOSTValue(_str,_str)"},
{ "trigger": "CCHTTPRequest_setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "CCHTTPRequest:setTimeout(_num)"},
{ "trigger": ":setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "setTimeout(_num)"},
{ "trigger": "CCHTTPRequest_setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "CCHTTPRequest:setPOSTData(_str)"},
{ "trigger": ":setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "setPOSTData(_str)"},
{ "trigger": "CCHTTPRequest_getResponseString\tCCHTTPRequest:getResponseString()", "contents": "CCHTTPRequest:getResponseString()"},
{ "trigger": ":getResponseString\tCCHTTPRequest:getResponseString()", "contents": "getResponseString()"},
{ "trigger": "CCEaseSineIn\t", "contents": "CCEaseSineIn"},
{ "trigger": "CCEaseSineIn_create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "CCEaseSineIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "ccColor4F\t", "contents": "ccColor4F"},
{ "trigger": "ccColor4F_call\tccColor4F:call()", "contents": "ccColor4F:call()"},
{ "trigger": ":call\tccColor4F:call()", "contents": "call()"},
{ "trigger": "ccColor4F_new\tccColor4F:new()", "contents": "ccColor4F:new()"},
{ "trigger": ":new\tccColor4F:new()", "contents": "new()"},
{ "trigger": "ccColor4F_new_local\tccColor4F:new_local()", "contents": "ccColor4F:new_local()"},
{ "trigger": ":new_local\tccColor4F:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor4F_delete\tccColor4F:delete()", "contents": "ccColor4F:delete()"},
{ "trigger": ":delete\tccColor4F:delete()", "contents": "delete()"},
{ "trigger": "CCParticleExplosion\t", "contents": "CCParticleExplosion"},
{ "trigger": "CCParticleExplosion_createWithTotalParticles\tCCParticleExplosion:createWithTotalParticles(_num)", "contents": "CCParticleExplosion:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleExplosion:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleExplosion_create\tCCParticleExplosion:create()", "contents": "CCParticleExplosion:create()"},
{ "trigger": ":create\tCCParticleExplosion:create()", "contents": "create()"},
{ "trigger": "CCJumpBy\t", "contents": "CCJumpBy"},
{ "trigger": "CCJumpBy_create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpBy:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCPhysicsDebugNode\t", "contents": "CCPhysicsDebugNode"},
{ "trigger": "CCEditBox\t", "contents": "CCEditBox"},
{ "trigger": "CCEditBox_registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "CCEditBox:registerScriptEditBoxHandler(_listener)"},
{ "trigger": ":registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "registerScriptEditBoxHandler(_listener)"},
{ "trigger": "CCEditBox_setFontSize\tCCEditBox:setFontSize(_num)", "contents": "CCEditBox:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCEditBox:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCEditBox_getMaxLength\tCCEditBox:getMaxLength()", "contents": "CCEditBox:getMaxLength()"},
{ "trigger": ":getMaxLength\tCCEditBox:getMaxLength()", "contents": "getMaxLength()"},
{ "trigger": "CCEditBox_setFont\tCCEditBox:setFont(_str,_num)", "contents": "CCEditBox:setFont(_str,_num)"},
{ "trigger": ":setFont\tCCEditBox:setFont(_str,_num)", "contents": "setFont(_str,_num)"},
{ "trigger": "CCEditBox_setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "CCEditBox:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCEditBox_setText\tCCEditBox:setText(_str)", "contents": "CCEditBox:setText(_str)"},
{ "trigger": ":setText\tCCEditBox:setText(_str)", "contents": "setText(_str)"},
{ "trigger": "CCEditBox_setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "CCEditBox:setInputFlag(_num)"},
{ "trigger": ":setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "setInputFlag(_num)"},
{ "trigger": "CCEditBox_setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "CCEditBox:setMaxLength(_num)"},
{ "trigger": ":setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "setMaxLength(_num)"},
{ "trigger": "CCEditBox_create\tCCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "CCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": ":create\tCCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": "CCEditBox_setPlaceholderFontName\tCCEditBox:setPlaceholderFontName(_str)", "contents": "CCEditBox:setPlaceholderFontName(_str)"},
{ "trigger": ":setPlaceholderFontName\tCCEditBox:setPlaceholderFontName(_str)", "contents": "setPlaceholderFontName(_str)"},
{ "trigger": "CCEditBox_unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "CCEditBox:unregisterScriptEditBoxHandler()"},
{ "trigger": ":unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "unregisterScriptEditBoxHandler()"},
{ "trigger": "CCEditBox_setReturnType\tCCEditBox:setReturnType(_num)", "contents": "CCEditBox:setReturnType(_num)"},
{ "trigger": ":setReturnType\tCCEditBox:setReturnType(_num)", "contents": "setReturnType(_num)"},
{ "trigger": "CCEditBox_getText\tCCEditBox:getText()", "contents": "CCEditBox:getText()"},
{ "trigger": ":getText\tCCEditBox:getText()", "contents": "getText()"},
{ "trigger": "CCEditBox_setInputMode\tCCEditBox:setInputMode(_num)", "contents": "CCEditBox:setInputMode(_num)"},
{ "trigger": ":setInputMode\tCCEditBox:setInputMode(_num)", "contents": "setInputMode(_num)"},
{ "trigger": "CCEditBox_setFontName\tCCEditBox:setFontName(_str)", "contents": "CCEditBox:setFontName(_str)"},
{ "trigger": ":setFontName\tCCEditBox:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCEditBox_setPlaceholderFont\tCCEditBox:setPlaceholderFont(_str,_num)", "contents": "CCEditBox:setPlaceholderFont(_str,_num)"},
{ "trigger": ":setPlaceholderFont\tCCEditBox:setPlaceholderFont(_str,_num)", "contents": "setPlaceholderFont(_str,_num)"},
{ "trigger": "CCEditBox_setFontColor\tCCEditBox:setFontColor(_ccColor3B)", "contents": "CCEditBox:setFontColor(_ccColor3B)"},
{ "trigger": ":setFontColor\tCCEditBox:setFontColor(_ccColor3B)", "contents": "setFontColor(_ccColor3B)"},
{ "trigger": "CCEditBox_setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_ccColor3B)", "contents": "CCEditBox:setPlaceholderFontColor(_ccColor3B)"},
{ "trigger": ":setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_ccColor3B)", "contents": "setPlaceholderFontColor(_ccColor3B)"},
{ "trigger": "CCEditBox_getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "CCEditBox:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCEditBox_setPlaceholderFontSize\tCCEditBox:setPlaceholderFontSize(_num)", "contents": "CCEditBox:setPlaceholderFontSize(_num)"},
{ "trigger": ":setPlaceholderFontSize\tCCEditBox:setPlaceholderFontSize(_num)", "contents": "setPlaceholderFontSize(_num)"},
{ "trigger": "CCFileUtils\t", "contents": "CCFileUtils"},
{ "trigger": "CCFileUtils_fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "CCFileUtils:fullPathFromRelativeFile(_str,_str)"},
{ "trigger": ":fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "fullPathFromRelativeFile(_str,_str)"},
{ "trigger": "CCFileUtils_getCachePath\tCCFileUtils:getCachePath()", "contents": "CCFileUtils:getCachePath()"},
{ "trigger": ":getCachePath\tCCFileUtils:getCachePath()", "contents": "getCachePath()"},
{ "trigger": "CCFileUtils_setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "CCFileUtils:setPopupNotify(_boo)"},
{ "trigger": ":setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "setPopupNotify(_boo)"},
{ "trigger": "CCFileUtils_sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "CCFileUtils:sharedFileUtils()"},
{ "trigger": ":sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "sharedFileUtils()"},
{ "trigger": "CCFileUtils_isAbsolutePath\tCCFileUtils:isAbsolutePath(_str)", "contents": "CCFileUtils:isAbsolutePath(_str)"},
{ "trigger": ":isAbsolutePath\tCCFileUtils:isAbsolutePath(_str)", "contents": "isAbsolutePath(_str)"},
{ "trigger": "CCFileUtils_loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "CCFileUtils:loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": ":loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": "CCFileUtils_addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "CCFileUtils:addSearchPath(_str)"},
{ "trigger": ":addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "addSearchPath(_str)"},
{ "trigger": "CCFileUtils_addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "CCFileUtils:addSearchResolutionsOrder(_str)"},
{ "trigger": ":addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "addSearchResolutionsOrder(_str)"},
{ "trigger": "CCFileUtils_setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "CCFileUtils:setSearchRootPath(_str)"},
{ "trigger": ":setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "setSearchRootPath(_str)"},
{ "trigger": "CCFileUtils_isFileExist\tCCFileUtils:isFileExist(_str)", "contents": "CCFileUtils:isFileExist(_str)"},
{ "trigger": ":isFileExist\tCCFileUtils:isFileExist(_str)", "contents": "isFileExist(_str)"},
{ "trigger": "CCFileUtils_setFilenameLookupDictionary\tCCFileUtils:setFilenameLookupDictionary(_CCDictionary)", "contents": "CCFileUtils:setFilenameLookupDictionary(_CCDictionary)"},
{ "trigger": ":setFilenameLookupDictionary\tCCFileUtils:setFilenameLookupDictionary(_CCDictionary)", "contents": "setFilenameLookupDictionary(_CCDictionary)"},
{ "trigger": "CCFileUtils_setWritablePath\tCCFileUtils:setWritablePath(_str)", "contents": "CCFileUtils:setWritablePath(_str)"},
{ "trigger": ":setWritablePath\tCCFileUtils:setWritablePath(_str)", "contents": "setWritablePath(_str)"},
{ "trigger": "CCFileUtils_setCachePath\tCCFileUtils:setCachePath(_str)", "contents": "CCFileUtils:setCachePath(_str)"},
{ "trigger": ":setCachePath\tCCFileUtils:setCachePath(_str)", "contents": "setCachePath(_str)"},
{ "trigger": "CCFileUtils_purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "CCFileUtils:purgeCachedEntries()"},
{ "trigger": ":purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "purgeCachedEntries()"},
{ "trigger": "CCFileUtils_getWritablePath\tCCFileUtils:getWritablePath()", "contents": "CCFileUtils:getWritablePath()"},
{ "trigger": ":getWritablePath\tCCFileUtils:getWritablePath()", "contents": "getWritablePath()"},
{ "trigger": "CCFileUtils_isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "CCFileUtils:isPopupNotify()"},
{ "trigger": ":isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "isPopupNotify()"},
{ "trigger": "CCFileUtils_fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "CCFileUtils:fullPathForFilename(_str)"},
{ "trigger": ":fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "fullPathForFilename(_str)"},
{ "trigger": "CCLabelAtlas\t", "contents": "CCLabelAtlas"},
{ "trigger": "CCLabelAtlas_setString\tCCLabelAtlas:setString(_str)", "contents": "CCLabelAtlas:setString(_str)"},
{ "trigger": ":setString\tCCLabelAtlas:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelAtlas_getString\tCCLabelAtlas:getString()", "contents": "CCLabelAtlas:getString()"},
{ "trigger": ":getString\tCCLabelAtlas:getString()", "contents": "getString()"},
{ "trigger": "CCLabelAtlas_create\tCCLabelAtlas:create(_str,_str)", "contents": "CCLabelAtlas:create(_str,_str)"},
{ "trigger": ":create\tCCLabelAtlas:create(_str,_str)", "contents": "create(_str,_str)"},
{ "trigger": "CCPlace\t", "contents": "CCPlace"},
{ "trigger": "CCPlace_create\tCCPlace:create(_CCPoint)", "contents": "CCPlace:create(_CCPoint)"},
{ "trigger": ":create\tCCPlace:create(_CCPoint)", "contents": "create(_CCPoint)"},
{ "trigger": "CCShuffleTiles\t", "contents": "CCShuffleTiles"},
{ "trigger": "CCShuffleTiles_create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "CCShuffleTiles:create(_num,_CCSize,_num)"},
{ "trigger": ":create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "create(_num,_CCSize,_num)"},
{ "trigger": "CCDevice\t", "contents": "CCDevice"},
{ "trigger": "CCDevice_getDPI\tCCDevice:getDPI()", "contents": "CCDevice:getDPI()"},
{ "trigger": ":getDPI\tCCDevice:getDPI()", "contents": "getDPI()"},
{ "trigger": "CCMenuItem\t", "contents": "CCMenuItem"},
{ "trigger": "CCMenuItem_activate\tCCMenuItem:activate()", "contents": "CCMenuItem:activate()"},
{ "trigger": ":activate\tCCMenuItem:activate()", "contents": "activate()"},
{ "trigger": "CCMenuItem_selected\tCCMenuItem:selected()", "contents": "CCMenuItem:selected()"},
{ "trigger": ":selected\tCCMenuItem:selected()", "contents": "selected()"},
{ "trigger": "CCMenuItem_isSelected\tCCMenuItem:isSelected()", "contents": "CCMenuItem:isSelected()"},
{ "trigger": ":isSelected\tCCMenuItem:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCMenuItem_setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "CCMenuItem:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenuItem_unselected\tCCMenuItem:unselected()", "contents": "CCMenuItem:unselected()"},
{ "trigger": ":unselected\tCCMenuItem:unselected()", "contents": "unselected()"},
{ "trigger": "CCMenuItem_registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "CCMenuItem:registerScriptTapHandler(_listener)"},
{ "trigger": ":registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "registerScriptTapHandler(_listener)"},
{ "trigger": "CCMenuItem_rect\tCCMenuItem:rect()", "contents": "CCMenuItem:rect()"},
{ "trigger": ":rect\tCCMenuItem:rect()", "contents": "rect()"},
{ "trigger": "CCMenuItem_create\tCCMenuItem:create()", "contents": "CCMenuItem:create()"},
{ "trigger": ":create\tCCMenuItem:create()", "contents": "create()"},
{ "trigger": "CCMenuItem_isEnabled\tCCMenuItem:isEnabled()", "contents": "CCMenuItem:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenuItem:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenuItem_unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "CCMenuItem:unregisterScriptTapHandler()"},
{ "trigger": ":unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "unregisterScriptTapHandler()"},
{ "trigger": "CCEaseElasticIn\t", "contents": "CCEaseElasticIn"},
{ "trigger": "CCEaseElasticIn_create\tCCEaseElasticIn:create(_CCActionInterval)", "contents": "CCEaseElasticIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionZoomFlipY\t", "contents": "CCTransitionZoomFlipY"},
{ "trigger": "CCTransitionZoomFlipY_create\tCCTransitionZoomFlipY:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipY:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipY:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionZoomFlipX\t", "contents": "CCTransitionZoomFlipX"},
{ "trigger": "CCTransitionZoomFlipX_create\tCCTransitionZoomFlipX:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipX:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipX:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCFadeTo\t", "contents": "CCFadeTo"},
{ "trigger": "CCFadeTo_create\tCCFadeTo:create(_num,_num)", "contents": "CCFadeTo:create(_num,_num)"},
{ "trigger": ":create\tCCFadeTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCScene\t", "contents": "CCScene"},
{ "trigger": "CCScene_create\tCCScene:create()", "contents": "CCScene:create()"},
{ "trigger": ":create\tCCScene:create()", "contents": "create()"},
{ "trigger": "CCEaseBackIn\t", "contents": "CCEaseBackIn"},
{ "trigger": "CCEaseBackIn_create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "CCEaseBackIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "Armature\t", "contents": "Armature"},
{ "trigger": "Armature_getParentBone\tArmature:getParentBone()", "contents": "Armature:getParentBone()"},
{ "trigger": ":getParentBone\tArmature:getParentBone()", "contents": "getParentBone()"},
{ "trigger": "Armature_setAnimation\tArmature:setAnimation(_Animation)", "contents": "Armature:setAnimation(_Animation)"},
{ "trigger": ":setAnimation\tArmature:setAnimation(_Animation)", "contents": "setAnimation(_Animation)"},
{ "trigger": "Armature_getAnimation\tArmature:getAnimation()", "contents": "Armature:getAnimation()"},
{ "trigger": ":getAnimation\tArmature:getAnimation()", "contents": "getAnimation()"},
{ "trigger": "Armature_getBlendFunc\tArmature:getBlendFunc()", "contents": "Armature:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tArmature:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "Armature_create\tArmature:create()", "contents": "Armature:create()"},
{ "trigger": ":create\tArmature:create()", "contents": "create()"},
{ "trigger": "Armature_addBone\tArmature:addBone(_Bone,_str)", "contents": "Armature:addBone(_Bone,_str)"},
{ "trigger": ":addBone\tArmature:addBone(_Bone,_str)", "contents": "addBone(_Bone,_str)"},
{ "trigger": "Armature_changeBoneParent\tArmature:changeBoneParent(_Bone,_str)", "contents": "Armature:changeBoneParent(_Bone,_str)"},
{ "trigger": ":changeBoneParent\tArmature:changeBoneParent(_Bone,_str)", "contents": "changeBoneParent(_Bone,_str)"},
{ "trigger": "Armature_getBone\tArmature:getBone(_str)", "contents": "Armature:getBone(_str)"},
{ "trigger": ":getBone\tArmature:getBone(_str)", "contents": "getBone(_str)"},
{ "trigger": "Armature_setBlendFunc\tArmature:setBlendFunc(_ccBlendFunc)", "contents": "Armature:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tArmature:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "Armature_getName\tArmature:getName()", "contents": "Armature:getName()"},
{ "trigger": ":getName\tArmature:getName()", "contents": "getName()"},
{ "trigger": "Armature_removeBone\tArmature:removeBone(_Bone,_boo)", "contents": "Armature:removeBone(_Bone,_boo)"},
{ "trigger": ":removeBone\tArmature:removeBone(_Bone,_boo)", "contents": "removeBone(_Bone,_boo)"},
{ "trigger": "Armature_setName\tArmature:setName(_cpp)", "contents": "Armature:setName(_cpp)"},
{ "trigger": ":setName\tArmature:setName(_cpp)", "contents": "setName(_cpp)"},
{ "trigger": "Armature_getBoneDic\tArmature:getBoneDic()", "contents": "Armature:getBoneDic()"},
{ "trigger": ":getBoneDic\tArmature:getBoneDic()", "contents": "getBoneDic()"},
{ "trigger": "ccColor3B\t", "contents": "ccColor3B"},
{ "trigger": "ccColor3B_call\tccColor3B:call()", "contents": "ccColor3B:call()"},
{ "trigger": ":call\tccColor3B:call()", "contents": "call()"},
{ "trigger": "ccColor3B_new\tccColor3B:new()", "contents": "ccColor3B:new()"},
{ "trigger": ":new\tccColor3B:new()", "contents": "new()"},
{ "trigger": "ccColor3B_new_local\tccColor3B:new_local()", "contents": "ccColor3B:new_local()"},
{ "trigger": ":new_local\tccColor3B:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor3B_delete\tccColor3B:delete()", "contents": "ccColor3B:delete()"},
{ "trigger": ":delete\tccColor3B:delete()", "contents": "delete()"},
{ "trigger": "CCProfiler\t", "contents": "CCProfiler"},
{ "trigger": "CCProfiler_releaseAllTimers\tCCProfiler:releaseAllTimers()", "contents": "CCProfiler:releaseAllTimers()"},
{ "trigger": ":releaseAllTimers\tCCProfiler:releaseAllTimers()", "contents": "releaseAllTimers()"},
{ "trigger": "CCProfiler_releaseTimer\tCCProfiler:releaseTimer(_str)", "contents": "CCProfiler:releaseTimer(_str)"},
{ "trigger": ":releaseTimer\tCCProfiler:releaseTimer(_str)", "contents": "releaseTimer(_str)"},
{ "trigger": "CCProfiler_displayTimers\tCCProfiler:displayTimers()", "contents": "CCProfiler:displayTimers()"},
{ "trigger": ":displayTimers\tCCProfiler:displayTimers()", "contents": "displayTimers()"},
{ "trigger": "CCProfiler_createAndAddTimerWithName\tCCProfiler:createAndAddTimerWithName(_str)", "contents": "CCProfiler:createAndAddTimerWithName(_str)"},
{ "trigger": ":createAndAddTimerWithName\tCCProfiler:createAndAddTimerWithName(_str)", "contents": "createAndAddTimerWithName(_str)"},
{ "trigger": "CCProfiler_sharedProfiler\tCCProfiler:sharedProfiler()", "contents": "CCProfiler:sharedProfiler()"},
{ "trigger": ":sharedProfiler\tCCProfiler:sharedProfiler()", "contents": "sharedProfiler()"},
{ "trigger": "CCTransitionSlideInR\t", "contents": "CCTransitionSlideInR"},
{ "trigger": "CCTransitionSlideInR_create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "CCTransitionSlideInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCParticleSystem\t", "contents": "CCParticleSystem"},
{ "trigger": "CCParticleSystem_getGravity\tCCParticleSystem:getGravity()", "contents": "CCParticleSystem:getGravity()"},
{ "trigger": ":getGravity\tCCParticleSystem:getGravity()", "contents": "getGravity()"},
{ "trigger": "CCParticleSystem_getBatchNode\tCCParticleSystem:getBatchNode()", "contents": "CCParticleSystem:getBatchNode()"},
{ "trigger": ":getBatchNode\tCCParticleSystem:getBatchNode()", "contents": "getBatchNode()"},
{ "trigger": "CCParticleSystem_setRadialAccel\tCCParticleSystem:setRadialAccel(_num)", "contents": "CCParticleSystem:setRadialAccel(_num)"},
{ "trigger": ":setRadialAccel\tCCParticleSystem:setRadialAccel(_num)", "contents": "setRadialAccel(_num)"},
{ "trigger": "CCParticleSystem_getSpeedVar\tCCParticleSystem:getSpeedVar()", "contents": "CCParticleSystem:getSpeedVar()"},
{ "trigger": ":getSpeedVar\tCCParticleSystem:getSpeedVar()", "contents": "getSpeedVar()"},
{ "trigger": "CCParticleSystem_setBlendFunc\tCCParticleSystem:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleSystem:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleSystem:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleSystem_setEndRadiusVar\tCCParticleSystem:setEndRadiusVar(_num)", "contents": "CCParticleSystem:setEndRadiusVar(_num)"},
{ "trigger": ":setEndRadiusVar\tCCParticleSystem:setEndRadiusVar(_num)", "contents": "setEndRadiusVar(_num)"},
{ "trigger": "CCParticleSystem_stopSystem\tCCParticleSystem:stopSystem()", "contents": "CCParticleSystem:stopSystem()"},
{ "trigger": ":stopSystem\tCCParticleSystem:stopSystem()", "contents": "stopSystem()"},
{ "trigger": "CCParticleSystem_getRotatePerSecondVar\tCCParticleSystem:getRotatePerSecondVar()", "contents": "CCParticleSystem:getRotatePerSecondVar()"},
{ "trigger": ":getRotatePerSecondVar\tCCParticleSystem:getRotatePerSecondVar()", "contents": "getRotatePerSecondVar()"},
{ "trigger": "CCParticleSystem_isAutoRemoveOnFinish\tCCParticleSystem:isAutoRemoveOnFinish()", "contents": "CCParticleSystem:isAutoRemoveOnFinish()"},
{ "trigger": ":isAutoRemoveOnFinish\tCCParticleSystem:isAutoRemoveOnFinish()", "contents": "isAutoRemoveOnFinish()"},
{ "trigger": "CCParticleSystem_getStartRadiusVar\tCCParticleSystem:getStartRadiusVar()", "contents": "CCParticleSystem:getStartRadiusVar()"},
{ "trigger": ":getStartRadiusVar\tCCParticleSystem:getStartRadiusVar()", "contents": "getStartRadiusVar()"},
{ "trigger": "CCParticleSystem_resetSystem\tCCParticleSystem:resetSystem()", "contents": "CCParticleSystem:resetSystem()"},
{ "trigger": ":resetSystem\tCCParticleSystem:resetSystem()", "contents": "resetSystem()"},
{ "trigger": "CCParticleSystem_getStartRadius\tCCParticleSystem:getStartRadius()", "contents": "CCParticleSystem:getStartRadius()"},
{ "trigger": ":getStartRadius\tCCParticleSystem:getStartRadius()", "contents": "getStartRadius()"},
{ "trigger": "CCParticleSystem_setEndRadius\tCCParticleSystem:setEndRadius(_num)", "contents": "CCParticleSystem:setEndRadius(_num)"},
{ "trigger": ":setEndRadius\tCCParticleSystem:setEndRadius(_num)", "contents": "setEndRadius(_num)"},
{ "trigger": "CCParticleSystem_getRadialAccelVar\tCCParticleSystem:getRadialAccelVar()", "contents": "CCParticleSystem:getRadialAccelVar()"},
{ "trigger": ":getRadialAccelVar\tCCParticleSystem:getRadialAccelVar()", "contents": "getRadialAccelVar()"},
{ "trigger": "CCParticleSystem_getAngleVar\tCCParticleSystem:getAngleVar()", "contents": "CCParticleSystem:getAngleVar()"},
{ "trigger": ":getAngleVar\tCCParticleSystem:getAngleVar()", "contents": "getAngleVar()"},
{ "trigger": "CCParticleSystem_getEndColorVar\tCCParticleSystem:getEndColorVar()", "contents": "CCParticleSystem:getEndColorVar()"},
{ "trigger": ":getEndColorVar\tCCParticleSystem:getEndColorVar()", "contents": "getEndColorVar()"},
{ "trigger": "CCParticleSystem_setRotatePerSecond\tCCParticleSystem:setRotatePerSecond(_num)", "contents": "CCParticleSystem:setRotatePerSecond(_num)"},
{ "trigger": ":setRotatePerSecond\tCCParticleSystem:setRotatePerSecond(_num)", "contents": "setRotatePerSecond(_num)"},
{ "trigger": "CCParticleSystem_setStartSpinVar\tCCParticleSystem:setStartSpinVar(_num)", "contents": "CCParticleSystem:setStartSpinVar(_num)"},
{ "trigger": ":setStartSpinVar\tCCParticleSystem:setStartSpinVar(_num)", "contents": "setStartSpinVar(_num)"},
{ "trigger": "CCParticleSystem_isActive\tCCParticleSystem:isActive()", "contents": "CCParticleSystem:isActive()"},
{ "trigger": ":isActive\tCCParticleSystem:isActive()", "contents": "isActive()"},
{ "trigger": "CCParticleSystem_getRotatePerSecond\tCCParticleSystem:getRotatePerSecond()", "contents": "CCParticleSystem:getRotatePerSecond()"},
{ "trigger": ":getRotatePerSecond\tCCParticleSystem:getRotatePerSecond()", "contents": "getRotatePerSecond()"},
{ "trigger": "CCParticleSystem_getEndRadius\tCCParticleSystem:getEndRadius()", "contents": "CCParticleSystem:getEndRadius()"},
{ "trigger": ":getEndRadius\tCCParticleSystem:getEndRadius()", "contents": "getEndRadius()"},
{ "trigger": "CCParticleSystem_getOpacityModifyRGB\tCCParticleSystem:getOpacityModifyRGB()", "contents": "CCParticleSystem:getOpacityModifyRGB()"},
{ "trigger": ":getOpacityModifyRGB\tCCParticleSystem:getOpacityModifyRGB()", "contents": "getOpacityModifyRGB()"},
{ "trigger": "CCParticleSystem_getSourcePosition\tCCParticleSystem:getSourcePosition()", "contents": "CCParticleSystem:getSourcePosition()"},
{ "trigger": ":getSourcePosition\tCCParticleSystem:getSourcePosition()", "contents": "getSourcePosition()"},
{ "trigger": "CCParticleSystem_getRotationIsDir\tCCParticleSystem:getRotationIsDir()", "contents": "CCParticleSystem:getRotationIsDir()"},
{ "trigger": ":getRotationIsDir\tCCParticleSystem:getRotationIsDir()", "contents": "getRotationIsDir()"},
{ "trigger": "CCParticleSystem_setAngleVar\tCCParticleSystem:setAngleVar(_num)", "contents": "CCParticleSystem:setAngleVar(_num)"},
{ "trigger": ":setAngleVar\tCCParticleSystem:setAngleVar(_num)", "contents": "setAngleVar(_num)"},
{ "trigger": "CCParticleSystem_isFull\tCCParticleSystem:isFull()", "contents": "CCParticleSystem:isFull()"},
{ "trigger": ":isFull\tCCParticleSystem:isFull()", "contents": "isFull()"},
{ "trigger": "CCParticleSystem_getBlendFunc\tCCParticleSystem:getBlendFunc()", "contents": "CCParticleSystem:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleSystem:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleSystem_getEndSpin\tCCParticleSystem:getEndSpin()", "contents": "CCParticleSystem:getEndSpin()"},
{ "trigger": ":getEndSpin\tCCParticleSystem:getEndSpin()", "contents": "getEndSpin()"},
{ "trigger": "CCParticleSystem_setOpacityModifyRGB\tCCParticleSystem:setOpacityModifyRGB(_boo)", "contents": "CCParticleSystem:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCParticleSystem:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCParticleSystem_setStartColorVar\tCCParticleSystem:setStartColorVar(_ccColor4F)", "contents": "CCParticleSystem:setStartColorVar(_ccColor4F)"},
{ "trigger": ":setStartColorVar\tCCParticleSystem:setStartColorVar(_ccColor4F)", "contents": "setStartColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setEndSpin\tCCParticleSystem:setEndSpin(_num)", "contents": "CCParticleSystem:setEndSpin(_num)"},
{ "trigger": ":setEndSpin\tCCParticleSystem:setEndSpin(_num)", "contents": "setEndSpin(_num)"},
{ "trigger": "CCParticleSystem_getEmissionRate\tCCParticleSystem:getEmissionRate()", "contents": "CCParticleSystem:getEmissionRate()"},
{ "trigger": ":getEmissionRate\tCCParticleSystem:getEmissionRate()", "contents": "getEmissionRate()"},
{ "trigger": "CCParticleSystem_setDuration\tCCParticleSystem:setDuration(_num)", "contents": "CCParticleSystem:setDuration(_num)"},
{ "trigger": ":setDuration\tCCParticleSystem:setDuration(_num)", "contents": "setDuration(_num)"},
{ "trigger": "CCParticleSystem_getTangentialAccel\tCCParticleSystem:getTangentialAccel()", "contents": "CCParticleSystem:getTangentialAccel()"},
{ "trigger": ":getTangentialAccel\tCCParticleSystem:getTangentialAccel()", "contents": "getTangentialAccel()"},
{ "trigger": "CCParticleSystem_initWithDictionary\tCCParticleSystem:initWithDictionary(_CCDictionary,_str)", "contents": "CCParticleSystem:initWithDictionary(_CCDictionary,_str)"},
{ "trigger": ":initWithDictionary\tCCParticleSystem:initWithDictionary(_CCDictionary,_str)", "contents": "initWithDictionary(_CCDictionary,_str)"},
{ "trigger": "CCParticleSystem_updateWithNoTime\tCCParticleSystem:updateWithNoTime()", "contents": "CCParticleSystem:updateWithNoTime()"},
{ "trigger": ":updateWithNoTime\tCCParticleSystem:updateWithNoTime()", "contents": "updateWithNoTime()"},
{ "trigger": "CCParticleSystem_setRadialAccelVar\tCCParticleSystem:setRadialAccelVar(_num)", "contents": "CCParticleSystem:setRadialAccelVar(_num)"},
{ "trigger": ":setRadialAccelVar\tCCParticleSystem:setRadialAccelVar(_num)", "contents": "setRadialAccelVar(_num)"},
{ "trigger": "CCParticleSystem_getAtlasIndex\tCCParticleSystem:getAtlasIndex()", "contents": "CCParticleSystem:getAtlasIndex()"},
{ "trigger": ":getAtlasIndex\tCCParticleSystem:getAtlasIndex()", "contents": "getAtlasIndex()"},
{ "trigger": "CCParticleSystem_getStartSizeVar\tCCParticleSystem:getStartSizeVar()", "contents": "CCParticleSystem:getStartSizeVar()"},
{ "trigger": ":getStartSizeVar\tCCParticleSystem:getStartSizeVar()", "contents": "getStartSizeVar()"},
{ "trigger": "CCParticleSystem_getEndSpinVar\tCCParticleSystem:getEndSpinVar()", "contents": "CCParticleSystem:getEndSpinVar()"},
{ "trigger": ":getEndSpinVar\tCCParticleSystem:getEndSpinVar()", "contents": "getEndSpinVar()"},
{ "trigger": "CCParticleSystem_getEndSizeVar\tCCParticleSystem:getEndSizeVar()", "contents": "CCParticleSystem:getEndSizeVar()"},
{ "trigger": ":getEndSizeVar\tCCParticleSystem:getEndSizeVar()", "contents": "getEndSizeVar()"},
{ "trigger": "CCParticleSystem_setStartSize\tCCParticleSystem:setStartSize(_num)", "contents": "CCParticleSystem:setStartSize(_num)"},
{ "trigger": ":setStartSize\tCCParticleSystem:setStartSize(_num)", "contents": "setStartSize(_num)"},
{ "trigger": "CCParticleSystem_getRadialAccel\tCCParticleSystem:getRadialAccel()", "contents": "CCParticleSystem:getRadialAccel()"},
{ "trigger": ":getRadialAccel\tCCParticleSystem:getRadialAccel()", "contents": "getRadialAccel()"},
{ "trigger": "CCParticleSystem_setRotatePerSecondVar\tCCParticleSystem:setRotatePerSecondVar(_num)", "contents": "CCParticleSystem:setRotatePerSecondVar(_num)"},
{ "trigger": ":setRotatePerSecondVar\tCCParticleSystem:setRotatePerSecondVar(_num)", "contents": "setRotatePerSecondVar(_num)"},
{ "trigger": "CCParticleSystem_getTangentialAccelVar\tCCParticleSystem:getTangentialAccelVar()", "contents": "CCParticleSystem:getTangentialAccelVar()"},
{ "trigger": ":getTangentialAccelVar\tCCParticleSystem:getTangentialAccelVar()", "contents": "getTangentialAccelVar()"},
{ "trigger": "CCParticleSystem_setEmitterMode\tCCParticleSystem:setEmitterMode(_num)", "contents": "CCParticleSystem:setEmitterMode(_num)"},
{ "trigger": ":setEmitterMode\tCCParticleSystem:setEmitterMode(_num)", "contents": "setEmitterMode(_num)"},
{ "trigger": "CCParticleSystem_setEndSizeVar\tCCParticleSystem:setEndSizeVar(_num)", "contents": "CCParticleSystem:setEndSizeVar(_num)"},
{ "trigger": ":setEndSizeVar\tCCParticleSystem:setEndSizeVar(_num)", "contents": "setEndSizeVar(_num)"},
{ "trigger": "CCParticleSystem_setLife\tCCParticleSystem:setLife(_num)", "contents": "CCParticleSystem:setLife(_num)"},
{ "trigger": ":setLife\tCCParticleSystem:setLife(_num)", "contents": "setLife(_num)"},
{ "trigger": "CCParticleSystem_getStartSize\tCCParticleSystem:getStartSize()", "contents": "CCParticleSystem:getStartSize()"},
{ "trigger": ":getStartSize\tCCParticleSystem:getStartSize()", "contents": "getStartSize()"},
{ "trigger": "CCParticleSystem_setTexture\tCCParticleSystem:setTexture(_CCTexture2D)", "contents": "CCParticleSystem:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleSystem:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleSystem_getSpeed\tCCParticleSystem:getSpeed()", "contents": "CCParticleSystem:getSpeed()"},
{ "trigger": ":getSpeed\tCCParticleSystem:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCParticleSystem_setStartSizeVar\tCCParticleSystem:setStartSizeVar(_num)", "contents": "CCParticleSystem:setStartSizeVar(_num)"},
{ "trigger": ":setStartSizeVar\tCCParticleSystem:setStartSizeVar(_num)", "contents": "setStartSizeVar(_num)"},
{ "trigger": "CCParticleSystem_setStartSpin\tCCParticleSystem:setStartSpin(_num)", "contents": "CCParticleSystem:setStartSpin(_num)"},
{ "trigger": ":setStartSpin\tCCParticleSystem:setStartSpin(_num)", "contents": "setStartSpin(_num)"},
{ "trigger": "CCParticleSystem_getTexture\tCCParticleSystem:getTexture()", "contents": "CCParticleSystem:getTexture()"},
{ "trigger": ":getTexture\tCCParticleSystem:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCParticleSystem_getEndRadiusVar\tCCParticleSystem:getEndRadiusVar()", "contents": "CCParticleSystem:getEndRadiusVar()"},
{ "trigger": ":getEndRadiusVar\tCCParticleSystem:getEndRadiusVar()", "contents": "getEndRadiusVar()"},
{ "trigger": "CCParticleSystem_setSpeed\tCCParticleSystem:setSpeed(_num)", "contents": "CCParticleSystem:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCParticleSystem:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCParticleSystem_getStartSpin\tCCParticleSystem:getStartSpin()", "contents": "CCParticleSystem:getStartSpin()"},
{ "trigger": ":getStartSpin\tCCParticleSystem:getStartSpin()", "contents": "getStartSpin()"},
{ "trigger": "CCParticleSystem_getStartColorVar\tCCParticleSystem:getStartColorVar()", "contents": "CCParticleSystem:getStartColorVar()"},
{ "trigger": ":getStartColorVar\tCCParticleSystem:getStartColorVar()", "contents": "getStartColorVar()"},
{ "trigger": "CCParticleSystem_setEndColorVar\tCCParticleSystem:setEndColorVar(_ccColor4F)", "contents": "CCParticleSystem:setEndColorVar(_ccColor4F)"},
{ "trigger": ":setEndColorVar\tCCParticleSystem:setEndColorVar(_ccColor4F)", "contents": "setEndColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystem_getParticleCount\tCCParticleSystem:getParticleCount()", "contents": "CCParticleSystem:getParticleCount()"},
{ "trigger": ":getParticleCount\tCCParticleSystem:getParticleCount()", "contents": "getParticleCount()"},
{ "trigger": "CCParticleSystem_setAngle\tCCParticleSystem:setAngle(_num)", "contents": "CCParticleSystem:setAngle(_num)"},
{ "trigger": ":setAngle\tCCParticleSystem:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCParticleSystem_initWithTotalParticles\tCCParticleSystem:initWithTotalParticles(_num)", "contents": "CCParticleSystem:initWithTotalParticles(_num)"},
{ "trigger": ":initWithTotalParticles\tCCParticleSystem:initWithTotalParticles(_num)", "contents": "initWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystem_setEndSpinVar\tCCParticleSystem:setEndSpinVar(_num)", "contents": "CCParticleSystem:setEndSpinVar(_num)"},
{ "trigger": ":setEndSpinVar\tCCParticleSystem:setEndSpinVar(_num)", "contents": "setEndSpinVar(_num)"},
{ "trigger": "CCParticleSystem_initWithFile\tCCParticleSystem:initWithFile(_str)", "contents": "CCParticleSystem:initWithFile(_str)"},
{ "trigger": ":initWithFile\tCCParticleSystem:initWithFile(_str)", "contents": "initWithFile(_str)"},
{ "trigger": "CCParticleSystem_setGravity\tCCParticleSystem:setGravity(_CCPoint)", "contents": "CCParticleSystem:setGravity(_CCPoint)"},
{ "trigger": ":setGravity\tCCParticleSystem:setGravity(_CCPoint)", "contents": "setGravity(_CCPoint)"},
{ "trigger": "CCParticleSystem_getEmitterMode\tCCParticleSystem:getEmitterMode()", "contents": "CCParticleSystem:getEmitterMode()"},
{ "trigger": ":getEmitterMode\tCCParticleSystem:getEmitterMode()", "contents": "getEmitterMode()"},
{ "trigger": "CCParticleSystem_getLife\tCCParticleSystem:getLife()", "contents": "CCParticleSystem:getLife()"},
{ "trigger": ":getLife\tCCParticleSystem:getLife()", "contents": "getLife()"},
{ "trigger": "CCParticleSystem_init\tCCParticleSystem:init()", "contents": "CCParticleSystem:init()"},
{ "trigger": ":init\tCCParticleSystem:init()", "contents": "init()"},
{ "trigger": "CCParticleSystem_isBlendAdditive\tCCParticleSystem:isBlendAdditive()", "contents": "CCParticleSystem:isBlendAdditive()"},
{ "trigger": ":isBlendAdditive\tCCParticleSystem:isBlendAdditive()", "contents": "isBlendAdditive()"},
{ "trigger": "CCParticleSystem_getDuration\tCCParticleSystem:getDuration()", "contents": "CCParticleSystem:getDuration()"},
{ "trigger": ":getDuration\tCCParticleSystem:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCParticleSystem_getPosVar\tCCParticleSystem:getPosVar()", "contents": "CCParticleSystem:getPosVar()"},
{ "trigger": ":getPosVar\tCCParticleSystem:getPosVar()", "contents": "getPosVar()"},
{ "trigger": "CCParticleSystem_setRotationIsDir\tCCParticleSystem:setRotationIsDir(_boo)", "contents": "CCParticleSystem:setRotationIsDir(_boo)"},
{ "trigger": ":setRotationIsDir\tCCParticleSystem:setRotationIsDir(_boo)", "contents": "setRotationIsDir(_boo)"},
{ "trigger": "CCParticleSystem_setEndSize\tCCParticleSystem:setEndSize(_num)", "contents": "CCParticleSystem:setEndSize(_num)"},
{ "trigger": ":setEndSize\tCCParticleSystem:setEndSize(_num)", "contents": "setEndSize(_num)"},
{ "trigger": "CCParticleSystem_getStartSpinVar\tCCParticleSystem:getStartSpinVar()", "contents": "CCParticleSystem:getStartSpinVar()"},
{ "trigger": ":getStartSpinVar\tCCParticleSystem:getStartSpinVar()", "contents": "getStartSpinVar()"},
{ "trigger": "CCParticleSystem_setEmissionRate\tCCParticleSystem:setEmissionRate(_num)", "contents": "CCParticleSystem:setEmissionRate(_num)"},
{ "trigger": ":setEmissionRate\tCCParticleSystem:setEmissionRate(_num)", "contents": "setEmissionRate(_num)"},
{ "trigger": "CCParticleSystem_setPosVar\tCCParticleSystem:setPosVar(_CCPoint)", "contents": "CCParticleSystem:setPosVar(_CCPoint)"},
{ "trigger": ":setPosVar\tCCParticleSystem:setPosVar(_CCPoint)", "contents": "setPosVar(_CCPoint)"},
{ "trigger": "CCParticleSystem_setSourcePosition\tCCParticleSystem:setSourcePosition(_CCPoint)", "contents": "CCParticleSystem:setSourcePosition(_CCPoint)"},
{ "trigger": ":setSourcePosition\tCCParticleSystem:setSourcePosition(_CCPoint)", "contents": "setSourcePosition(_CCPoint)"},
{ "trigger": "CCParticleSystem_setPositionType\tCCParticleSystem:setPositionType(_num)", "contents": "CCParticleSystem:setPositionType(_num)"},
{ "trigger": ":setPositionType\tCCParticleSystem:setPositionType(_num)", "contents": "setPositionType(_num)"},
{ "trigger": "CCParticleSystem_getAngle\tCCParticleSystem:getAngle()", "contents": "CCParticleSystem:getAngle()"},
{ "trigger": ":getAngle\tCCParticleSystem:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCParticleSystem_setAutoRemoveOnFinish\tCCParticleSystem:setAutoRemoveOnFinish(_boo)", "contents": "CCParticleSystem:setAutoRemoveOnFinish(_boo)"},
{ "trigger": ":setAutoRemoveOnFinish\tCCParticleSystem:setAutoRemoveOnFinish(_boo)", "contents": "setAutoRemoveOnFinish(_boo)"},
{ "trigger": "CCParticleSystem_setBlendAdditive\tCCParticleSystem:setBlendAdditive(_boo)", "contents": "CCParticleSystem:setBlendAdditive(_boo)"},
{ "trigger": ":setBlendAdditive\tCCParticleSystem:setBlendAdditive(_boo)", "contents": "setBlendAdditive(_boo)"},
{ "trigger": "CCParticleSystem_setStartRadius\tCCParticleSystem:setStartRadius(_num)", "contents": "CCParticleSystem:setStartRadius(_num)"},
{ "trigger": ":setStartRadius\tCCParticleSystem:setStartRadius(_num)", "contents": "setStartRadius(_num)"},
{ "trigger": "CCParticleSystem_setSpeedVar\tCCParticleSystem:setSpeedVar(_num)", "contents": "CCParticleSystem:setSpeedVar(_num)"},
{ "trigger": ":setSpeedVar\tCCParticleSystem:setSpeedVar(_num)", "contents": "setSpeedVar(_num)"},
{ "trigger": "CCParticleSystem_setTangentialAccel\tCCParticleSystem:setTangentialAccel(_num)", "contents": "CCParticleSystem:setTangentialAccel(_num)"},
{ "trigger": ":setTangentialAccel\tCCParticleSystem:setTangentialAccel(_num)", "contents": "setTangentialAccel(_num)"},
{ "trigger": "CCParticleSystem_getEndColor\tCCParticleSystem:getEndColor()", "contents": "CCParticleSystem:getEndColor()"},
{ "trigger": ":getEndColor\tCCParticleSystem:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCParticleSystem_addParticle\tCCParticleSystem:addParticle()", "contents": "CCParticleSystem:addParticle()"},
{ "trigger": ":addParticle\tCCParticleSystem:addParticle()", "contents": "addParticle()"},
{ "trigger": "CCParticleSystem_setStartColor\tCCParticleSystem:setStartColor(_ccColor4F)", "contents": "CCParticleSystem:setStartColor(_ccColor4F)"},
{ "trigger": ":setStartColor\tCCParticleSystem:setStartColor(_ccColor4F)", "contents": "setStartColor(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setTangentialAccelVar\tCCParticleSystem:setTangentialAccelVar(_num)", "contents": "CCParticleSystem:setTangentialAccelVar(_num)"},
{ "trigger": ":setTangentialAccelVar\tCCParticleSystem:setTangentialAccelVar(_num)", "contents": "setTangentialAccelVar(_num)"},
{ "trigger": "CCParticleSystem_getStartColor\tCCParticleSystem:getStartColor()", "contents": "CCParticleSystem:getStartColor()"},
{ "trigger": ":getStartColor\tCCParticleSystem:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCParticleSystem_setStartRadiusVar\tCCParticleSystem:setStartRadiusVar(_num)", "contents": "CCParticleSystem:setStartRadiusVar(_num)"},
{ "trigger": ":setStartRadiusVar\tCCParticleSystem:setStartRadiusVar(_num)", "contents": "setStartRadiusVar(_num)"},
{ "trigger": "CCParticleSystem_getEndSize\tCCParticleSystem:getEndSize()", "contents": "CCParticleSystem:getEndSize()"},
{ "trigger": ":getEndSize\tCCParticleSystem:getEndSize()", "contents": "getEndSize()"},
{ "trigger": "CCParticleSystem_getTotalParticles\tCCParticleSystem:getTotalParticles()", "contents": "CCParticleSystem:getTotalParticles()"},
{ "trigger": ":getTotalParticles\tCCParticleSystem:getTotalParticles()", "contents": "getTotalParticles()"},
{ "trigger": "CCParticleSystem_getLifeVar\tCCParticleSystem:getLifeVar()", "contents": "CCParticleSystem:getLifeVar()"},
{ "trigger": ":getLifeVar\tCCParticleSystem:getLifeVar()", "contents": "getLifeVar()"},
{ "trigger": "CCParticleSystem_setTotalParticles\tCCParticleSystem:setTotalParticles(_num)", "contents": "CCParticleSystem:setTotalParticles(_num)"},
{ "trigger": ":setTotalParticles\tCCParticleSystem:setTotalParticles(_num)", "contents": "setTotalParticles(_num)"},
{ "trigger": "CCParticleSystem_getPositionType\tCCParticleSystem:getPositionType()", "contents": "CCParticleSystem:getPositionType()"},
{ "trigger": ":getPositionType\tCCParticleSystem:getPositionType()", "contents": "getPositionType()"},
{ "trigger": "CCParticleSystem_setEndColor\tCCParticleSystem:setEndColor(_ccColor4F)", "contents": "CCParticleSystem:setEndColor(_ccColor4F)"},
{ "trigger": ":setEndColor\tCCParticleSystem:setEndColor(_ccColor4F)", "contents": "setEndColor(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setLifeVar\tCCParticleSystem:setLifeVar(_num)", "contents": "CCParticleSystem:setLifeVar(_num)"},
{ "trigger": ":setLifeVar\tCCParticleSystem:setLifeVar(_num)", "contents": "setLifeVar(_num)"},
{ "trigger": "CCControlColourPicker\t", "contents": "CCControlColourPicker"},
{ "trigger": "CCControlColourPicker_setColor\tCCControlColourPicker:setColor(_ccColor3B)", "contents": "CCControlColourPicker:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCControlColourPicker:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCControlColourPicker_create\tCCControlColourPicker:create()", "contents": "CCControlColourPicker:create()"},
{ "trigger": ":create\tCCControlColourPicker:create()", "contents": "create()"},
{ "trigger": "CCTransitionSlideInT\t", "contents": "CCTransitionSlideInT"},
{ "trigger": "CCTransitionSlideInT_create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "CCTransitionSlideInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDeccelAmplitude\t", "contents": "CCDeccelAmplitude"},
{ "trigger": "CCDeccelAmplitude_create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "CCDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCSprite\t", "contents": "CCSprite"},
{ "trigger": "CCSprite_getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "CCSprite:getAtlasIndex()"},
{ "trigger": ":getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "getAtlasIndex()"},
{ "trigger": "CCSprite_isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "CCSprite:isTextureRectRotated()"},
{ "trigger": ":isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "isTextureRectRotated()"},
{ "trigger": "CCSprite_setTextureRect\tCCSprite:setTextureRect(_CCRect)", "contents": "CCSprite:setTextureRect(_CCRect)"},
{ "trigger": ":setTextureRect\tCCSprite:setTextureRect(_CCRect)", "contents": "setTextureRect(_CCRect)"},
{ "trigger": "CCSprite_setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "CCSprite:setVertexRect(_CCRect)"},
{ "trigger": ":setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "setVertexRect(_CCRect)"},
{ "trigger": "CCSprite_isDirty\tCCSprite:isDirty()", "contents": "CCSprite:isDirty()"},
{ "trigger": ":isDirty\tCCSprite:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCSprite_isFlipY\tCCSprite:isFlipY()", "contents": "CCSprite:isFlipY()"},
{ "trigger": ":isFlipY\tCCSprite:isFlipY()", "contents": "isFlipY()"},
{ "trigger": "CCSprite_createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "CCSprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCSprite_getBlendFunc\tCCSprite:getBlendFunc()", "contents": "CCSprite:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSprite:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSprite_isFlipX\tCCSprite:isFlipX()", "contents": "CCSprite:isFlipX()"},
{ "trigger": ":isFlipX\tCCSprite:isFlipX()", "contents": "isFlipX()"},
{ "trigger": "CCSprite_setDirty\tCCSprite:setDirty(_boo)", "contents": "CCSprite:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCSprite:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCSprite_createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "CCSprite:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "CCSprite:getOffsetPosition()"},
{ "trigger": ":getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "getOffsetPosition()"},
{ "trigger": "CCSprite_create\tCCSprite:create()", "contents": "CCSprite:create()"},
{ "trigger": ":create\tCCSprite:create()", "contents": "create()"},
{ "trigger": "CCSprite_setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "CCSprite:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCSprite_getTextureRect\tCCSprite:getTextureRect()", "contents": "CCSprite:getTextureRect()"},
{ "trigger": ":getTextureRect\tCCSprite:getTextureRect()", "contents": "getTextureRect()"},
{ "trigger": "CCSprite_setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "CCSprite:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "CCSprite:isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": ":isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": "CCSprite_setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "CCSprite:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSprite_getTexture\tCCSprite:getTexture()", "contents": "CCSprite:getTexture()"},
{ "trigger": ":getTexture\tCCSprite:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSprite_displayFrame\tCCSprite:displayFrame()", "contents": "CCSprite:displayFrame()"},
{ "trigger": ":displayFrame\tCCSprite:displayFrame()", "contents": "displayFrame()"},
{ "trigger": "CCSprite_setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "CCSprite:setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": ":setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": "CCSprite_setFlipY\tCCSprite:setFlipY(_boo)", "contents": "CCSprite:setFlipY(_boo)"},
{ "trigger": ":setFlipY\tCCSprite:setFlipY(_boo)", "contents": "setFlipY(_boo)"},
{ "trigger": "CCSprite_createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCSprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCSprite_setFlipX\tCCSprite:setFlipX(_boo)", "contents": "CCSprite:setFlipX(_boo)"},
{ "trigger": ":setFlipX\tCCSprite:setFlipX(_boo)", "contents": "setFlipX(_boo)"},
{ "trigger": "CCTransitionProgress\t", "contents": "CCTransitionProgress"},
{ "trigger": "CCTransitionSlideInL\t", "contents": "CCTransitionSlideInL"},
{ "trigger": "CCTransitionSlideInL_create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "CCTransitionSlideInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCControlPotentiometer\t", "contents": "CCControlPotentiometer"},
{ "trigger": "CCControlPotentiometer_getValue\tCCControlPotentiometer:getValue()", "contents": "CCControlPotentiometer:getValue()"},
{ "trigger": ":getValue\tCCControlPotentiometer:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlPotentiometer_getMaximumValue\tCCControlPotentiometer:getMaximumValue()", "contents": "CCControlPotentiometer:getMaximumValue()"},
{ "trigger": ":getMaximumValue\tCCControlPotentiometer:getMaximumValue()", "contents": "getMaximumValue()"},
{ "trigger": "CCControlPotentiometer_setMinimumValue\tCCControlPotentiometer:setMinimumValue(_num)", "contents": "CCControlPotentiometer:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlPotentiometer:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlPotentiometer_setMaximumValue\tCCControlPotentiometer:setMaximumValue(_num)", "contents": "CCControlPotentiometer:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlPotentiometer:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlPotentiometer_getMinimumValue\tCCControlPotentiometer:getMinimumValue()", "contents": "CCControlPotentiometer:getMinimumValue()"},
{ "trigger": ":getMinimumValue\tCCControlPotentiometer:getMinimumValue()", "contents": "getMinimumValue()"},
{ "trigger": "CCControlPotentiometer_setValue\tCCControlPotentiometer:setValue(_num)", "contents": "CCControlPotentiometer:setValue(_num)"},
{ "trigger": ":setValue\tCCControlPotentiometer:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlPotentiometer_create\tCCControlPotentiometer:create(_str,_str,_str)", "contents": "CCControlPotentiometer:create(_str,_str,_str)"},
{ "trigger": ":create\tCCControlPotentiometer:create(_str,_str,_str)", "contents": "create(_str,_str,_str)"},
{ "trigger": "CCLayerMultiplex\t", "contents": "CCLayerMultiplex"},
{ "trigger": "CCLayerMultiplex_createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "CCLayerMultiplex:createWithLayer(_CCLayer)"},
{ "trigger": ":createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "createWithLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_createWithArray\tCCLayerMultiplex:createWithArray(_CCArray)", "contents": "CCLayerMultiplex:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCLayerMultiplex:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCLayerMultiplex_addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "CCLayerMultiplex:addLayer(_CCLayer)"},
{ "trigger": ":addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "addLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "CCLayerMultiplex:switchTo(_num)"},
{ "trigger": ":switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "switchTo(_num)"},
{ "trigger": "CCLayerMultiplex_switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "CCLayerMultiplex:switchToAndReleaseMe(_num)"},
{ "trigger": ":switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "switchToAndReleaseMe(_num)"},
{ "trigger": "CCLayerMultiplex_create\tCCLayerMultiplex:create()", "contents": "CCLayerMultiplex:create()"},
{ "trigger": ":create\tCCLayerMultiplex:create()", "contents": "create()"},
{ "trigger": "ccBlendFunc\t", "contents": "ccBlendFunc"},
{ "trigger": "ccBlendFunc_call\tccBlendFunc:call()", "contents": "ccBlendFunc:call()"},
{ "trigger": ":call\tccBlendFunc:call()", "contents": "call()"},
{ "trigger": "ccBlendFunc_new\tccBlendFunc:new()", "contents": "ccBlendFunc:new()"},
{ "trigger": ":new\tccBlendFunc:new()", "contents": "new()"},
{ "trigger": "ccBlendFunc_new_local\tccBlendFunc:new_local()", "contents": "ccBlendFunc:new_local()"},
{ "trigger": ":new_local\tccBlendFunc:new_local()", "contents": "new_local()"},
{ "trigger": "ccBlendFunc_delete\tccBlendFunc:delete()", "contents": "ccBlendFunc:delete()"},
{ "trigger": ":delete\tccBlendFunc:delete()", "contents": "delete()"},
{ "trigger": "CCStore\t", "contents": "CCStore"},
{ "trigger": "CCStore_isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "CCStore:isProductLoaded(_str)"},
{ "trigger": ":isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "isProductLoaded(_str)"},
{ "trigger": "CCStore_setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "CCStore:setReceiptVerifyMode(_num,_boo)"},
{ "trigger": ":setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "setReceiptVerifyMode(_num,_boo)"},
{ "trigger": "CCStore_getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "CCStore:getReceiptVerifyMode()"},
{ "trigger": ":getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "getReceiptVerifyMode()"},
{ "trigger": "CCStore_postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "CCStore:postInitWithTransactionListenerLua(_listener)"},
{ "trigger": ":postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "postInitWithTransactionListenerLua(_listener)"},
{ "trigger": "CCStore_purchase\tCCStore:purchase(_str)", "contents": "CCStore:purchase(_str)"},
{ "trigger": ":purchase\tCCStore:purchase(_str)", "contents": "purchase(_str)"},
{ "trigger": "CCStore_sharedStore\tCCStore:sharedStore()", "contents": "CCStore:sharedStore()"},
{ "trigger": ":sharedStore\tCCStore:sharedStore()", "contents": "sharedStore()"},
{ "trigger": "CCStore_cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "CCStore:cancelLoadProducts()"},
{ "trigger": ":cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "cancelLoadProducts()"},
{ "trigger": "CCStore_getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "CCStore:getReceiptVerifyServerUrl()"},
{ "trigger": ":getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "getReceiptVerifyServerUrl()"},
{ "trigger": "CCStore_canMakePurchases\tCCStore:canMakePurchases()", "contents": "CCStore:canMakePurchases()"},
{ "trigger": ":canMakePurchases\tCCStore:canMakePurchases()", "contents": "canMakePurchases()"},
{ "trigger": "CCStore_loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "CCStore:loadProductsLua(_val,_listener)"},
{ "trigger": ":loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "loadProductsLua(_val,_listener)"},
{ "trigger": "CCStore_purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "CCStore:purgeSharedStore()"},
{ "trigger": ":purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "purgeSharedStore()"},
{ "trigger": "CCStore_finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "CCStore:finishTransactionLua(_str)"},
{ "trigger": ":finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "finishTransactionLua(_str)"},
{ "trigger": "CCStore_setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "CCStore:setReceiptVerifyServerUrl(_str)"},
{ "trigger": ":setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "setReceiptVerifyServerUrl(_str)"},
{ "trigger": "CCCardinalSplineBy\t", "contents": "CCCardinalSplineBy"},
{ "trigger": "CCCardinalSplineBy_create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineBy:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCTransitionSlideInB\t", "contents": "CCTransitionSlideInB"},
{ "trigger": "CCTransitionSlideInB_create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "CCTransitionSlideInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpawn\t", "contents": "CCSpawn"},
{ "trigger": "CCSpawn_createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSpawn_create\tCCSpawn:create(_CCArray)", "contents": "CCSpawn:create(_CCArray)"},
{ "trigger": ":create\tCCSpawn:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCComponentContainer\t", "contents": "CCComponentContainer"},
{ "trigger": "CCComponentContainer_isEmpty\tCCComponentContainer:isEmpty()", "contents": "CCComponentContainer:isEmpty()"},
{ "trigger": ":isEmpty\tCCComponentContainer:isEmpty()", "contents": "isEmpty()"},
{ "trigger": "CCComponentContainer_remove\tCCComponentContainer:remove(_str)", "contents": "CCComponentContainer:remove(_str)"},
{ "trigger": ":remove\tCCComponentContainer:remove(_str)", "contents": "remove(_str)"},
{ "trigger": "CCComponentContainer_get\tCCComponentContainer:get(_str)", "contents": "CCComponentContainer:get(_str)"},
{ "trigger": ":get\tCCComponentContainer:get(_str)", "contents": "get(_str)"},
{ "trigger": "CCComponentContainer_visit\tCCComponentContainer:visit(_num)", "contents": "CCComponentContainer:visit(_num)"},
{ "trigger": ":visit\tCCComponentContainer:visit(_num)", "contents": "visit(_num)"},
{ "trigger": "CCComponentContainer_add\tCCComponentContainer:add(_CCComponent)", "contents": "CCComponentContainer:add(_CCComponent)"},
{ "trigger": ":add\tCCComponentContainer:add(_CCComponent)", "contents": "add(_CCComponent)"},
{ "trigger": "CCComponentContainer_removeAll\tCCComponentContainer:removeAll()", "contents": "CCComponentContainer:removeAll()"},
{ "trigger": ":removeAll\tCCComponentContainer:removeAll()", "contents": "removeAll()"},
{ "trigger": "CCRipple3D\t", "contents": "CCRipple3D"},
{ "trigger": "CCRipple3D_create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "CCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": ":create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": "CCEaseBounceInOut\t", "contents": "CCEaseBounceInOut"},
{ "trigger": "CCEaseBounceInOut_create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "CCEaseBounceInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseElastic\t", "contents": "CCEaseElastic"},
{ "trigger": "CCEaseElastic_create\tCCEaseElastic:create(_CCActionInterval)", "contents": "CCEaseElastic:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElastic:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionSceneOriented\t", "contents": "CCTransitionSceneOriented"},
{ "trigger": "CCTransitionSceneOriented_create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "CCTransitionSceneOriented:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCJumpTo\t", "contents": "CCJumpTo"},
{ "trigger": "CCJumpTo_create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpTo:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCTintBy\t", "contents": "CCTintBy"},
{ "trigger": "CCTintBy_create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "CCTintBy:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "CCCallFuncN\t", "contents": "CCCallFuncN"},
{ "trigger": "CCCallFuncN_create\tCCCallFuncN:create(_listener)", "contents": "CCCallFuncN:create(_listener)"},
{ "trigger": ":create\tCCCallFuncN:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCActionInstant\t", "contents": "CCActionInstant"},
{ "trigger": "CCTMXTilesetInfo\t", "contents": "CCTMXTilesetInfo"},
{ "trigger": "CCTMXTilesetInfo_call\tCCTMXTilesetInfo:call()", "contents": "CCTMXTilesetInfo:call()"},
{ "trigger": ":call\tCCTMXTilesetInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXTilesetInfo_new\tCCTMXTilesetInfo:new()", "contents": "CCTMXTilesetInfo:new()"},
{ "trigger": ":new\tCCTMXTilesetInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXTilesetInfo_new_local\tCCTMXTilesetInfo:new_local()", "contents": "CCTMXTilesetInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXTilesetInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXTilesetInfo_delete\tCCTMXTilesetInfo:delete()", "contents": "CCTMXTilesetInfo:delete()"},
{ "trigger": ":delete\tCCTMXTilesetInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXTilesetInfo_rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "CCTMXTilesetInfo:rectForGID(_num)"},
{ "trigger": ":rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "rectForGID(_num)"},
{ "trigger": "CCEaseSineOut\t", "contents": "CCEaseSineOut"},
{ "trigger": "CCEaseSineOut_create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "CCEaseSineOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCObject\t", "contents": "CCObject"},
{ "trigger": "CCObject_update\tCCObject:update(_num)", "contents": "CCObject:update(_num)"},
{ "trigger": ":update\tCCObject:update(_num)", "contents": "update(_num)"},
{ "trigger": "CCObject_autorelease\tCCObject:autorelease()", "contents": "CCObject:autorelease()"},
{ "trigger": ":autorelease\tCCObject:autorelease()", "contents": "autorelease()"},
{ "trigger": "CCObject_retain\tCCObject:retain()", "contents": "CCObject:retain()"},
{ "trigger": ":retain\tCCObject:retain()", "contents": "retain()"},
{ "trigger": "CCObject_retainCount\tCCObject:retainCount()", "contents": "CCObject:retainCount()"},
{ "trigger": ":retainCount\tCCObject:retainCount()", "contents": "retainCount()"},
{ "trigger": "CCObject_release\tCCObject:release()", "contents": "CCObject:release()"},
{ "trigger": ":release\tCCObject:release()", "contents": "release()"},
{ "trigger": "CCObject_isSingleReference\tCCObject:isSingleReference()", "contents": "CCObject:isSingleReference()"},
{ "trigger": ":isSingleReference\tCCObject:isSingleReference()", "contents": "isSingleReference()"},
{ "trigger": "CCObject_copy\tCCObject:copy()", "contents": "CCObject:copy()"},
{ "trigger": ":copy\tCCObject:copy()", "contents": "copy()"},
{ "trigger": "RGBA\t", "contents": "RGBA"},
{ "trigger": "CCControlButton\t", "contents": "CCControlButton"},
{ "trigger": "CCControlButton_getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "CCControlButton:getLabelAnchorPoint()"},
{ "trigger": ":getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "getLabelAnchorPoint()"},
{ "trigger": "CCControlButton_getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "CCControlButton:getTitleBMFontForState(_num)"},
{ "trigger": ":getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "getTitleBMFontForState(_num)"},
{ "trigger": "CCControlButton_setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "CCControlButton:setTitleTTFForState(_str,_num)"},
{ "trigger": ":setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "setTitleTTFForState(_str,_num)"},
{ "trigger": "CCControlButton_getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "CCControlButton:getTitleLabel()"},
{ "trigger": ":getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "getTitleLabel()"},
{ "trigger": "CCControlButton_getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "CCControlButton:getTitleLabelForState(_num)"},
{ "trigger": ":getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "getTitleLabelForState(_num)"},
{ "trigger": "CCControlButton_doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "CCControlButton:doesAdjustBackgroundImage()"},
{ "trigger": ":doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "doesAdjustBackgroundImage()"},
{ "trigger": "CCControlButton_setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "CCControlButton:setTitleLabelForState(_CCNode,_num)"},
{ "trigger": ":setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "setTitleLabelForState(_CCNode,_num)"},
{ "trigger": "CCControlButton_setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "CCControlButton:setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": ":setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": "CCControlButton_setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "CCControlButton:setTitleTTFSizeForState(_num,_num)"},
{ "trigger": ":setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "setTitleTTFSizeForState(_num,_num)"},
{ "trigger": "CCControlButton_getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "CCControlButton:getTitleTTFSizeForState(_num)"},
{ "trigger": ":getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "getTitleTTFSizeForState(_num)"},
{ "trigger": "CCControlButton_getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "CCControlButton:getZoomOnTouchDown()"},
{ "trigger": ":getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "getZoomOnTouchDown()"},
{ "trigger": "CCControlButton_getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "CCControlButton:getTitleForState(_num)"},
{ "trigger": ":getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "getTitleForState(_num)"},
{ "trigger": "CCControlButton_getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "CCControlButton:getTitleTTFForState(_num)"},
{ "trigger": ":getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "getTitleTTFForState(_num)"},
{ "trigger": "CCControlButton_getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "CCControlButton:getBackgroundSpriteForState(_num)"},
{ "trigger": ":getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "getBackgroundSpriteForState(_num)"},
{ "trigger": "CCControlButton_getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "CCControlButton:getVerticalMargin()"},
{ "trigger": ":getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "getVerticalMargin()"},
{ "trigger": "CCControlButton_setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "CCControlButton:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCControlButton_setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "CCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": ":setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": "CCControlButton_getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "CCControlButton:getHorizontalOrigin()"},
{ "trigger": ":getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "getHorizontalOrigin()"},
{ "trigger": "CCControlButton_getCurrentTitle\tCCControlButton:getCurrentTitle()", "contents": "CCControlButton:getCurrentTitle()"},
{ "trigger": ":getCurrentTitle\tCCControlButton:getCurrentTitle()", "contents": "getCurrentTitle()"},
{ "trigger": "CCControlButton_setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "CCControlButton:setMargins(_num,_num)"},
{ "trigger": ":setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "setMargins(_num,_num)"},
{ "trigger": "CCControlButton_isPushed\tCCControlButton:isPushed()", "contents": "CCControlButton:isPushed()"},
{ "trigger": ":isPushed\tCCControlButton:isPushed()", "contents": "isPushed()"},
{ "trigger": "CCControlButton_setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "CCControlButton:setAdjustBackgroundImage(_boo)"},
{ "trigger": ":setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "setAdjustBackgroundImage(_boo)"},
{ "trigger": "CCControlButton_getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "CCControlButton:getBackgroundSprite()"},
{ "trigger": ":getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "getBackgroundSprite()"},
{ "trigger": "CCControlButton_create\tCCControlButton:create()", "contents": "CCControlButton:create()"},
{ "trigger": ":create\tCCControlButton:create()", "contents": "create()"},
{ "trigger": "CCControlButton_setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "CCControlButton:setTitleBMFontForState(_str,_num)"},
{ "trigger": ":setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "setTitleBMFontForState(_str,_num)"},
{ "trigger": "CCControlButton_setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "CCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": ":setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": "CCControlButton_setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "CCControlButton:setTitleForState(_CCString,_num)"},
{ "trigger": ":setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "setTitleForState(_CCString,_num)"},
{ "trigger": "CCControlButton_getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "CCControlButton:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCControlButton_getCurrentTitleColor\tCCControlButton:getCurrentTitleColor()", "contents": "CCControlButton:getCurrentTitleColor()"},
{ "trigger": ":getCurrentTitleColor\tCCControlButton:getCurrentTitleColor()", "contents": "getCurrentTitleColor()"},
{ "trigger": "CCControlButton_getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "CCControlButton:getTitleColorForState(_num)"},
{ "trigger": ":getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "getTitleColorForState(_num)"},
{ "trigger": "CCControl\t", "contents": "CCControl"},
{ "trigger": "CCControl_getState\tCCControl:getState()", "contents": "CCControl:getState()"},
{ "trigger": ":getState\tCCControl:getState()", "contents": "getState()"},
{ "trigger": "CCControl_setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "CCControl:setHighlighted(_boo)"},
{ "trigger": ":setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "setHighlighted(_boo)"},
{ "trigger": "CCControl_removeHandleOfControlEvent\tCCControl:removeHandleOfControlEvent(_num)", "contents": "CCControl:removeHandleOfControlEvent(_num)"},
{ "trigger": ":removeHandleOfControlEvent\tCCControl:removeHandleOfControlEvent(_num)", "contents": "removeHandleOfControlEvent(_num)"},
{ "trigger": "CCControl_isOpacityModifyRGB\tCCControl:isOpacityModifyRGB()", "contents": "CCControl:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCControl:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCControl_hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "CCControl:hasVisibleParents()"},
{ "trigger": ":hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "hasVisibleParents()"},
{ "trigger": "CCControl_setOpacityModifyRGB\tCCControl:setOpacityModifyRGB(_boo)", "contents": "CCControl:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCControl:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCControl_isEnabled\tCCControl:isEnabled()", "contents": "CCControl:isEnabled()"},
{ "trigger": ":isEnabled\tCCControl:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCControl_isHighlighted\tCCControl:isHighlighted()", "contents": "CCControl:isHighlighted()"},
{ "trigger": ":isHighlighted\tCCControl:isHighlighted()", "contents": "isHighlighted()"},
{ "trigger": "CCControl_addHandleOfControlEvent\tCCControl:addHandleOfControlEvent(_listener,_num)", "contents": "CCControl:addHandleOfControlEvent(_listener,_num)"},
{ "trigger": ":addHandleOfControlEvent\tCCControl:addHandleOfControlEvent(_listener,_num)", "contents": "addHandleOfControlEvent(_listener,_num)"},
{ "trigger": "CCControl_isSelected\tCCControl:isSelected()", "contents": "CCControl:isSelected()"},
{ "trigger": ":isSelected\tCCControl:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCControl_setEnabled\tCCControl:setEnabled(_boo)", "contents": "CCControl:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCControl:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCControl_sendActionsForControlEvents\tCCControl:sendActionsForControlEvents(_num)", "contents": "CCControl:sendActionsForControlEvents(_num)"},
{ "trigger": ":sendActionsForControlEvents\tCCControl:sendActionsForControlEvents(_num)", "contents": "sendActionsForControlEvents(_num)"},
{ "trigger": "CCControl_setSelected\tCCControl:setSelected(_boo)", "contents": "CCControl:setSelected(_boo)"},
{ "trigger": ":setSelected\tCCControl:setSelected(_boo)", "contents": "setSelected(_boo)"},
{ "trigger": "CCEaseBackOut\t", "contents": "CCEaseBackOut"},
{ "trigger": "CCEaseBackOut_create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "CCEaseBackOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCActionInterval\t", "contents": "CCActionInterval"},
{ "trigger": "CCActionInterval_copy\tCCActionInterval:copy()", "contents": "CCActionInterval:copy()"},
{ "trigger": ":copy\tCCActionInterval:copy()", "contents": "copy()"},
{ "trigger": "CCControlSwitch\t", "contents": "CCControlSwitch"},
{ "trigger": "CCControlSwitch_isOn\tCCControlSwitch:isOn()", "contents": "CCControlSwitch:isOn()"},
{ "trigger": ":isOn\tCCControlSwitch:isOn()", "contents": "isOn()"},
{ "trigger": "CCControlSwitch_setOn\tCCControlSwitch:setOn(_boo)", "contents": "CCControlSwitch:setOn(_boo)"},
{ "trigger": ":setOn\tCCControlSwitch:setOn(_boo)", "contents": "setOn(_boo)"},
{ "trigger": "CCControlSwitch_create\tCCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)", "contents": "CCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)"},
{ "trigger": ":create\tCCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)", "contents": "create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)"},
{ "trigger": "CCControlSwitch_hasMoved\tCCControlSwitch:hasMoved()", "contents": "CCControlSwitch:hasMoved()"},
{ "trigger": ":hasMoved\tCCControlSwitch:hasMoved()", "contents": "hasMoved()"},
{ "trigger": "CCFadeOut\t", "contents": "CCFadeOut"},
{ "trigger": "CCFadeOut_create\tCCFadeOut:create(_num)", "contents": "CCFadeOut:create(_num)"},
{ "trigger": ":create\tCCFadeOut:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCEaseExponentialOut\t", "contents": "CCEaseExponentialOut"},
{ "trigger": "CCEaseExponentialOut_create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "CCEaseExponentialOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleSystemQuad\t", "contents": "CCParticleSystemQuad"},
{ "trigger": "CCParticleSystemQuad_call\tCCParticleSystemQuad:call()", "contents": "CCParticleSystemQuad:call()"},
{ "trigger": ":call\tCCParticleSystemQuad:call()", "contents": "call()"},
{ "trigger": "CCParticleSystemQuad_createWithTotalParticles\tCCParticleSystemQuad:createWithTotalParticles(_num)", "contents": "CCParticleSystemQuad:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSystemQuad:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_initIndices\tCCParticleSystemQuad:initIndices()", "contents": "CCParticleSystemQuad:initIndices()"},
{ "trigger": ":initIndices\tCCParticleSystemQuad:initIndices()", "contents": "initIndices()"},
{ "trigger": "CCParticleSystemQuad_setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)", "contents": "CCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)"},
{ "trigger": ":setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)", "contents": "setTextureWithRect(_CCTexture2D,_CCRect)"},
{ "trigger": "CCParticleSystemQuad_updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "CCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": ":updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_create\tCCParticleSystemQuad:create()", "contents": "CCParticleSystemQuad:create()"},
{ "trigger": ":create\tCCParticleSystemQuad:create()", "contents": "create()"},
{ "trigger": "CCParticleSystemQuad_setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "CCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCParticleSystemQuad_initWithTotalParticles\tCCParticleSystemQuad:initWithTotalParticles(_num)", "contents": "CCParticleSystemQuad:initWithTotalParticles(_num)"},
{ "trigger": ":initWithTotalParticles\tCCParticleSystemQuad:initWithTotalParticles(_num)", "contents": "initWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "CCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)"},
{ "trigger": ":setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "setBatchNode(_CCParticleBatchNode)"},
{ "trigger": "CCParticleSystemQuad_new\tCCParticleSystemQuad:new()", "contents": "CCParticleSystemQuad:new()"},
{ "trigger": ":new\tCCParticleSystemQuad:new()", "contents": "new()"},
{ "trigger": "CCParticleSystemQuad_setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "CCParticleSystemQuad:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleSystemQuad_setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "CCParticleSystemQuad:setTotalParticles(_num)"},
{ "trigger": ":setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "setTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_new_local\tCCParticleSystemQuad:new_local()", "contents": "CCParticleSystemQuad:new_local()"},
{ "trigger": ":new_local\tCCParticleSystemQuad:new_local()", "contents": "new_local()"},
{ "trigger": "CCParticleSystemQuad_delete\tCCParticleSystemQuad:delete()", "contents": "CCParticleSystemQuad:delete()"},
{ "trigger": ":delete\tCCParticleSystemQuad:delete()", "contents": "delete()"},
{ "trigger": "CCParticleSystemQuad_initTexCoordsWithRect\tCCParticleSystemQuad:initTexCoordsWithRect(_CCRect)", "contents": "CCParticleSystemQuad:initTexCoordsWithRect(_CCRect)"},
{ "trigger": ":initTexCoordsWithRect\tCCParticleSystemQuad:initTexCoordsWithRect(_CCRect)", "contents": "initTexCoordsWithRect(_CCRect)"},
{ "trigger": "CCMenu\t", "contents": "CCMenu"},
{ "trigger": "CCMenu_createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "CCMenu:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCMenu_alignItemsInRowsWithArray\tCCMenu:alignItemsInRowsWithArray(_CCArray)", "contents": "CCMenu:alignItemsInRowsWithArray(_CCArray)"},
{ "trigger": ":alignItemsInRowsWithArray\tCCMenu:alignItemsInRowsWithArray(_CCArray)", "contents": "alignItemsInRowsWithArray(_CCArray)"},
{ "trigger": "CCMenu_isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "CCMenu:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenu_createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "CCMenu:createWithItem(_CCMenuItem)"},
{ "trigger": ":createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "createWithItem(_CCMenuItem)"},
{ "trigger": "CCMenu_alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "CCMenu:alignItemsHorizontally()"},
{ "trigger": ":alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "alignItemsHorizontally()"},
{ "trigger": "CCMenu_alignItemsInColumnsWithArray\tCCMenu:alignItemsInColumnsWithArray(_CCArray)", "contents": "CCMenu:alignItemsInColumnsWithArray(_CCArray)"},
{ "trigger": ":alignItemsInColumnsWithArray\tCCMenu:alignItemsInColumnsWithArray(_CCArray)", "contents": "alignItemsInColumnsWithArray(_CCArray)"},
{ "trigger": "CCMenu_create\tCCMenu:create()", "contents": "CCMenu:create()"},
{ "trigger": ":create\tCCMenu:create()", "contents": "create()"},
{ "trigger": "CCMenu_setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "CCMenu:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenu_isEnabled\tCCMenu:isEnabled()", "contents": "CCMenu:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenu:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenu_alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "CCMenu:alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": ":alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": "CCMenu_setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "CCMenu:setHandlerPriority(_num)"},
{ "trigger": ":setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "setHandlerPriority(_num)"},
{ "trigger": "CCMenu_alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "CCMenu:alignItemsVertically()"},
{ "trigger": ":alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "alignItemsVertically()"},
{ "trigger": "CCMenu_setEnabled\tCCMenu:setEnabled(_boo)", "contents": "CCMenu:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenu:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenu_alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "CCMenu:alignItemsVerticallyWithPadding(_num)"},
{ "trigger": ":alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "alignItemsVerticallyWithPadding(_num)"},
{ "trigger": "CCDictionary\t", "contents": "CCDictionary"},
{ "trigger": "CCDictionary_writeToFile\tCCDictionary:writeToFile(_str)", "contents": "CCDictionary:writeToFile(_str)"},
{ "trigger": ":writeToFile\tCCDictionary:writeToFile(_str)", "contents": "writeToFile(_str)"},
{ "trigger": "CCDictionary_count\tCCDictionary:count()", "contents": "CCDictionary:count()"},
{ "trigger": ":count\tCCDictionary:count()", "contents": "count()"},
{ "trigger": "CCDictionary_removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "CCDictionary:removeObjectsForKeys(_CCArray)"},
{ "trigger": ":removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "removeObjectsForKeys(_CCArray)"},
{ "trigger": "CCDictionary_removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "CCDictionary:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCDictionary_objectForKey\tCCDictionary:objectForKey(_num)", "contents": "CCDictionary:objectForKey(_num)"},
{ "trigger": ":objectForKey\tCCDictionary:objectForKey(_num)", "contents": "objectForKey(_num)"},
{ "trigger": "CCDictionary_allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "CCDictionary:allKeysForObject(_CCObject)"},
{ "trigger": ":allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "allKeysForObject(_CCObject)"},
{ "trigger": "CCDictionary_create\tCCDictionary:create()", "contents": "CCDictionary:create()"},
{ "trigger": ":create\tCCDictionary:create()", "contents": "create()"},
{ "trigger": "CCDictionary_createWithContentsOfFileThreadSafe\tCCDictionary:createWithContentsOfFileThreadSafe(_str)", "contents": "CCDictionary:createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": ":createWithContentsOfFileThreadSafe\tCCDictionary:createWithContentsOfFileThreadSafe(_str)", "contents": "createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": "CCDictionary_createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "CCDictionary:createWithDictionary(_CCDictionary)"},
{ "trigger": ":createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "createWithDictionary(_CCDictionary)"},
{ "trigger": "CCDictionary_allKeys\tCCDictionary:allKeys()", "contents": "CCDictionary:allKeys()"},
{ "trigger": ":allKeys\tCCDictionary:allKeys()", "contents": "allKeys()"},
{ "trigger": "CCDictionary_removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "CCDictionary:removeObjectForKey(_num)"},
{ "trigger": ":removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "removeObjectForKey(_num)"},
{ "trigger": "CCDictionary_setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "CCDictionary:setObject(_CCObject,_num)"},
{ "trigger": ":setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "setObject(_CCObject,_num)"},
{ "trigger": "CCDictionary_valueForKey\tCCDictionary:valueForKey(_num)", "contents": "CCDictionary:valueForKey(_num)"},
{ "trigger": ":valueForKey\tCCDictionary:valueForKey(_num)", "contents": "valueForKey(_num)"},
{ "trigger": "CCDictionary_randomObject\tCCDictionary:randomObject()", "contents": "CCDictionary:randomObject()"},
{ "trigger": ":randomObject\tCCDictionary:randomObject()", "contents": "randomObject()"},
{ "trigger": "CCDictionary_createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "CCDictionary:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCRepeatForever\t", "contents": "CCRepeatForever"},
{ "trigger": "CCRepeatForever_create\tCCRepeatForever:create(_CCActionInterval)", "contents": "CCRepeatForever:create(_CCActionInterval)"},
{ "trigger": ":create\tCCRepeatForever:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFlipAngular\t", "contents": "CCTransitionFlipAngular"},
{ "trigger": "CCTransitionFlipAngular_create\tCCTransitionFlipAngular:create(_num,_CCScene)", "contents": "CCTransitionFlipAngular:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipAngular:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCRotateTo\t", "contents": "CCRotateTo"},
{ "trigger": "CCRotateTo_create\tCCRotateTo:create(_num,_num)", "contents": "CCRotateTo:create(_num,_num)"},
{ "trigger": ":create\tCCRotateTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCPhysicsShape\t", "contents": "CCPhysicsShape"},
{ "trigger": "CCPhysicsShape_setCollisionType\tCCPhysicsShape:setCollisionType(_num)", "contents": "CCPhysicsShape:setCollisionType(_num)"},
{ "trigger": ":setCollisionType\tCCPhysicsShape:setCollisionType(_num)", "contents": "setCollisionType(_num)"},
{ "trigger": "CCPhysicsShape_getCollisionGroup\tCCPhysicsShape:getCollisionGroup()", "contents": "CCPhysicsShape:getCollisionGroup()"},
{ "trigger": ":getCollisionGroup\tCCPhysicsShape:getCollisionGroup()", "contents": "getCollisionGroup()"},
{ "trigger": "CCPhysicsShape_setCollisionGroup\tCCPhysicsShape:setCollisionGroup(_num)", "contents": "CCPhysicsShape:setCollisionGroup(_num)"},
{ "trigger": ":setCollisionGroup\tCCPhysicsShape:setCollisionGroup(_num)", "contents": "setCollisionGroup(_num)"},
{ "trigger": "CCPhysicsShape_isSensor\tCCPhysicsShape:isSensor()", "contents": "CCPhysicsShape:isSensor()"},
{ "trigger": ":isSensor\tCCPhysicsShape:isSensor()", "contents": "isSensor()"},
{ "trigger": "CCPhysicsShape_setElasticity\tCCPhysicsShape:setElasticity(_num)", "contents": "CCPhysicsShape:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsShape:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsShape_setCollisionLayers\tCCPhysicsShape:setCollisionLayers(_num)", "contents": "CCPhysicsShape:setCollisionLayers(_num)"},
{ "trigger": ":setCollisionLayers\tCCPhysicsShape:setCollisionLayers(_num)", "contents": "setCollisionLayers(_num)"},
{ "trigger": "CCPhysicsShape_setIsSensor\tCCPhysicsShape:setIsSensor(_boo)", "contents": "CCPhysicsShape:setIsSensor(_boo)"},
{ "trigger": ":setIsSensor\tCCPhysicsShape:setIsSensor(_boo)", "contents": "setIsSensor(_boo)"},
{ "trigger": "CCPhysicsShape_getCollisionLayers\tCCPhysicsShape:getCollisionLayers()", "contents": "CCPhysicsShape:getCollisionLayers()"},
{ "trigger": ":getCollisionLayers\tCCPhysicsShape:getCollisionLayers()", "contents": "getCollisionLayers()"},
{ "trigger": "CCPhysicsShape_getCollisionType\tCCPhysicsShape:getCollisionType()", "contents": "CCPhysicsShape:getCollisionType()"},
{ "trigger": ":getCollisionType\tCCPhysicsShape:getCollisionType()", "contents": "getCollisionType()"},
{ "trigger": "CCPhysicsShape_getFriction\tCCPhysicsShape:getFriction()", "contents": "CCPhysicsShape:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsShape:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsShape_getElasticity\tCCPhysicsShape:getElasticity()", "contents": "CCPhysicsShape:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsShape:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsShape_setFriction\tCCPhysicsShape:setFriction(_num)", "contents": "CCPhysicsShape:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsShape:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCTransitionSplitRows\t", "contents": "CCTransitionSplitRows"},
{ "trigger": "CCTransitionSplitRows_create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "CCTransitionSplitRows:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLayerGradient\t", "contents": "CCLayerGradient"},
{ "trigger": "CCLayerGradient_getEndColor\tCCLayerGradient:getEndColor()", "contents": "CCLayerGradient:getEndColor()"},
{ "trigger": ":getEndColor\tCCLayerGradient:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCLayerGradient_getVector\tCCLayerGradient:getVector()", "contents": "CCLayerGradient:getVector()"},
{ "trigger": ":getVector\tCCLayerGradient:getVector()", "contents": "getVector()"},
{ "trigger": "CCLayerGradient_getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "CCLayerGradient:getEndOpacity()"},
{ "trigger": ":getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "getEndOpacity()"},
{ "trigger": "CCLayerGradient_isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "CCLayerGradient:isCompressedInterpolation()"},
{ "trigger": ":isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "isCompressedInterpolation()"},
{ "trigger": "CCLayerGradient_setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "CCLayerGradient:setStartColor(_ccColor3B)"},
{ "trigger": ":setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "setStartColor(_ccColor3B)"},
{ "trigger": "CCLayerGradient_create\tCCLayerGradient:create()", "contents": "CCLayerGradient:create()"},
{ "trigger": ":create\tCCLayerGradient:create()", "contents": "create()"},
{ "trigger": "CCLayerGradient_setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "CCLayerGradient:setVector(_CCPoint)"},
{ "trigger": ":setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "setVector(_CCPoint)"},
{ "trigger": "CCLayerGradient_getStartColor\tCCLayerGradient:getStartColor()", "contents": "CCLayerGradient:getStartColor()"},
{ "trigger": ":getStartColor\tCCLayerGradient:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCLayerGradient_getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "CCLayerGradient:getStartOpacity()"},
{ "trigger": ":getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "getStartOpacity()"},
{ "trigger": "CCLayerGradient_setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "CCLayerGradient:setCompressedInterpolation(_boo)"},
{ "trigger": ":setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "setCompressedInterpolation(_boo)"},
{ "trigger": "CCLayerGradient_setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "CCLayerGradient:setStartOpacity(_num)"},
{ "trigger": ":setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "setStartOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "CCLayerGradient:setEndOpacity(_num)"},
{ "trigger": ":setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "setEndOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "CCLayerGradient:setEndColor(_ccColor3B)"},
{ "trigger": ":setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "setEndColor(_ccColor3B)"},
{ "trigger": "CCSkewTo\t", "contents": "CCSkewTo"},
{ "trigger": "CCSkewTo_create\tCCSkewTo:create(_num,_num,_num)", "contents": "CCSkewTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCProfilingTimer\t", "contents": "CCProfilingTimer"},
{ "trigger": "CCProfilingTimer_getStartTime\tCCProfilingTimer:getStartTime()", "contents": "CCProfilingTimer:getStartTime()"},
{ "trigger": ":getStartTime\tCCProfilingTimer:getStartTime()", "contents": "getStartTime()"},
{ "trigger": "CCProfilingTimer_getAverageTime\tCCProfilingTimer:getAverageTime()", "contents": "CCProfilingTimer:getAverageTime()"},
{ "trigger": ":getAverageTime\tCCProfilingTimer:getAverageTime()", "contents": "getAverageTime()"},
{ "trigger": "CCProfilingTimer_reset\tCCProfilingTimer:reset()", "contents": "CCProfilingTimer:reset()"},
{ "trigger": ":reset\tCCProfilingTimer:reset()", "contents": "reset()"},
{ "trigger": "CCProfilingTimer_setAverageTime\tCCProfilingTimer:setAverageTime(_num)", "contents": "CCProfilingTimer:setAverageTime(_num)"},
{ "trigger": ":setAverageTime\tCCProfilingTimer:setAverageTime(_num)", "contents": "setAverageTime(_num)"},
{ "trigger": "CCParticleFireworks\t", "contents": "CCParticleFireworks"},
{ "trigger": "CCParticleFireworks_createWithTotalParticles\tCCParticleFireworks:createWithTotalParticles(_num)", "contents": "CCParticleFireworks:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFireworks:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFireworks_create\tCCParticleFireworks:create()", "contents": "CCParticleFireworks:create()"},
{ "trigger": ":create\tCCParticleFireworks:create()", "contents": "create()"},
{ "trigger": "CCBAnimationManager\t", "contents": "CCBAnimationManager"},
{ "trigger": "CCBAnimationManager_call\tCCBAnimationManager:call()", "contents": "CCBAnimationManager:call()"},
{ "trigger": ":call\tCCBAnimationManager:call()", "contents": "call()"},
{ "trigger": "CCBAnimationManager_getDocumentCallbackNodes\tCCBAnimationManager:getDocumentCallbackNodes()", "contents": "CCBAnimationManager:getDocumentCallbackNodes()"},
{ "trigger": ":getDocumentCallbackNodes\tCCBAnimationManager:getDocumentCallbackNodes()", "contents": "getDocumentCallbackNodes()"},
{ "trigger": "CCBAnimationManager_getAutoPlaySequenceId\tCCBAnimationManager:getAutoPlaySequenceId()", "contents": "CCBAnimationManager:getAutoPlaySequenceId()"},
{ "trigger": ":getAutoPlaySequenceId\tCCBAnimationManager:getAutoPlaySequenceId()", "contents": "getAutoPlaySequenceId()"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceNamed\tCCBAnimationManager:runAnimationsForSequenceNamed(_str)", "contents": "CCBAnimationManager:runAnimationsForSequenceNamed(_str)"},
{ "trigger": ":runAnimationsForSequenceNamed\tCCBAnimationManager:runAnimationsForSequenceNamed(_str)", "contents": "runAnimationsForSequenceNamed(_str)"},
{ "trigger": "CCBAnimationManager_getKeyframeCallbacks\tCCBAnimationManager:getKeyframeCallbacks()", "contents": "CCBAnimationManager:getKeyframeCallbacks()"},
{ "trigger": ":getKeyframeCallbacks\tCCBAnimationManager:getKeyframeCallbacks()", "contents": "getKeyframeCallbacks()"},
{ "trigger": "CCBAnimationManager_setRootNode\tCCBAnimationManager:setRootNode(_CCNode)", "contents": "CCBAnimationManager:setRootNode(_CCNode)"},
{ "trigger": ":setRootNode\tCCBAnimationManager:setRootNode(_CCNode)", "contents": "setRootNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_debug\tCCBAnimationManager:debug()", "contents": "CCBAnimationManager:debug()"},
{ "trigger": ":debug\tCCBAnimationManager:debug()", "contents": "debug()"},
{ "trigger": "CCBAnimationManager_getRootContainerSize\tCCBAnimationManager:getRootContainerSize()", "contents": "CCBAnimationManager:getRootContainerSize()"},
{ "trigger": ":getRootContainerSize\tCCBAnimationManager:getRootContainerSize()", "contents": "getRootContainerSize()"},
{ "trigger": "CCBAnimationManager_getLastCompletedSequenceName\tCCBAnimationManager:getLastCompletedSequenceName()", "contents": "CCBAnimationManager:getLastCompletedSequenceName()"},
{ "trigger": ":getLastCompletedSequenceName\tCCBAnimationManager:getLastCompletedSequenceName()", "contents": "getLastCompletedSequenceName()"},
{ "trigger": "CCBAnimationManager_getRootNode\tCCBAnimationManager:getRootNode()", "contents": "CCBAnimationManager:getRootNode()"},
{ "trigger": ":getRootNode\tCCBAnimationManager:getRootNode()", "contents": "getRootNode()"},
{ "trigger": "CCBAnimationManager_getDocumentOutletNames\tCCBAnimationManager:getDocumentOutletNames()", "contents": "CCBAnimationManager:getDocumentOutletNames()"},
{ "trigger": ":getDocumentOutletNames\tCCBAnimationManager:getDocumentOutletNames()", "contents": "getDocumentOutletNames()"},
{ "trigger": "CCBAnimationManager_getContainerSize\tCCBAnimationManager:getContainerSize(_CCNode)", "contents": "CCBAnimationManager:getContainerSize(_CCNode)"},
{ "trigger": ":getContainerSize\tCCBAnimationManager:getContainerSize(_CCNode)", "contents": "getContainerSize(_CCNode)"},
{ "trigger": "CCBAnimationManager_setDocumentControllerName\tCCBAnimationManager:setDocumentControllerName(_cpp)", "contents": "CCBAnimationManager:setDocumentControllerName(_cpp)"},
{ "trigger": ":setDocumentControllerName\tCCBAnimationManager:setDocumentControllerName(_cpp)", "contents": "setDocumentControllerName(_cpp)"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceNamedTweenDuration\tCCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)", "contents": "CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)"},
{ "trigger": ":runAnimationsForSequenceNamedTweenDuration\tCCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)", "contents": "runAnimationsForSequenceNamedTweenDuration(_str,_num)"},
{ "trigger": "CCBAnimationManager_delete\tCCBAnimationManager:delete()", "contents": "CCBAnimationManager:delete()"},
{ "trigger": ":delete\tCCBAnimationManager:delete()", "contents": "delete()"},
{ "trigger": "CCBAnimationManager_setAutoPlaySequenceId\tCCBAnimationManager:setAutoPlaySequenceId(_num)", "contents": "CCBAnimationManager:setAutoPlaySequenceId(_num)"},
{ "trigger": ":setAutoPlaySequenceId\tCCBAnimationManager:setAutoPlaySequenceId(_num)", "contents": "setAutoPlaySequenceId(_num)"},
{ "trigger": "CCBAnimationManager_setSequences\tCCBAnimationManager:setSequences(_CCArray)", "contents": "CCBAnimationManager:setSequences(_CCArray)"},
{ "trigger": ":setSequences\tCCBAnimationManager:setSequences(_CCArray)", "contents": "setSequences(_CCArray)"},
{ "trigger": "CCBAnimationManager_addDocumentCallbackNode\tCCBAnimationManager:addDocumentCallbackNode(_CCNode)", "contents": "CCBAnimationManager:addDocumentCallbackNode(_CCNode)"},
{ "trigger": ":addDocumentCallbackNode\tCCBAnimationManager:addDocumentCallbackNode(_CCNode)", "contents": "addDocumentCallbackNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_addDocumentOutletName\tCCBAnimationManager:addDocumentOutletName(_cpp)", "contents": "CCBAnimationManager:addDocumentOutletName(_cpp)"},
{ "trigger": ":addDocumentOutletName\tCCBAnimationManager:addDocumentOutletName(_cpp)", "contents": "addDocumentOutletName(_cpp)"},
{ "trigger": "CCBAnimationManager_getDocumentControllerName\tCCBAnimationManager:getDocumentControllerName()", "contents": "CCBAnimationManager:getDocumentControllerName()"},
{ "trigger": ":getDocumentControllerName\tCCBAnimationManager:getDocumentControllerName()", "contents": "getDocumentControllerName()"},
{ "trigger": "CCBAnimationManager_setBaseValue\tCCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)", "contents": "CCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)"},
{ "trigger": ":setBaseValue\tCCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)", "contents": "setBaseValue(_CCObject,_CCNode,_str)"},
{ "trigger": "CCBAnimationManager_getRunningSequenceName\tCCBAnimationManager:getRunningSequenceName()", "contents": "CCBAnimationManager:getRunningSequenceName()"},
{ "trigger": ":getRunningSequenceName\tCCBAnimationManager:getRunningSequenceName()", "contents": "getRunningSequenceName()"},
{ "trigger": "CCBAnimationManager_addDocumentOutletNode\tCCBAnimationManager:addDocumentOutletNode(_CCNode)", "contents": "CCBAnimationManager:addDocumentOutletNode(_CCNode)"},
{ "trigger": ":addDocumentOutletNode\tCCBAnimationManager:addDocumentOutletNode(_CCNode)", "contents": "addDocumentOutletNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_getDocumentCallbackNames\tCCBAnimationManager:getDocumentCallbackNames()", "contents": "CCBAnimationManager:getDocumentCallbackNames()"},
{ "trigger": ":getDocumentCallbackNames\tCCBAnimationManager:getDocumentCallbackNames()", "contents": "getDocumentCallbackNames()"},
{ "trigger": "CCBAnimationManager_addDocumentCallbackName\tCCBAnimationManager:addDocumentCallbackName(_cpp)", "contents": "CCBAnimationManager:addDocumentCallbackName(_cpp)"},
{ "trigger": ":addDocumentCallbackName\tCCBAnimationManager:addDocumentCallbackName(_cpp)", "contents": "addDocumentCallbackName(_cpp)"},
{ "trigger": "CCBAnimationManager_init\tCCBAnimationManager:init()", "contents": "CCBAnimationManager:init()"},
{ "trigger": ":init\tCCBAnimationManager:init()", "contents": "init()"},
{ "trigger": "CCBAnimationManager_setRootContainerSize\tCCBAnimationManager:setRootContainerSize(_const_CCSize)", "contents": "CCBAnimationManager:setRootContainerSize(_const_CCSize)"},
{ "trigger": ":setRootContainerSize\tCCBAnimationManager:setRootContainerSize(_const_CCSize)", "contents": "setRootContainerSize(_const_CCSize)"},
{ "trigger": "CCBAnimationManager_getDocumentOutletNodes\tCCBAnimationManager:getDocumentOutletNodes()", "contents": "CCBAnimationManager:getDocumentOutletNodes()"},
{ "trigger": ":getDocumentOutletNodes\tCCBAnimationManager:getDocumentOutletNodes()", "contents": "getDocumentOutletNodes()"},
{ "trigger": "CCBAnimationManager_new\tCCBAnimationManager:new()", "contents": "CCBAnimationManager:new()"},
{ "trigger": ":new\tCCBAnimationManager:new()", "contents": "new()"},
{ "trigger": "CCBAnimationManager_addNode\tCCBAnimationManager:addNode(_CCNode,_CCDictionary)", "contents": "CCBAnimationManager:addNode(_CCNode,_CCDictionary)"},
{ "trigger": ":addNode\tCCBAnimationManager:addNode(_CCNode,_CCDictionary)", "contents": "addNode(_CCNode,_CCDictionary)"},
{ "trigger": "CCBAnimationManager_getSequences\tCCBAnimationManager:getSequences()", "contents": "CCBAnimationManager:getSequences()"},
{ "trigger": ":getSequences\tCCBAnimationManager:getSequences()", "contents": "getSequences()"},
{ "trigger": "CCBAnimationManager_setCallFuncForLuaCallbackNamed\tCCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)", "contents": "CCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)"},
{ "trigger": ":setCallFuncForLuaCallbackNamed\tCCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)", "contents": "setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)"},
{ "trigger": "CCBAnimationManager_new_local\tCCBAnimationManager:new_local()", "contents": "CCBAnimationManager:new_local()"},
{ "trigger": ":new_local\tCCBAnimationManager:new_local()", "contents": "new_local()"},
{ "trigger": "CCBAnimationManager_moveAnimationsFromNode\tCCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)", "contents": "CCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)"},
{ "trigger": ":moveAnimationsFromNode\tCCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)", "contents": "moveAnimationsFromNode(_CCNode,_CCNode)"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceIdTweenDuration\tCCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)", "contents": "CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)"},
{ "trigger": ":runAnimationsForSequenceIdTweenDuration\tCCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)", "contents": "runAnimationsForSequenceIdTweenDuration(_num,_num)"},
{ "trigger": "CCShow\t", "contents": "CCShow"},
{ "trigger": "CCShow_create\tCCShow:create()", "contents": "CCShow:create()"},
{ "trigger": ":create\tCCShow:create()", "contents": "create()"},
{ "trigger": "CCSkewBy\t", "contents": "CCSkewBy"},
{ "trigger": "CCSkewBy_create\tCCSkewBy:create(_num,_num,_num)", "contents": "CCSkewBy:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewBy:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCPointArray\t", "contents": "CCPointArray"},
{ "trigger": "CCPointArray_replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "CCPointArray:replace(_CCPoint,_num)"},
{ "trigger": ":replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "replace(_CCPoint,_num)"},
{ "trigger": "CCPointArray_fetchPoints\tCCPointArray:fetchPoints()", "contents": "CCPointArray:fetchPoints()"},
{ "trigger": ":fetchPoints\tCCPointArray:fetchPoints()", "contents": "fetchPoints()"},
{ "trigger": "CCPointArray_reverse\tCCPointArray:reverse()", "contents": "CCPointArray:reverse()"},
{ "trigger": ":reverse\tCCPointArray:reverse()", "contents": "reverse()"},
{ "trigger": "CCPointArray_count\tCCPointArray:count()", "contents": "CCPointArray:count()"},
{ "trigger": ":count\tCCPointArray:count()", "contents": "count()"},
{ "trigger": "CCPointArray_remove\tCCPointArray:remove(_num)", "contents": "CCPointArray:remove(_num)"},
{ "trigger": ":remove\tCCPointArray:remove(_num)", "contents": "remove(_num)"},
{ "trigger": "CCPointArray_get\tCCPointArray:get(_num)", "contents": "CCPointArray:get(_num)"},
{ "trigger": ":get\tCCPointArray:get(_num)", "contents": "get(_num)"},
{ "trigger": "CCPointArray_reverseInline\tCCPointArray:reverseInline()", "contents": "CCPointArray:reverseInline()"},
{ "trigger": ":reverseInline\tCCPointArray:reverseInline()", "contents": "reverseInline()"},
{ "trigger": "CCPointArray_insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "CCPointArray:insert(_CCPoint,_num)"},
{ "trigger": ":insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "insert(_CCPoint,_num)"},
{ "trigger": "CCPointArray_add\tCCPointArray:add(_CCPoint)", "contents": "CCPointArray:add(_CCPoint)"},
{ "trigger": ":add\tCCPointArray:add(_CCPoint)", "contents": "add(_CCPoint)"},
{ "trigger": "CCPointArray_create\tCCPointArray:create(_num)", "contents": "CCPointArray:create(_num)"},
{ "trigger": ":create\tCCPointArray:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCPointArray_removeAll\tCCPointArray:removeAll()", "contents": "CCPointArray:removeAll()"},
{ "trigger": ":removeAll\tCCPointArray:removeAll()", "contents": "removeAll()"},
{ "trigger": "CCRemoveSelf\t", "contents": "CCRemoveSelf"},
{ "trigger": "CCRemoveSelf_create\tCCRemoveSelf:create(_boo)", "contents": "CCRemoveSelf:create(_boo)"},
{ "trigger": ":create\tCCRemoveSelf:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCFadeOutBLTiles\t", "contents": "CCFadeOutBLTiles"},
{ "trigger": "CCFadeOutBLTiles_create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "CCFadeOutBLTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionProgressRadialCCW\t", "contents": "CCTransitionProgressRadialCCW"},
{ "trigger": "CCTransitionProgressRadialCCW_create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCParticleFire\t", "contents": "CCParticleFire"},
{ "trigger": "CCParticleFire_createWithTotalParticles\tCCParticleFire:createWithTotalParticles(_num)", "contents": "CCParticleFire:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFire:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFire_create\tCCParticleFire:create()", "contents": "CCParticleFire:create()"},
{ "trigger": ":create\tCCParticleFire:create()", "contents": "create()"},
{ "trigger": "CCHide\t", "contents": "CCHide"},
{ "trigger": "CCHide_create\tCCHide:create()", "contents": "CCHide:create()"},
{ "trigger": ":create\tCCHide:create()", "contents": "create()"},
{ "trigger": "CCFadeOutDownTiles\t", "contents": "CCFadeOutDownTiles"},
{ "trigger": "CCFadeOutDownTiles_create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "CCFadeOutDownTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCScaleTo\t", "contents": "CCScaleTo"},
{ "trigger": "CCScaleTo_create\tCCScaleTo:create(_num,_num)", "contents": "CCScaleTo:create(_num,_num)"},
{ "trigger": ":create\tCCScaleTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCGrid3DAction\t", "contents": "CCGrid3DAction"},
{ "trigger": "CCScheduler\t", "contents": "CCScheduler"},
{ "trigger": "CCScheduler_resumeTarget\tCCScheduler:resumeTarget(_CCObject)", "contents": "CCScheduler:resumeTarget(_CCObject)"},
{ "trigger": ":resumeTarget\tCCScheduler:resumeTarget(_CCObject)", "contents": "resumeTarget(_CCObject)"},
{ "trigger": "CCScheduler_scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "CCScheduler:scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": ":scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": "CCScheduler_unscheduleAllWithMinPriority\tCCScheduler:unscheduleAllWithMinPriority(_num)", "contents": "CCScheduler:unscheduleAllWithMinPriority(_num)"},
{ "trigger": ":unscheduleAllWithMinPriority\tCCScheduler:unscheduleAllWithMinPriority(_num)", "contents": "unscheduleAllWithMinPriority(_num)"},
{ "trigger": "CCScheduler_scheduleUpdateForTarget\tCCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)", "contents": "CCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)"},
{ "trigger": ":scheduleUpdateForTarget\tCCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)", "contents": "scheduleUpdateForTarget(_CCObject,_num,_boo)"},
{ "trigger": "CCScheduler_getTimeScale\tCCScheduler:getTimeScale()", "contents": "CCScheduler:getTimeScale()"},
{ "trigger": ":getTimeScale\tCCScheduler:getTimeScale()", "contents": "getTimeScale()"},
{ "trigger": "CCScheduler_unscheduleUpdateForTarget\tCCScheduler:unscheduleUpdateForTarget(_CCObject)", "contents": "CCScheduler:unscheduleUpdateForTarget(_CCObject)"},
{ "trigger": ":unscheduleUpdateForTarget\tCCScheduler:unscheduleUpdateForTarget(_CCObject)", "contents": "unscheduleUpdateForTarget(_CCObject)"},
{ "trigger": "CCScheduler_isTargetPaused\tCCScheduler:isTargetPaused(_CCObject)", "contents": "CCScheduler:isTargetPaused(_CCObject)"},
{ "trigger": ":isTargetPaused\tCCScheduler:isTargetPaused(_CCObject)", "contents": "isTargetPaused(_CCObject)"},
{ "trigger": "CCScheduler_pauseTarget\tCCScheduler:pauseTarget(_CCObject)", "contents": "CCScheduler:pauseTarget(_CCObject)"},
{ "trigger": ":pauseTarget\tCCScheduler:pauseTarget(_CCObject)", "contents": "pauseTarget(_CCObject)"},
{ "trigger": "CCScheduler_unscheduleAll\tCCScheduler:unscheduleAll()", "contents": "CCScheduler:unscheduleAll()"},
{ "trigger": ":unscheduleAll\tCCScheduler:unscheduleAll()", "contents": "unscheduleAll()"},
{ "trigger": "CCScheduler_unscheduleAllForTarget\tCCScheduler:unscheduleAllForTarget(_CCObject)", "contents": "CCScheduler:unscheduleAllForTarget(_CCObject)"},
{ "trigger": ":unscheduleAllForTarget\tCCScheduler:unscheduleAllForTarget(_CCObject)", "contents": "unscheduleAllForTarget(_CCObject)"},
{ "trigger": "CCScheduler_unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "CCScheduler:unscheduleScriptEntry(_num)"},
{ "trigger": ":unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "unscheduleScriptEntry(_num)"},
{ "trigger": "CCScheduler_setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "CCScheduler:setTimeScale(_num)"},
{ "trigger": ":setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "setTimeScale(_num)"},
{ "trigger": "CCApplication\t", "contents": "CCApplication"},
{ "trigger": "CCApplication_getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "CCApplication:getCurrentLanguage()"},
{ "trigger": ":getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "getCurrentLanguage()"},
{ "trigger": "CCApplication_sharedApplication\tCCApplication:sharedApplication()", "contents": "CCApplication:sharedApplication()"},
{ "trigger": ":sharedApplication\tCCApplication:sharedApplication()", "contents": "sharedApplication()"},
{ "trigger": "CCApplication_getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "CCApplication:getTargetPlatform()"},
{ "trigger": ":getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "getTargetPlatform()"},
{ "trigger": "CCApplication_setAnimationInterval\tCCApplication:setAnimationInterval(_num)", "contents": "CCApplication:setAnimationInterval(_num)"},
{ "trigger": ":setAnimationInterval\tCCApplication:setAnimationInterval(_num)", "contents": "setAnimationInterval(_num)"},
{ "trigger": "CCCircleShape\t", "contents": "CCCircleShape"},
{ "trigger": "CCCircleShape_setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "CCCircleShape:setDrawLineToCenter(_boo)"},
{ "trigger": ":setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "setDrawLineToCenter(_boo)"},
{ "trigger": "CCCircleShape_getSegments\tCCCircleShape:getSegments()", "contents": "CCCircleShape:getSegments()"},
{ "trigger": ":getSegments\tCCCircleShape:getSegments()", "contents": "getSegments()"},
{ "trigger": "CCCircleShape_getAngle\tCCCircleShape:getAngle()", "contents": "CCCircleShape:getAngle()"},
{ "trigger": ":getAngle\tCCCircleShape:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCCircleShape_setRadius\tCCCircleShape:setRadius(_num)", "contents": "CCCircleShape:setRadius(_num)"},
{ "trigger": ":setRadius\tCCCircleShape:setRadius(_num)", "contents": "setRadius(_num)"},
{ "trigger": "CCCircleShape_setSegments\tCCCircleShape:setSegments(_num)", "contents": "CCCircleShape:setSegments(_num)"},
{ "trigger": ":setSegments\tCCCircleShape:setSegments(_num)", "contents": "setSegments(_num)"},
{ "trigger": "CCCircleShape_setAngle\tCCCircleShape:setAngle(_num)", "contents": "CCCircleShape:setAngle(_num)"},
{ "trigger": ":setAngle\tCCCircleShape:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCCircleShape_getRadius\tCCCircleShape:getRadius()", "contents": "CCCircleShape:getRadius()"},
{ "trigger": ":getRadius\tCCCircleShape:getRadius()", "contents": "getRadius()"},
{ "trigger": "CCCircleShape_create\tCCCircleShape:create(_num)", "contents": "CCCircleShape:create(_num)"},
{ "trigger": ":create\tCCCircleShape:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCCircleShape_isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "CCCircleShape:isDrawLineToCenter()"},
{ "trigger": ":isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "isDrawLineToCenter()"},
{ "trigger": "CCTransitionScene\t", "contents": "CCTransitionScene"},
{ "trigger": "CCFloat\t", "contents": "CCFloat"},
{ "trigger": "CCFloat_getValue\tCCFloat:getValue()", "contents": "CCFloat:getValue()"},
{ "trigger": ":getValue\tCCFloat:getValue()", "contents": "getValue()"},
{ "trigger": "CCFloat_call\tCCFloat:call(_num)", "contents": "CCFloat:call(_num)"},
{ "trigger": ":call\tCCFloat:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCFloat_new\tCCFloat:new(_num)", "contents": "CCFloat:new(_num)"},
{ "trigger": ":new\tCCFloat:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCFloat_new_local\tCCFloat:new_local(_num)", "contents": "CCFloat:new_local(_num)"},
{ "trigger": ":new_local\tCCFloat:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCFloat_create\tCCFloat:create(_num)", "contents": "CCFloat:create(_num)"},
{ "trigger": ":create\tCCFloat:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCEaseBackInOut\t", "contents": "CCEaseBackInOut"},
{ "trigger": "CCEaseBackInOut_create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "CCEaseBackInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTexture2D\t", "contents": "CCTexture2D"},
{ "trigger": "CCTexture2D_PVRImagesHavePremultipliedAlpha\tCCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)", "contents": "CCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)"},
{ "trigger": ":PVRImagesHavePremultipliedAlpha\tCCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)", "contents": "PVRImagesHavePremultipliedAlpha(_boo)"},
{ "trigger": "CCTexture2D_setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "CCTexture2D:setTexParameters(_ccTexParams)"},
{ "trigger": ":setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "setTexParameters(_ccTexParams)"},
{ "trigger": "CCTexture2D_generateMipmap\tCCTexture2D:generateMipmap()", "contents": "CCTexture2D:generateMipmap()"},
{ "trigger": ":generateMipmap\tCCTexture2D:generateMipmap()", "contents": "generateMipmap()"},
{ "trigger": "CCTexture2D_hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "CCTexture2D:hasMipmaps()"},
{ "trigger": ":hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "hasMipmaps()"},
{ "trigger": "CCTexture2D_getContentSize\tCCTexture2D:getContentSize()", "contents": "CCTexture2D:getContentSize()"},
{ "trigger": ":getContentSize\tCCTexture2D:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCTexture2D_bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "CCTexture2D:bitsPerPixelForFormat(_num)"},
{ "trigger": ":bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "bitsPerPixelForFormat(_num)"},
{ "trigger": "CCTexture2D_getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "CCTexture2D:getPixelsWide()"},
{ "trigger": ":getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "getPixelsWide()"},
{ "trigger": "CCTexture2D_setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "CCTexture2D:setAntiAliasTexParameters()"},
{ "trigger": ":setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "setAntiAliasTexParameters()"},
{ "trigger": "CCTexture2D_setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "CCTexture2D:setDefaultAlphaPixelFormat(_num)"},
{ "trigger": ":setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "setDefaultAlphaPixelFormat(_num)"},
{ "trigger": "CCTexture2D_getMaxS\tCCTexture2D:getMaxS()", "contents": "CCTexture2D:getMaxS()"},
{ "trigger": ":getMaxS\tCCTexture2D:getMaxS()", "contents": "getMaxS()"},
{ "trigger": "CCTexture2D_getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "CCTexture2D:getPixelsHigh()"},
{ "trigger": ":getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "getPixelsHigh()"},
{ "trigger": "CCTexture2D_getMaxT\tCCTexture2D:getMaxT()", "contents": "CCTexture2D:getMaxT()"},
{ "trigger": ":getMaxT\tCCTexture2D:getMaxT()", "contents": "getMaxT()"},
{ "trigger": "CCTexture2D_stringForFormat\tCCTexture2D:stringForFormat()", "contents": "CCTexture2D:stringForFormat()"},
{ "trigger": ":stringForFormat\tCCTexture2D:stringForFormat()", "contents": "stringForFormat()"},
{ "trigger": "CCTexture2D_defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "CCTexture2D:defaultAlphaPixelFormat()"},
{ "trigger": ":defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "defaultAlphaPixelFormat()"},
{ "trigger": "CCTexture2D_hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "CCTexture2D:hasPremultipliedAlpha()"},
{ "trigger": ":hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "hasPremultipliedAlpha()"},
{ "trigger": "CCTexture2D_setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "CCTexture2D:setAliasTexParameters()"},
{ "trigger": ":setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "setAliasTexParameters()"},
{ "trigger": "CCTexture2D_getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "CCTexture2D:getContentSizeInPixels()"},
{ "trigger": ":getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "getContentSizeInPixels()"},
{ "trigger": "CCTexture2D_getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "CCTexture2D:getPixelFormat()"},
{ "trigger": ":getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "getPixelFormat()"},
{ "trigger": "CCTexture2D_getName\tCCTexture2D:getName()", "contents": "CCTexture2D:getName()"},
{ "trigger": ":getName\tCCTexture2D:getName()", "contents": "getName()"},
{ "trigger": "CCTexture2D_getShaderProgram\tCCTexture2D:getShaderProgram()", "contents": "CCTexture2D:getShaderProgram()"},
{ "trigger": ":getShaderProgram\tCCTexture2D:getShaderProgram()", "contents": "getShaderProgram()"},
{ "trigger": "CCImage\t", "contents": "CCImage"},
{ "trigger": "CCImage_getBitsPerComponent\tCCImage:getBitsPerComponent()", "contents": "CCImage:getBitsPerComponent()"},
{ "trigger": ":getBitsPerComponent\tCCImage:getBitsPerComponent()", "contents": "getBitsPerComponent()"},
{ "trigger": "CCImage_call\tCCImage:call()", "contents": "CCImage:call()"},
{ "trigger": ":call\tCCImage:call()", "contents": "call()"},
{ "trigger": "CCImage_isPremultipliedAlpha\tCCImage:isPremultipliedAlpha()", "contents": "CCImage:isPremultipliedAlpha()"},
{ "trigger": ":isPremultipliedAlpha\tCCImage:isPremultipliedAlpha()", "contents": "isPremultipliedAlpha()"},
{ "trigger": "CCImage_new\tCCImage:new()", "contents": "CCImage:new()"},
{ "trigger": ":new\tCCImage:new()", "contents": "new()"},
{ "trigger": "CCImage_getHeight\tCCImage:getHeight()", "contents": "CCImage:getHeight()"},
{ "trigger": ":getHeight\tCCImage:getHeight()", "contents": "getHeight()"},
{ "trigger": "CCImage_initWithImageData\tCCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)", "contents": "CCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)"},
{ "trigger": ":initWithImageData\tCCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)", "contents": "initWithImageData(_userdata,_num,_num,_num,_num,_num)"},
{ "trigger": "CCImage_new_local\tCCImage:new_local()", "contents": "CCImage:new_local()"},
{ "trigger": ":new_local\tCCImage:new_local()", "contents": "new_local()"},
{ "trigger": "CCImage_delete\tCCImage:delete()", "contents": "CCImage:delete()"},
{ "trigger": ":delete\tCCImage:delete()", "contents": "delete()"},
{ "trigger": "CCImage_saveToFile\tCCImage:saveToFile(_str,_boo)", "contents": "CCImage:saveToFile(_str,_boo)"},
{ "trigger": ":saveToFile\tCCImage:saveToFile(_str,_boo)", "contents": "saveToFile(_str,_boo)"},
{ "trigger": "CCImage_initWithImageFileThreadSafe\tCCImage:initWithImageFileThreadSafe(_str,_num)", "contents": "CCImage:initWithImageFileThreadSafe(_str,_num)"},
{ "trigger": ":initWithImageFileThreadSafe\tCCImage:initWithImageFileThreadSafe(_str,_num)", "contents": "initWithImageFileThreadSafe(_str,_num)"},
{ "trigger": "CCImage_getWidth\tCCImage:getWidth()", "contents": "CCImage:getWidth()"},
{ "trigger": ":getWidth\tCCImage:getWidth()", "contents": "getWidth()"},
{ "trigger": "CCImage_hasAlpha\tCCImage:hasAlpha()", "contents": "CCImage:hasAlpha()"},
{ "trigger": ":hasAlpha\tCCImage:hasAlpha()", "contents": "hasAlpha()"},
{ "trigger": "CCImage_initWithImageFile\tCCImage:initWithImageFile(_str,_num)", "contents": "CCImage:initWithImageFile(_str,_num)"},
{ "trigger": ":initWithImageFile\tCCImage:initWithImageFile(_str,_num)", "contents": "initWithImageFile(_str,_num)"},
{ "trigger": "Bone\t", "contents": "Bone"},
{ "trigger": "Bone_getParentBone\tBone:getParentBone()", "contents": "Bone:getParentBone()"},
{ "trigger": ":getParentBone\tBone:getParentBone()", "contents": "getParentBone()"},
{ "trigger": "Bone_getArmature\tBone:getArmature()", "contents": "Bone:getArmature()"},
{ "trigger": ":getArmature\tBone:getArmature()", "contents": "getArmature()"},
{ "trigger": "Bone_getIgnoreMovementBoneData\tBone:getIgnoreMovementBoneData()", "contents": "Bone:getIgnoreMovementBoneData()"},
{ "trigger": ":getIgnoreMovementBoneData\tBone:getIgnoreMovementBoneData()", "contents": "getIgnoreMovementBoneData()"},
{ "trigger": "Bone_getChildren\tBone:getChildren()", "contents": "Bone:getChildren()"},
{ "trigger": ":getChildren\tBone:getChildren()", "contents": "getChildren()"},
{ "trigger": "Bone_removeFromParent\tBone:removeFromParent(_boo)", "contents": "Bone:removeFromParent(_boo)"},
{ "trigger": ":removeFromParent\tBone:removeFromParent(_boo)", "contents": "removeFromParent(_boo)"},
{ "trigger": "Bone_create\tBone:create()", "contents": "Bone:create()"},
{ "trigger": ":create\tBone:create()", "contents": "create()"},
{ "trigger": "Bone_setParentBone\tBone:setParentBone(_Bone)", "contents": "Bone:setParentBone(_Bone)"},
{ "trigger": ":setParentBone\tBone:setParentBone(_Bone)", "contents": "setParentBone(_Bone)"},
{ "trigger": "Bone_getChildArmature\tBone:getChildArmature()", "contents": "Bone:getChildArmature()"},
{ "trigger": ":getChildArmature\tBone:getChildArmature()", "contents": "getChildArmature()"},
{ "trigger": "Bone_getName\tBone:getName()", "contents": "Bone:getName()"},
{ "trigger": ":getName\tBone:getName()", "contents": "getName()"},
{ "trigger": "Bone_removeChildBone\tBone:removeChildBone(_Bone,_boo)", "contents": "Bone:removeChildBone(_Bone,_boo)"},
{ "trigger": ":removeChildBone\tBone:removeChildBone(_Bone,_boo)", "contents": "removeChildBone(_Bone,_boo)"},
{ "trigger": "Bone_setIgnoreMovementBoneData\tBone:setIgnoreMovementBoneData(_boo)", "contents": "Bone:setIgnoreMovementBoneData(_boo)"},
{ "trigger": ":setIgnoreMovementBoneData\tBone:setIgnoreMovementBoneData(_boo)", "contents": "setIgnoreMovementBoneData(_boo)"},
{ "trigger": "Bone_addChildBone\tBone:addChildBone(_Bone)", "contents": "Bone:addChildBone(_Bone)"},
{ "trigger": ":addChildBone\tBone:addChildBone(_Bone)", "contents": "addChildBone(_Bone)"},
{ "trigger": "Bone_setName\tBone:setName(_cpp)", "contents": "Bone:setName(_cpp)"},
{ "trigger": ":setName\tBone:setName(_cpp)", "contents": "setName(_cpp)"},
{ "trigger": "CCParticleSpiral\t", "contents": "CCParticleSpiral"},
{ "trigger": "CCParticleSpiral_createWithTotalParticles\tCCParticleSpiral:createWithTotalParticles(_num)", "contents": "CCParticleSpiral:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSpiral:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSpiral_create\tCCParticleSpiral:create()", "contents": "CCParticleSpiral:create()"},
{ "trigger": ":create\tCCParticleSpiral:create()", "contents": "create()"},
{ "trigger": "CCTransitionSplitCols\t", "contents": "CCTransitionSplitCols"},
{ "trigger": "CCTransitionSplitCols_create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "CCTransitionSplitCols:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionJumpZoom\t", "contents": "CCTransitionJumpZoom"},
{ "trigger": "CCTransitionJumpZoom_create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "CCTransitionJumpZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCRotateBy\t", "contents": "CCRotateBy"},
{ "trigger": "CCRotateBy_create\tCCRotateBy:create(_num,_num)", "contents": "CCRotateBy:create(_num,_num)"},
{ "trigger": ":create\tCCRotateBy:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCEaseElasticInOut\t", "contents": "CCEaseElasticInOut"},
{ "trigger": "CCEaseElasticInOut_create\tCCEaseElasticInOut:create(_CCActionInterval)", "contents": "CCEaseElasticInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCMenuItemImage\t", "contents": "CCMenuItemImage"},
{ "trigger": "CCMenuItemImage_setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_create\tCCMenuItemImage:create()", "contents": "CCMenuItemImage:create()"},
{ "trigger": ":create\tCCMenuItemImage:create()", "contents": "create()"},
{ "trigger": "CCTransitionProgressInOut\t", "contents": "CCTransitionProgressInOut"},
{ "trigger": "CCTransitionProgressInOut_create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "CCTransitionProgressInOut:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpeed\t", "contents": "CCSpeed"},
{ "trigger": "CCSpeed_getSpeed\tCCSpeed:getSpeed()", "contents": "CCSpeed:getSpeed()"},
{ "trigger": ":getSpeed\tCCSpeed:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCSpeed_setSpeed\tCCSpeed:setSpeed(_num)", "contents": "CCSpeed:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCSpeed:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCSpeed_create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "CCSpeed:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCTime\t", "contents": "CCTime"},
{ "trigger": "CCTime_timersubCocos2d\tCCTime:timersubCocos2d(_cc_timeval,_cc_timeval)", "contents": "CCTime:timersubCocos2d(_cc_timeval,_cc_timeval)"},
{ "trigger": ":timersubCocos2d\tCCTime:timersubCocos2d(_cc_timeval,_cc_timeval)", "contents": "timersubCocos2d(_cc_timeval,_cc_timeval)"},
{ "trigger": "CCTime_gettimeofdayCocos2d\tCCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)", "contents": "CCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)"},
{ "trigger": ":gettimeofdayCocos2d\tCCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)", "contents": "gettimeofdayCocos2d(_cc_timeval,_userdata)"},
{ "trigger": "CCComponent\t", "contents": "CCComponent"},
{ "trigger": "CCComponent_getOwner\tCCComponent:getOwner()", "contents": "CCComponent:getOwner()"},
{ "trigger": ":getOwner\tCCComponent:getOwner()", "contents": "getOwner()"},
{ "trigger": "CCComponent_setOwner\tCCComponent:setOwner(_CCNode)", "contents": "CCComponent:setOwner(_CCNode)"},
{ "trigger": ":setOwner\tCCComponent:setOwner(_CCNode)", "contents": "setOwner(_CCNode)"},
{ "trigger": "CCComponent_getName\tCCComponent:getName()", "contents": "CCComponent:getName()"},
{ "trigger": ":getName\tCCComponent:getName()", "contents": "getName()"},
{ "trigger": "CCComponent_setEnabled\tCCComponent:setEnabled(_boo)", "contents": "CCComponent:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCComponent:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCComponent_create\tCCComponent:create()", "contents": "CCComponent:create()"},
{ "trigger": ":create\tCCComponent:create()", "contents": "create()"},
{ "trigger": "CCComponent_isEnabled\tCCComponent:isEnabled()", "contents": "CCComponent:isEnabled()"},
{ "trigger": ":isEnabled\tCCComponent:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCSplitRows\t", "contents": "CCSplitRows"},
{ "trigger": "CCSplitRows_create\tCCSplitRows:create(_num,_num)", "contents": "CCSplitRows:create(_num,_num)"},
{ "trigger": ":create\tCCSplitRows:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCFollow\t", "contents": "CCFollow"},
{ "trigger": "CCFollow_isBoundarySet\tCCFollow:isBoundarySet()", "contents": "CCFollow:isBoundarySet()"},
{ "trigger": ":isBoundarySet\tCCFollow:isBoundarySet()", "contents": "isBoundarySet()"},
{ "trigger": "CCFollow_setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "CCFollow:setBoudarySet(_boo)"},
{ "trigger": ":setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "setBoudarySet(_boo)"},
{ "trigger": "CCFollow_create\tCCFollow:create(_CCNode,_CCRect)", "contents": "CCFollow:create(_CCNode,_CCRect)"},
{ "trigger": ":create\tCCFollow:create(_CCNode,_CCRect)", "contents": "create(_CCNode,_CCRect)"},
{ "trigger": "CCReuseGrid\t", "contents": "CCReuseGrid"},
{ "trigger": "CCReuseGrid_create\tCCReuseGrid:create(_num)", "contents": "CCReuseGrid:create(_num)"},
{ "trigger": ":create\tCCReuseGrid:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTransitionProgressOutIn\t", "contents": "CCTransitionProgressOutIn"},
{ "trigger": "CCTransitionProgressOutIn_create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "CCTransitionProgressOutIn:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTMXObjectGroup\t", "contents": "CCTMXObjectGroup"},
{ "trigger": "CCTMXObjectGroup_getObjects\tCCTMXObjectGroup:getObjects()", "contents": "CCTMXObjectGroup:getObjects()"},
{ "trigger": ":getObjects\tCCTMXObjectGroup:getObjects()", "contents": "getObjects()"},
{ "trigger": "CCTMXObjectGroup_setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "CCTMXObjectGroup:setPositionOffset(_CCPoint)"},
{ "trigger": ":setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "setPositionOffset(_CCPoint)"},
{ "trigger": "CCTMXObjectGroup_objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "CCTMXObjectGroup:objectNamed(_str)"},
{ "trigger": ":objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "objectNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_getProperties\tCCTMXObjectGroup:getProperties()", "contents": "CCTMXObjectGroup:getProperties()"},
{ "trigger": ":getProperties\tCCTMXObjectGroup:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXObjectGroup_propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "CCTMXObjectGroup:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "CCTMXObjectGroup:getPositionOffset()"},
{ "trigger": ":getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "getPositionOffset()"},
{ "trigger": "CCTMXObjectGroup_getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "CCTMXObjectGroup:getGroupName()"},
{ "trigger": ":getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "getGroupName()"},
{ "trigger": "CCPoint\t", "contents": "CCPoint"},
{ "trigger": "CCPoint_rotateByAngle\tCCPoint:rotateByAngle(_CCPoint,_num)", "contents": "CCPoint:rotateByAngle(_CCPoint,_num)"},
{ "trigger": ":rotateByAngle\tCCPoint:rotateByAngle(_CCPoint,_num)", "contents": "rotateByAngle(_CCPoint,_num)"},
{ "trigger": "CCPoint_call\tCCPoint:call()", "contents": "CCPoint:call()"},
{ "trigger": ":call\tCCPoint:call()", "contents": "call()"},
{ "trigger": "CCPoint_rotate\tCCPoint:rotate(_CCPoint)", "contents": "CCPoint:rotate(_CCPoint)"},
{ "trigger": ":rotate\tCCPoint:rotate(_CCPoint)", "contents": "rotate(_CCPoint)"},
{ "trigger": "CCPoint_equals\tCCPoint:equals(_CCPoint)", "contents": "CCPoint:equals(_CCPoint)"},
{ "trigger": ":equals\tCCPoint:equals(_CCPoint)", "contents": "equals(_CCPoint)"},
{ "trigger": "CCPoint_getAngle\tCCPoint:getAngle(_CCPoint)", "contents": "CCPoint:getAngle(_CCPoint)"},
{ "trigger": ":getAngle\tCCPoint:getAngle(_CCPoint)", "contents": "getAngle(_CCPoint)"},
{ "trigger": "CCPoint_getRPerp\tCCPoint:getRPerp()", "contents": "CCPoint:getRPerp()"},
{ "trigger": ":getRPerp\tCCPoint:getRPerp()", "contents": "getRPerp()"},
{ "trigger": "CCPoint_fuzzyEquals\tCCPoint:fuzzyEquals(_CCPoint,_num)", "contents": "CCPoint:fuzzyEquals(_CCPoint,_num)"},
{ "trigger": ":fuzzyEquals\tCCPoint:fuzzyEquals(_CCPoint,_num)", "contents": "fuzzyEquals(_CCPoint,_num)"},
{ "trigger": "CCPoint_unrotate\tCCPoint:unrotate(_CCPoint)", "contents": "CCPoint:unrotate(_CCPoint)"},
{ "trigger": ":unrotate\tCCPoint:unrotate(_CCPoint)", "contents": "unrotate(_CCPoint)"},
{ "trigger": "CCPoint_dot\tCCPoint:dot(_CCPoint)", "contents": "CCPoint:dot(_CCPoint)"},
{ "trigger": ":dot\tCCPoint:dot(_CCPoint)", "contents": "dot(_CCPoint)"},
{ "trigger": "CCPoint_forAngle\tCCPoint:forAngle(_num)", "contents": "CCPoint:forAngle(_num)"},
{ "trigger": ":forAngle\tCCPoint:forAngle(_num)", "contents": "forAngle(_num)"},
{ "trigger": "CCPoint_getLengthSq\tCCPoint:getLengthSq()", "contents": "CCPoint:getLengthSq()"},
{ "trigger": ":getLengthSq\tCCPoint:getLengthSq()", "contents": "getLengthSq()"},
{ "trigger": "CCPoint_normalize\tCCPoint:normalize()", "contents": "CCPoint:normalize()"},
{ "trigger": ":normalize\tCCPoint:normalize()", "contents": "normalize()"},
{ "trigger": "CCPoint_project\tCCPoint:project(_CCPoint)", "contents": "CCPoint:project(_CCPoint)"},
{ "trigger": ":project\tCCPoint:project(_CCPoint)", "contents": "project(_CCPoint)"},
{ "trigger": "CCPoint_new\tCCPoint:new()", "contents": "CCPoint:new()"},
{ "trigger": ":new\tCCPoint:new()", "contents": "new()"},
{ "trigger": "CCPoint_getDistance\tCCPoint:getDistance(_CCPoint)", "contents": "CCPoint:getDistance(_CCPoint)"},
{ "trigger": ":getDistance\tCCPoint:getDistance(_CCPoint)", "contents": "getDistance(_CCPoint)"},
{ "trigger": "CCPoint_new_local\tCCPoint:new_local()", "contents": "CCPoint:new_local()"},
{ "trigger": ":new_local\tCCPoint:new_local()", "contents": "new_local()"},
{ "trigger": "CCPoint_getPerp\tCCPoint:getPerp()", "contents": "CCPoint:getPerp()"},
{ "trigger": ":getPerp\tCCPoint:getPerp()", "contents": "getPerp()"},
{ "trigger": "CCPoint_getLength\tCCPoint:getLength()", "contents": "CCPoint:getLength()"},
{ "trigger": ":getLength\tCCPoint:getLength()", "contents": "getLength()"},
{ "trigger": "CCPoint_setPoint\tCCPoint:setPoint(_num,_num)", "contents": "CCPoint:setPoint(_num,_num)"},
{ "trigger": ":setPoint\tCCPoint:setPoint(_num,_num)", "contents": "setPoint(_num,_num)"},
{ "trigger": "CCPoint_getDistanceSq\tCCPoint:getDistanceSq(_CCPoint)", "contents": "CCPoint:getDistanceSq(_CCPoint)"},
{ "trigger": ":getDistanceSq\tCCPoint:getDistanceSq(_CCPoint)", "contents": "getDistanceSq(_CCPoint)"},
{ "trigger": "CCPoint_lerp\tCCPoint:lerp(_CCPoint,_num)", "contents": "CCPoint:lerp(_CCPoint,_num)"},
{ "trigger": ":lerp\tCCPoint:lerp(_CCPoint,_num)", "contents": "lerp(_CCPoint,_num)"},
{ "trigger": "CCPoint_cross\tCCPoint:cross(_CCPoint)", "contents": "CCPoint:cross(_CCPoint)"},
{ "trigger": ":cross\tCCPoint:cross(_CCPoint)", "contents": "cross(_CCPoint)"},
{ "trigger": "CCLabelTTF\t", "contents": "CCLabelTTF"},
{ "trigger": "CCLabelTTF_call\tCCLabelTTF:call()", "contents": "CCLabelTTF:call()"},
{ "trigger": ":call\tCCLabelTTF:call()", "contents": "call()"},
{ "trigger": "CCLabelTTF_initWithStringAndTextDefinition\tCCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)", "contents": "CCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)"},
{ "trigger": ":initWithStringAndTextDefinition\tCCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)", "contents": "initWithStringAndTextDefinition(_str,_ccFontDefinition)"},
{ "trigger": "CCLabelTTF_setString\tCCLabelTTF:setString(_str)", "contents": "CCLabelTTF:setString(_str)"},
{ "trigger": ":setString\tCCLabelTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelTTF_enableShadow\tCCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)", "contents": "CCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)"},
{ "trigger": ":enableShadow\tCCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)", "contents": "enableShadow(_CCSize,_num,_num,_boo)"},
{ "trigger": "CCLabelTTF_getTextDefinition\tCCLabelTTF:getTextDefinition()", "contents": "CCLabelTTF:getTextDefinition()"},
{ "trigger": ":getTextDefinition\tCCLabelTTF:getTextDefinition()", "contents": "getTextDefinition()"},
{ "trigger": "CCLabelTTF_disableShadow\tCCLabelTTF:disableShadow(_boo)", "contents": "CCLabelTTF:disableShadow(_boo)"},
{ "trigger": ":disableShadow\tCCLabelTTF:disableShadow(_boo)", "contents": "disableShadow(_boo)"},
{ "trigger": "CCLabelTTF_enableStroke\tCCLabelTTF:enableStroke(_ccColor3B,_num,_boo)", "contents": "CCLabelTTF:enableStroke(_ccColor3B,_num,_boo)"},
{ "trigger": ":enableStroke\tCCLabelTTF:enableStroke(_ccColor3B,_num,_boo)", "contents": "enableStroke(_ccColor3B,_num,_boo)"},
{ "trigger": "CCLabelTTF_delete\tCCLabelTTF:delete()", "contents": "CCLabelTTF:delete()"},
{ "trigger": ":delete\tCCLabelTTF:delete()", "contents": "delete()"},
{ "trigger": "CCLabelTTF_initWithString\tCCLabelTTF:initWithString(_str,_str,_num)", "contents": "CCLabelTTF:initWithString(_str,_str,_num)"},
{ "trigger": ":initWithString\tCCLabelTTF:initWithString(_str,_str,_num)", "contents": "initWithString(_str,_str,_num)"},
{ "trigger": "CCLabelTTF_setFontFillColor\tCCLabelTTF:setFontFillColor(_ccColor3B,_boo)", "contents": "CCLabelTTF:setFontFillColor(_ccColor3B,_boo)"},
{ "trigger": ":setFontFillColor\tCCLabelTTF:setFontFillColor(_ccColor3B,_boo)", "contents": "setFontFillColor(_ccColor3B,_boo)"},
{ "trigger": "CCLabelTTF_getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "CCLabelTTF:getVerticalAlignment()"},
{ "trigger": ":getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "getVerticalAlignment()"},
{ "trigger": "CCLabelTTF_getFontName\tCCLabelTTF:getFontName()", "contents": "CCLabelTTF:getFontName()"},
{ "trigger": ":getFontName\tCCLabelTTF:getFontName()", "contents": "getFontName()"},
{ "trigger": "CCLabelTTF_setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "CCLabelTTF:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCLabelTTF_getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "CCLabelTTF:getHorizontalAlignment()"},
{ "trigger": ":getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "getHorizontalAlignment()"},
{ "trigger": "CCLabelTTF_setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "CCLabelTTF:setVerticalAlignment(_num)"},
{ "trigger": ":setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "setVerticalAlignment(_num)"},
{ "trigger": "CCLabelTTF_setTextDefinition\tCCLabelTTF:setTextDefinition(_ccFontDefinition)", "contents": "CCLabelTTF:setTextDefinition(_ccFontDefinition)"},
{ "trigger": ":setTextDefinition\tCCLabelTTF:setTextDefinition(_ccFontDefinition)", "contents": "setTextDefinition(_ccFontDefinition)"},
{ "trigger": "CCLabelTTF_init\tCCLabelTTF:init()", "contents": "CCLabelTTF:init()"},
{ "trigger": ":init\tCCLabelTTF:init()", "contents": "init()"},
{ "trigger": "CCLabelTTF_create\tCCLabelTTF:create()", "contents": "CCLabelTTF:create()"},
{ "trigger": ":create\tCCLabelTTF:create()", "contents": "create()"},
{ "trigger": "CCLabelTTF_setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "CCLabelTTF:setHorizontalAlignment(_num)"},
{ "trigger": ":setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "setHorizontalAlignment(_num)"},
{ "trigger": "CCLabelTTF_new\tCCLabelTTF:new()", "contents": "CCLabelTTF:new()"},
{ "trigger": ":new\tCCLabelTTF:new()", "contents": "new()"},
{ "trigger": "CCLabelTTF_setFontName\tCCLabelTTF:setFontName(_str)", "contents": "CCLabelTTF:setFontName(_str)"},
{ "trigger": ":setFontName\tCCLabelTTF:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCLabelTTF_new_local\tCCLabelTTF:new_local()", "contents": "CCLabelTTF:new_local()"},
{ "trigger": ":new_local\tCCLabelTTF:new_local()", "contents": "new_local()"},
{ "trigger": "CCLabelTTF_getFontSize\tCCLabelTTF:getFontSize()", "contents": "CCLabelTTF:getFontSize()"},
{ "trigger": ":getFontSize\tCCLabelTTF:getFontSize()", "contents": "getFontSize()"},
{ "trigger": "CCLabelTTF_getDimensions\tCCLabelTTF:getDimensions()", "contents": "CCLabelTTF:getDimensions()"},
{ "trigger": ":getDimensions\tCCLabelTTF:getDimensions()", "contents": "getDimensions()"},
{ "trigger": "CCLabelTTF_setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "CCLabelTTF:setDimensions(_CCSize)"},
{ "trigger": ":setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "setDimensions(_CCSize)"},
{ "trigger": "CCLabelTTF_getString\tCCLabelTTF:getString()", "contents": "CCLabelTTF:getString()"},
{ "trigger": ":getString\tCCLabelTTF:getString()", "contents": "getString()"},
{ "trigger": "CCLabelTTF_disableStroke\tCCLabelTTF:disableStroke(_boo)", "contents": "CCLabelTTF:disableStroke(_boo)"},
{ "trigger": ":disableStroke\tCCLabelTTF:disableStroke(_boo)", "contents": "disableStroke(_boo)"},
{ "trigger": "CCActionManager\t", "contents": "CCActionManager"},
{ "trigger": "CCActionManager_resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "CCActionManager:resumeTargets(_CCSet)"},
{ "trigger": ":resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "resumeTargets(_CCSet)"},
{ "trigger": "CCActionManager_resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "CCActionManager:resumeTarget(_CCObject)"},
{ "trigger": ":resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "resumeTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeAllActions\tCCActionManager:removeAllActions()", "contents": "CCActionManager:removeAllActions()"},
{ "trigger": ":removeAllActions\tCCActionManager:removeAllActions()", "contents": "removeAllActions()"},
{ "trigger": "CCActionManager_pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "CCActionManager:pauseTarget(_CCObject)"},
{ "trigger": ":pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "pauseTarget(_CCObject)"},
{ "trigger": "CCActionManager_numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "CCActionManager:numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": ":numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "CCActionManager:removeActionByTag(_num,_CCObject)"},
{ "trigger": ":removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "removeActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "CCActionManager:removeAllActionsFromTarget(_CCObject)"},
{ "trigger": ":removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "removeAllActionsFromTarget(_CCObject)"},
{ "trigger": "CCActionManager_pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "CCActionManager:pauseAllRunningActions()"},
{ "trigger": ":pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "pauseAllRunningActions()"},
{ "trigger": "CCActionManager_getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "CCActionManager:getActionByTag(_num,_CCObject)"},
{ "trigger": ":getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "getActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "CCActionManager:addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": ":addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": "CCActionManager_removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "CCActionManager:removeAction(_CCAction)"},
{ "trigger": ":removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "removeAction(_CCAction)"},
{ "trigger": "CCParticleMeteor\t", "contents": "CCParticleMeteor"},
{ "trigger": "CCParticleMeteor_createWithTotalParticles\tCCParticleMeteor:createWithTotalParticles(_num)", "contents": "CCParticleMeteor:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleMeteor:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleMeteor_create\tCCParticleMeteor:create()", "contents": "CCParticleMeteor:create()"},
{ "trigger": ":create\tCCParticleMeteor:create()", "contents": "create()"},
{ "trigger": "CCTransitionPageTurn\t", "contents": "CCTransitionPageTurn"},
{ "trigger": "CCTransitionPageTurn_create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "CCTransitionPageTurn:create(_num,_CCScene,_boo)"},
{ "trigger": ":create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "create(_num,_CCScene,_boo)"},
{ "trigger": "CCRepeat\t", "contents": "CCRepeat"},
{ "trigger": "CCRepeat_create\tCCRepeat:create(_CCFiniteTimeAction,_num)", "contents": "CCRepeat:create(_CCFiniteTimeAction,_num)"},
{ "trigger": ":create\tCCRepeat:create(_CCFiniteTimeAction,_num)", "contents": "create(_CCFiniteTimeAction,_num)"},
{ "trigger": "CCEaseExponentialIn\t", "contents": "CCEaseExponentialIn"},
{ "trigger": "CCEaseExponentialIn_create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "CCEaseExponentialIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCScaleBy\t", "contents": "CCScaleBy"},
{ "trigger": "CCScaleBy_create\tCCScaleBy:create(_num,_num)", "contents": "CCScaleBy:create(_num,_num)"},
{ "trigger": ":create\tCCScaleBy:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCDirector\t", "contents": "CCDirector"},
{ "trigger": "CCDirector_getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "CCDirector:getTouchDispatcher()"},
{ "trigger": ":getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "getTouchDispatcher()"},
{ "trigger": "CCDirector_replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "CCDirector:replaceScene(_CCScene)"},
{ "trigger": ":replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "replaceScene(_CCScene)"},
{ "trigger": "CCDirector_getOpenGLView\tCCDirector:getOpenGLView()", "contents": "CCDirector:getOpenGLView()"},
{ "trigger": ":getOpenGLView\tCCDirector:getOpenGLView()", "contents": "getOpenGLView()"},
{ "trigger": "CCDirector_getDeltaTime\tCCDirector:getDeltaTime()", "contents": "CCDirector:getDeltaTime()"},
{ "trigger": ":getDeltaTime\tCCDirector:getDeltaTime()", "contents": "getDeltaTime()"},
{ "trigger": "CCDirector_getScheduler\tCCDirector:getScheduler()", "contents": "CCDirector:getScheduler()"},
{ "trigger": ":getScheduler\tCCDirector:getScheduler()", "contents": "getScheduler()"},
{ "trigger": "CCDirector_stopAnimation\tCCDirector:stopAnimation()", "contents": "CCDirector:stopAnimation()"},
{ "trigger": ":stopAnimation\tCCDirector:stopAnimation()", "contents": "stopAnimation()"},
{ "trigger": "CCDirector_getProjection\tCCDirector:getProjection()", "contents": "CCDirector:getProjection()"},
{ "trigger": ":getProjection\tCCDirector:getProjection()", "contents": "getProjection()"},
{ "trigger": "CCDirector_getKeypadDispatcher\tCCDirector:getKeypadDispatcher()", "contents": "CCDirector:getKeypadDispatcher()"},
{ "trigger": ":getKeypadDispatcher\tCCDirector:getKeypadDispatcher()", "contents": "getKeypadDispatcher()"},
{ "trigger": "CCDirector_runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "CCDirector:runWithScene(_CCScene)"},
{ "trigger": ":runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "runWithScene(_CCScene)"},
{ "trigger": "CCDirector_setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "CCDirector:setContentScaleFactor(_num)"},
{ "trigger": ":setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "setContentScaleFactor(_num)"},
{ "trigger": "CCDirector_setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "CCDirector:setDepthTest(_boo)"},
{ "trigger": ":setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "setDepthTest(_boo)"},
{ "trigger": "CCDirector_pause\tCCDirector:pause()", "contents": "CCDirector:pause()"},
{ "trigger": ":pause\tCCDirector:pause()", "contents": "pause()"},
{ "trigger": "CCDirector_getTotalFrames\tCCDirector:getTotalFrames()", "contents": "CCDirector:getTotalFrames()"},
{ "trigger": ":getTotalFrames\tCCDirector:getTotalFrames()", "contents": "getTotalFrames()"},
{ "trigger": "CCDirector_setProjection\tCCDirector:setProjection(_num)", "contents": "CCDirector:setProjection(_num)"},
{ "trigger": ":setProjection\tCCDirector:setProjection(_num)", "contents": "setProjection(_num)"},
{ "trigger": "CCDirector_popToRootScene\tCCDirector:popToRootScene()", "contents": "CCDirector:popToRootScene()"},
{ "trigger": ":popToRootScene\tCCDirector:popToRootScene()", "contents": "popToRootScene()"},
{ "trigger": "CCDirector_startAnimation\tCCDirector:startAnimation()", "contents": "CCDirector:startAnimation()"},
{ "trigger": ":startAnimation\tCCDirector:startAnimation()", "contents": "startAnimation()"},
{ "trigger": "CCDirector_getVisibleSize\tCCDirector:getVisibleSize()", "contents": "CCDirector:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCDirector:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCDirector_setAnimationInterval\tCCDirector:setAnimationInterval(_num)", "contents": "CCDirector:setAnimationInterval(_num)"},
{ "trigger": ":setAnimationInterval\tCCDirector:setAnimationInterval(_num)", "contents": "setAnimationInterval(_num)"},
{ "trigger": "CCDirector_setGLDefaultValues\tCCDirector:setGLDefaultValues()", "contents": "CCDirector:setGLDefaultValues()"},
{ "trigger": ":setGLDefaultValues\tCCDirector:setGLDefaultValues()", "contents": "setGLDefaultValues()"},
{ "trigger": "CCDirector_pushScene\tCCDirector:pushScene(_CCScene)", "contents": "CCDirector:pushScene(_CCScene)"},
{ "trigger": ":pushScene\tCCDirector:pushScene(_CCScene)", "contents": "pushScene(_CCScene)"},
{ "trigger": "CCDirector_sharedDirector\tCCDirector:sharedDirector()", "contents": "CCDirector:sharedDirector()"},
{ "trigger": ":sharedDirector\tCCDirector:sharedDirector()", "contents": "sharedDirector()"},
{ "trigger": "CCDirector_endToLua\tCCDirector:endToLua()", "contents": "CCDirector:endToLua()"},
{ "trigger": ":endToLua\tCCDirector:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCDirector_convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "CCDirector:convertToGL(_CCPoint)"},
{ "trigger": ":convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "convertToGL(_CCPoint)"},
{ "trigger": "CCDirector_getRunningScene\tCCDirector:getRunningScene()", "contents": "CCDirector:getRunningScene()"},
{ "trigger": ":getRunningScene\tCCDirector:getRunningScene()", "contents": "getRunningScene()"},
{ "trigger": "CCDirector_getWinSize\tCCDirector:getWinSize()", "contents": "CCDirector:getWinSize()"},
{ "trigger": ":getWinSize\tCCDirector:getWinSize()", "contents": "getWinSize()"},
{ "trigger": "CCDirector_getActionManager\tCCDirector:getActionManager()", "contents": "CCDirector:getActionManager()"},
{ "trigger": ":getActionManager\tCCDirector:getActionManager()", "contents": "getActionManager()"},
{ "trigger": "CCDirector_isPaused\tCCDirector:isPaused()", "contents": "CCDirector:isPaused()"},
{ "trigger": ":isPaused\tCCDirector:isPaused()", "contents": "isPaused()"},
{ "trigger": "CCDirector_popScene\tCCDirector:popScene()", "contents": "CCDirector:popScene()"},
{ "trigger": ":popScene\tCCDirector:popScene()", "contents": "popScene()"},
{ "trigger": "CCDirector_setAlphaBlending\tCCDirector:setAlphaBlending(_boo)", "contents": "CCDirector:setAlphaBlending(_boo)"},
{ "trigger": ":setAlphaBlending\tCCDirector:setAlphaBlending(_boo)", "contents": "setAlphaBlending(_boo)"},
{ "trigger": "CCDirector_convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "CCDirector:convertToUI(_CCPoint)"},
{ "trigger": ":convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "convertToUI(_CCPoint)"},
{ "trigger": "CCDirector_getSecondsPerFrame\tCCDirector:getSecondsPerFrame()", "contents": "CCDirector:getSecondsPerFrame()"},
{ "trigger": ":getSecondsPerFrame\tCCDirector:getSecondsPerFrame()", "contents": "getSecondsPerFrame()"},
{ "trigger": "CCDirector_getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "CCDirector:getAnimationInterval()"},
{ "trigger": ":getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "getAnimationInterval()"},
{ "trigger": "CCDirector_purgeCachedData\tCCDirector:purgeCachedData()", "contents": "CCDirector:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCDirector:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCDirector_setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "CCDirector:setDisplayStats(_boo)"},
{ "trigger": ":setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "setDisplayStats(_boo)"},
{ "trigger": "CCDirector_getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "CCDirector:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCDirector_resume\tCCDirector:resume()", "contents": "CCDirector:resume()"},
{ "trigger": ":resume\tCCDirector:resume()", "contents": "resume()"},
{ "trigger": "CCDirector_setNextDeltaTimeZero\tCCDirector:setNextDeltaTimeZero(_boo)", "contents": "CCDirector:setNextDeltaTimeZero(_boo)"},
{ "trigger": ":setNextDeltaTimeZero\tCCDirector:setNextDeltaTimeZero(_boo)", "contents": "setNextDeltaTimeZero(_boo)"},
{ "trigger": "CCDirector_getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "CCDirector:getContentScaleFactor()"},
{ "trigger": ":getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "getContentScaleFactor()"},
{ "trigger": "CCDirector_getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "CCDirector:getWinSizeInPixels()"},
{ "trigger": ":getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "getWinSizeInPixels()"},
{ "trigger": "CCDirector_isDisplayStats\tCCDirector:isDisplayStats()", "contents": "CCDirector:isDisplayStats()"},
{ "trigger": ":isDisplayStats\tCCDirector:isDisplayStats()", "contents": "isDisplayStats()"},
{ "trigger": "CCDirector_getAccelerometer\tCCDirector:getAccelerometer()", "contents": "CCDirector:getAccelerometer()"},
{ "trigger": ":getAccelerometer\tCCDirector:getAccelerometer()", "contents": "getAccelerometer()"},
{ "trigger": "CCDirector_isNextDeltaTimeZero\tCCDirector:isNextDeltaTimeZero()", "contents": "CCDirector:isNextDeltaTimeZero()"},
{ "trigger": ":isNextDeltaTimeZero\tCCDirector:isNextDeltaTimeZero()", "contents": "isNextDeltaTimeZero()"},
{ "trigger": "CCDirector_popToSceneStackLevel\tCCDirector:popToSceneStackLevel(_num)", "contents": "CCDirector:popToSceneStackLevel(_num)"},
{ "trigger": ":popToSceneStackLevel\tCCDirector:popToSceneStackLevel(_num)", "contents": "popToSceneStackLevel(_num)"},
{ "trigger": "CCBReader\t", "contents": "CCBReader"},
{ "trigger": "CCBReader_getOwner\tCCBReader:getOwner()", "contents": "CCBReader:getOwner()"},
{ "trigger": ":getOwner\tCCBReader:getOwner()", "contents": "getOwner()"},
{ "trigger": "CCBReader_call\tCCBReader:call()", "contents": "CCBReader:call()"},
{ "trigger": ":call\tCCBReader:call()", "contents": "call()"},
{ "trigger": "CCBReader_getNodesWithAnimationManagers\tCCBReader:getNodesWithAnimationManagers()", "contents": "CCBReader:getNodesWithAnimationManagers()"},
{ "trigger": ":getNodesWithAnimationManagers\tCCBReader:getNodesWithAnimationManagers()", "contents": "getNodesWithAnimationManagers()"},
{ "trigger": "CCBReader_getAnimationManagersForNodes\tCCBReader:getAnimationManagersForNodes()", "contents": "CCBReader:getAnimationManagersForNodes()"},
{ "trigger": ":getAnimationManagersForNodes\tCCBReader:getAnimationManagersForNodes()", "contents": "getAnimationManagersForNodes()"},
{ "trigger": "CCBReader_getOwnerOutletNodes\tCCBReader:getOwnerOutletNodes()", "contents": "CCBReader:getOwnerOutletNodes()"},
{ "trigger": ":getOwnerOutletNodes\tCCBReader:getOwnerOutletNodes()", "contents": "getOwnerOutletNodes()"},
{ "trigger": "CCBReader_setCCBRootPath\tCCBReader:setCCBRootPath(_str)", "contents": "CCBReader:setCCBRootPath(_str)"},
{ "trigger": ":setCCBRootPath\tCCBReader:setCCBRootPath(_str)", "contents": "setCCBRootPath(_str)"},
{ "trigger": "CCBReader_getAnimationManager\tCCBReader:getAnimationManager()", "contents": "CCBReader:getAnimationManager()"},
{ "trigger": ":getAnimationManager\tCCBReader:getAnimationManager()", "contents": "getAnimationManager()"},
{ "trigger": "CCBReader_getCCBRootPath\tCCBReader:getCCBRootPath()", "contents": "CCBReader:getCCBRootPath()"},
{ "trigger": ":getCCBRootPath\tCCBReader:getCCBRootPath()", "contents": "getCCBRootPath()"},
{ "trigger": "CCBReader_setAnimationManagers\tCCBReader:setAnimationManagers(_CCDictionary)", "contents": "CCBReader:setAnimationManagers(_CCDictionary)"},
{ "trigger": ":setAnimationManagers\tCCBReader:setAnimationManagers(_CCDictionary)", "contents": "setAnimationManagers(_CCDictionary)"},
{ "trigger": "CCBReader_getOwnerOutletNames\tCCBReader:getOwnerOutletNames()", "contents": "CCBReader:getOwnerOutletNames()"},
{ "trigger": ":getOwnerOutletNames\tCCBReader:getOwnerOutletNames()", "contents": "getOwnerOutletNames()"},
{ "trigger": "CCBReader_new\tCCBReader:new()", "contents": "CCBReader:new()"},
{ "trigger": ":new\tCCBReader:new()", "contents": "new()"},
{ "trigger": "CCBReader_readUTF8\tCCBReader:readUTF8()", "contents": "CCBReader:readUTF8()"},
{ "trigger": ":readUTF8\tCCBReader:readUTF8()", "contents": "readUTF8()"},
{ "trigger": "CCBReader_new_local\tCCBReader:new_local()", "contents": "CCBReader:new_local()"},
{ "trigger": ":new_local\tCCBReader:new_local()", "contents": "new_local()"},
{ "trigger": "CCBReader_setResolutionScale\tCCBReader:setResolutionScale(_num)", "contents": "CCBReader:setResolutionScale(_num)"},
{ "trigger": ":setResolutionScale\tCCBReader:setResolutionScale(_num)", "contents": "setResolutionScale(_num)"},
{ "trigger": "CCBReader_delete\tCCBReader:delete()", "contents": "CCBReader:delete()"},
{ "trigger": ":delete\tCCBReader:delete()", "contents": "delete()"},
{ "trigger": "CCBReader_getOwnerCallbackNames\tCCBReader:getOwnerCallbackNames()", "contents": "CCBReader:getOwnerCallbackNames()"},
{ "trigger": ":getOwnerCallbackNames\tCCBReader:getOwnerCallbackNames()", "contents": "getOwnerCallbackNames()"},
{ "trigger": "CCBReader_getOwnerCallbackNodes\tCCBReader:getOwnerCallbackNodes()", "contents": "CCBReader:getOwnerCallbackNodes()"},
{ "trigger": ":getOwnerCallbackNodes\tCCBReader:getOwnerCallbackNodes()", "contents": "getOwnerCallbackNodes()"},
{ "trigger": "CCControlStepper\t", "contents": "CCControlStepper"},
{ "trigger": "CCControlStepper_getValue\tCCControlStepper:getValue()", "contents": "CCControlStepper:getValue()"},
{ "trigger": ":getValue\tCCControlStepper:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlStepper_setMinimumValue\tCCControlStepper:setMinimumValue(_num)", "contents": "CCControlStepper:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlStepper:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlStepper_setMaximumValue\tCCControlStepper:setMaximumValue(_num)", "contents": "CCControlStepper:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlStepper:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlStepper_setWraps\tCCControlStepper:setWraps(_boo)", "contents": "CCControlStepper:setWraps(_boo)"},
{ "trigger": ":setWraps\tCCControlStepper:setWraps(_boo)", "contents": "setWraps(_boo)"},
{ "trigger": "CCControlStepper_setStepValue\tCCControlStepper:setStepValue(_num)", "contents": "CCControlStepper:setStepValue(_num)"},
{ "trigger": ":setStepValue\tCCControlStepper:setStepValue(_num)", "contents": "setStepValue(_num)"},
{ "trigger": "CCControlStepper_setValue\tCCControlStepper:setValue(_num)", "contents": "CCControlStepper:setValue(_num)"},
{ "trigger": ":setValue\tCCControlStepper:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlStepper_create\tCCControlStepper:create(_CCSprite,_CCSprite)", "contents": "CCControlStepper:create(_CCSprite,_CCSprite)"},
{ "trigger": ":create\tCCControlStepper:create(_CCSprite,_CCSprite)", "contents": "create(_CCSprite,_CCSprite)"},
{ "trigger": "CCControlStepper_isContinuous\tCCControlStepper:isContinuous()", "contents": "CCControlStepper:isContinuous()"},
{ "trigger": ":isContinuous\tCCControlStepper:isContinuous()", "contents": "isContinuous()"},
{ "trigger": "CCControlStepper_setValueWithSendingEvent\tCCControlStepper:setValueWithSendingEvent(_num,_boo)", "contents": "CCControlStepper:setValueWithSendingEvent(_num,_boo)"},
{ "trigger": ":setValueWithSendingEvent\tCCControlStepper:setValueWithSendingEvent(_num,_boo)", "contents": "setValueWithSendingEvent(_num,_boo)"},
{ "trigger": "CCSet\t", "contents": "CCSet"},
{ "trigger": "CCSet_anyObject\tCCSet:anyObject()", "contents": "CCSet:anyObject()"},
{ "trigger": ":anyObject\tCCSet:anyObject()", "contents": "anyObject()"},
{ "trigger": "CCSet_count\tCCSet:count()", "contents": "CCSet:count()"},
{ "trigger": ":count\tCCSet:count()", "contents": "count()"},
{ "trigger": "CCSet_containsObject\tCCSet:containsObject(_CCObject)", "contents": "CCSet:containsObject(_CCObject)"},
{ "trigger": ":containsObject\tCCSet:containsObject(_CCObject)", "contents": "containsObject(_CCObject)"},
{ "trigger": "CCSet_removeAllObjects\tCCSet:removeAllObjects()", "contents": "CCSet:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCSet:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCSet_removeObject\tCCSet:removeObject(_CCObject)", "contents": "CCSet:removeObject(_CCObject)"},
{ "trigger": ":removeObject\tCCSet:removeObject(_CCObject)", "contents": "removeObject(_CCObject)"},
{ "trigger": "CCSet_mutableCopy\tCCSet:mutableCopy()", "contents": "CCSet:mutableCopy()"},
{ "trigger": ":mutableCopy\tCCSet:mutableCopy()", "contents": "mutableCopy()"},
{ "trigger": "CCSet_addObject\tCCSet:addObject(_CCObject)", "contents": "CCSet:addObject(_CCObject)"},
{ "trigger": ":addObject\tCCSet:addObject(_CCObject)", "contents": "addObject(_CCObject)"},
{ "trigger": "CCSet_create\tCCSet:create()", "contents": "CCSet:create()"},
{ "trigger": ":create\tCCSet:create()", "contents": "create()"},
{ "trigger": "CCSet_copy\tCCSet:copy()", "contents": "CCSet:copy()"},
{ "trigger": ":copy\tCCSet:copy()", "contents": "copy()"},
{ "trigger": "CCParticleSnow\t", "contents": "CCParticleSnow"},
{ "trigger": "CCParticleSnow_createWithTotalParticles\tCCParticleSnow:createWithTotalParticles(_num)", "contents": "CCParticleSnow:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSnow:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSnow_create\tCCParticleSnow:create()", "contents": "CCParticleSnow:create()"},
{ "trigger": ":create\tCCParticleSnow:create()", "contents": "create()"},
{ "trigger": "CCPhysicsWorld\t", "contents": "CCPhysicsWorld"},
{ "trigger": "CCPhysicsWorld_addCollisionScriptListener\tCCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)", "contents": "CCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)"},
{ "trigger": ":addCollisionScriptListener\tCCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)", "contents": "addCollisionScriptListener(_listener,_num,_num)"},
{ "trigger": "CCPhysicsWorld_stop\tCCPhysicsWorld:stop()", "contents": "CCPhysicsWorld:stop()"},
{ "trigger": ":stop\tCCPhysicsWorld:stop()", "contents": "stop()"},
{ "trigger": "CCPhysicsWorld_setGravity\tCCPhysicsWorld:setGravity(_num,_num)", "contents": "CCPhysicsWorld:setGravity(_num,_num)"},
{ "trigger": ":setGravity\tCCPhysicsWorld:setGravity(_num,_num)", "contents": "setGravity(_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeBody\tCCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)", "contents": "CCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)"},
{ "trigger": ":removeBody\tCCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)", "contents": "removeBody(_CCPhysicsBody,_boo)"},
{ "trigger": "CCPhysicsWorld_getGravity\tCCPhysicsWorld:getGravity(_num,_num)", "contents": "CCPhysicsWorld:getGravity(_num,_num)"},
{ "trigger": ":getGravity\tCCPhysicsWorld:getGravity(_num,_num)", "contents": "getGravity(_num,_num)"},
{ "trigger": "CCPhysicsWorld_createCircleBody\tCCPhysicsWorld:createCircleBody(_num,_num,_num,_num)", "contents": "CCPhysicsWorld:createCircleBody(_num,_num,_num,_num)"},
{ "trigger": ":createCircleBody\tCCPhysicsWorld:createCircleBody(_num,_num,_num,_num)", "contents": "createCircleBody(_num,_num,_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeCollisionScriptListener\tCCPhysicsWorld:removeCollisionScriptListener(_num,_num)", "contents": "CCPhysicsWorld:removeCollisionScriptListener(_num,_num)"},
{ "trigger": ":removeCollisionScriptListener\tCCPhysicsWorld:removeCollisionScriptListener(_num,_num)", "contents": "removeCollisionScriptListener(_num,_num)"},
{ "trigger": "CCPhysicsWorld_createDebugNode\tCCPhysicsWorld:createDebugNode()", "contents": "CCPhysicsWorld:createDebugNode()"},
{ "trigger": ":createDebugNode\tCCPhysicsWorld:createDebugNode()", "contents": "createDebugNode()"},
{ "trigger": "CCPhysicsWorld_create\tCCPhysicsWorld:create()", "contents": "CCPhysicsWorld:create()"},
{ "trigger": ":create\tCCPhysicsWorld:create()", "contents": "create()"},
{ "trigger": "CCPhysicsWorld_getDamping\tCCPhysicsWorld:getDamping()", "contents": "CCPhysicsWorld:getDamping()"},
{ "trigger": ":getDamping\tCCPhysicsWorld:getDamping()", "contents": "getDamping()"},
{ "trigger": "CCPhysicsWorld_setDamping\tCCPhysicsWorld:setDamping(_num)", "contents": "CCPhysicsWorld:setDamping(_num)"},
{ "trigger": ":setDamping\tCCPhysicsWorld:setDamping(_num)", "contents": "setDamping(_num)"},
{ "trigger": "CCPhysicsWorld_createBoxBody\tCCPhysicsWorld:createBoxBody(_num,_num,_num)", "contents": "CCPhysicsWorld:createBoxBody(_num,_num,_num)"},
{ "trigger": ":createBoxBody\tCCPhysicsWorld:createBoxBody(_num,_num,_num)", "contents": "createBoxBody(_num,_num,_num)"},
{ "trigger": "CCPhysicsWorld_getBodyByTag\tCCPhysicsWorld:getBodyByTag(_num)", "contents": "CCPhysicsWorld:getBodyByTag(_num)"},
{ "trigger": ":getBodyByTag\tCCPhysicsWorld:getBodyByTag(_num)", "contents": "getBodyByTag(_num)"},
{ "trigger": "CCPhysicsWorld_createPolygonBody\tCCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)", "contents": "CCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)"},
{ "trigger": ":createPolygonBody\tCCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)", "contents": "createPolygonBody(_num,_val,_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeAllCollisionListeners\tCCPhysicsWorld:removeAllCollisionListeners()", "contents": "CCPhysicsWorld:removeAllCollisionListeners()"},
{ "trigger": ":removeAllCollisionListeners\tCCPhysicsWorld:removeAllCollisionListeners()", "contents": "removeAllCollisionListeners()"},
{ "trigger": "CCPhysicsWorld_start\tCCPhysicsWorld:start()", "contents": "CCPhysicsWorld:start()"},
{ "trigger": ":start\tCCPhysicsWorld:start()", "contents": "start()"},
{ "trigger": "CCPhysicsWorld_getIdleSpeedThreshold\tCCPhysicsWorld:getIdleSpeedThreshold()", "contents": "CCPhysicsWorld:getIdleSpeedThreshold()"},
{ "trigger": ":getIdleSpeedThreshold\tCCPhysicsWorld:getIdleSpeedThreshold()", "contents": "getIdleSpeedThreshold()"},
{ "trigger": "CCPhysicsWorld_setIdleSpeedThreshold\tCCPhysicsWorld:setIdleSpeedThreshold(_num)", "contents": "CCPhysicsWorld:setIdleSpeedThreshold(_num)"},
{ "trigger": ":setIdleSpeedThreshold\tCCPhysicsWorld:setIdleSpeedThreshold(_num)", "contents": "setIdleSpeedThreshold(_num)"},
{ "trigger": "CCPhysicsWorld_removeBodyByTag\tCCPhysicsWorld:removeBodyByTag(_num,_boo)", "contents": "CCPhysicsWorld:removeBodyByTag(_num,_boo)"},
{ "trigger": ":removeBodyByTag\tCCPhysicsWorld:removeBodyByTag(_num,_boo)", "contents": "removeBodyByTag(_num,_boo)"},
{ "trigger": "CCPhysicsWorld_removeAllBodies\tCCPhysicsWorld:removeAllBodies(_boo)", "contents": "CCPhysicsWorld:removeAllBodies(_boo)"},
{ "trigger": ":removeAllBodies\tCCPhysicsWorld:removeAllBodies(_boo)", "contents": "removeAllBodies(_boo)"},
{ "trigger": "CCPhysicsWorld_addBody\tCCPhysicsWorld:addBody(_CCPhysicsBody)", "contents": "CCPhysicsWorld:addBody(_CCPhysicsBody)"},
{ "trigger": ":addBody\tCCPhysicsWorld:addBody(_CCPhysicsBody)", "contents": "addBody(_CCPhysicsBody)"},
{ "trigger": "CCPhysicsWorld_step\tCCPhysicsWorld:step(_num)", "contents": "CCPhysicsWorld:step(_num)"},
{ "trigger": ":step\tCCPhysicsWorld:step(_num)", "contents": "step(_num)"},
{ "trigger": "CCControlHuePicker\t", "contents": "CCControlHuePicker"},
{ "trigger": "CCControlHuePicker_getHuePercentage\tCCControlHuePicker:getHuePercentage()", "contents": "CCControlHuePicker:getHuePercentage()"},
{ "trigger": ":getHuePercentage\tCCControlHuePicker:getHuePercentage()", "contents": "getHuePercentage()"},
{ "trigger": "CCControlHuePicker_getHue\tCCControlHuePicker:getHue()", "contents": "CCControlHuePicker:getHue()"},
{ "trigger": ":getHue\tCCControlHuePicker:getHue()", "contents": "getHue()"},
{ "trigger": "CCControlHuePicker_setHue\tCCControlHuePicker:setHue(_num)", "contents": "CCControlHuePicker:setHue(_num)"},
{ "trigger": ":setHue\tCCControlHuePicker:setHue(_num)", "contents": "setHue(_num)"},
{ "trigger": "CCControlHuePicker_setHuePercentage\tCCControlHuePicker:setHuePercentage(_num)", "contents": "CCControlHuePicker:setHuePercentage(_num)"},
{ "trigger": ":setHuePercentage\tCCControlHuePicker:setHuePercentage(_num)", "contents": "setHuePercentage(_num)"},
{ "trigger": "CCControlHuePicker_create\tCCControlHuePicker:create(_CCNode,_CCPoint)", "contents": "CCControlHuePicker:create(_CCNode,_CCPoint)"},
{ "trigger": ":create\tCCControlHuePicker:create(_CCNode,_CCPoint)", "contents": "create(_CCNode,_CCPoint)"},
{ "trigger": "CCBProxy\t", "contents": "CCBProxy"},
{ "trigger": "CCBProxy_call\tCCBProxy:call()", "contents": "CCBProxy:call()"},
{ "trigger": ":call\tCCBProxy:call()", "contents": "call()"},
{ "trigger": "CCBProxy_new\tCCBProxy:new()", "contents": "CCBProxy:new()"},
{ "trigger": ":new\tCCBProxy:new()", "contents": "new()"},
{ "trigger": "CCBProxy_getNodeTypeName\tCCBProxy:getNodeTypeName(_CCNode)", "contents": "CCBProxy:getNodeTypeName(_CCNode)"},
{ "trigger": ":getNodeTypeName\tCCBProxy:getNodeTypeName(_CCNode)", "contents": "getNodeTypeName(_CCNode)"},
{ "trigger": "CCBProxy_new_local\tCCBProxy:new_local()", "contents": "CCBProxy:new_local()"},
{ "trigger": ":new_local\tCCBProxy:new_local()", "contents": "new_local()"},
{ "trigger": "CCBProxy_delete\tCCBProxy:delete()", "contents": "CCBProxy:delete()"},
{ "trigger": ":delete\tCCBProxy:delete()", "contents": "delete()"},
{ "trigger": "CCBProxy_createCCBReader\tCCBProxy:createCCBReader()", "contents": "CCBProxy:createCCBReader()"},
{ "trigger": ":createCCBReader\tCCBProxy:createCCBReader()", "contents": "createCCBReader()"},
{ "trigger": "CCBProxy_create\tCCBProxy:create()", "contents": "CCBProxy:create()"},
{ "trigger": ":create\tCCBProxy:create()", "contents": "create()"},
{ "trigger": "CCBProxy_setCallback\tCCBProxy:setCallback(_CCNode)", "contents": "CCBProxy:setCallback(_CCNode)"},
{ "trigger": ":setCallback\tCCBProxy:setCallback(_CCNode)", "contents": "setCallback(_CCNode)"},
{ "trigger": "CCBProxy_readCCBFromFile\tCCBProxy:readCCBFromFile(_str,_CCBReader,_boo)", "contents": "CCBProxy:readCCBFromFile(_str,_CCBReader,_boo)"},
{ "trigger": ":readCCBFromFile\tCCBProxy:readCCBFromFile(_str,_CCBReader,_boo)", "contents": "readCCBFromFile(_str,_CCBReader,_boo)"},
{ "trigger": "ccTexParams\t", "contents": "ccTexParams"},
{ "trigger": "ccTexParams_call\tccTexParams:call()", "contents": "ccTexParams:call()"},
{ "trigger": ":call\tccTexParams:call()", "contents": "call()"},
{ "trigger": "ccTexParams_new\tccTexParams:new()", "contents": "ccTexParams:new()"},
{ "trigger": ":new\tccTexParams:new()", "contents": "new()"},
{ "trigger": "ccTexParams_new_local\tccTexParams:new_local()", "contents": "ccTexParams:new_local()"},
{ "trigger": ":new_local\tccTexParams:new_local()", "contents": "new_local()"},
{ "trigger": "ccTexParams_delete\tccTexParams:delete()", "contents": "ccTexParams:delete()"},
{ "trigger": ":delete\tccTexParams:delete()", "contents": "delete()"},
{ "trigger": "CCCardinalSplineTo\t", "contents": "CCCardinalSplineTo"},
{ "trigger": "CCCardinalSplineTo_getPoints\tCCCardinalSplineTo:getPoints()", "contents": "CCCardinalSplineTo:getPoints()"},
{ "trigger": ":getPoints\tCCCardinalSplineTo:getPoints()", "contents": "getPoints()"},
{ "trigger": "CCCardinalSplineTo_setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "CCCardinalSplineTo:setPoints(_CCPointArray)"},
{ "trigger": ":setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "setPoints(_CCPointArray)"},
{ "trigger": "CCCardinalSplineTo_create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineTo:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCTransitionFadeBL\t", "contents": "CCTransitionFadeBL"},
{ "trigger": "CCTransitionFadeBL_create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "CCTransitionFadeBL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCEaseInOut\t", "contents": "CCEaseInOut"},
{ "trigger": "CCEaseInOut_create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "CCEaseInOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCActionEase\t", "contents": "CCActionEase"},
{ "trigger": "CCActionEase_create\tCCActionEase:create(_CCActionInterval)", "contents": "CCActionEase:create(_CCActionInterval)"},
{ "trigger": ":create\tCCActionEase:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleFlower\t", "contents": "CCParticleFlower"},
{ "trigger": "CCParticleFlower_createWithTotalParticles\tCCParticleFlower:createWithTotalParticles(_num)", "contents": "CCParticleFlower:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFlower:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFlower_create\tCCParticleFlower:create()", "contents": "CCParticleFlower:create()"},
{ "trigger": ":create\tCCParticleFlower:create()", "contents": "create()"},
{ "trigger": "CCCamera\t", "contents": "CCCamera"},
{ "trigger": "CCCamera_call\tCCCamera:call()", "contents": "CCCamera:call()"},
{ "trigger": ":call\tCCCamera:call()", "contents": "call()"},
{ "trigger": "CCCamera_setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "CCCamera:setCenterXYZ(_num,_num,_num)"},
{ "trigger": ":setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "setCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_isDirty\tCCCamera:isDirty()", "contents": "CCCamera:isDirty()"},
{ "trigger": ":isDirty\tCCCamera:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCCamera_setDirty\tCCCamera:setDirty(_boo)", "contents": "CCCamera:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCCamera:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCCamera_init\tCCCamera:init()", "contents": "CCCamera:init()"},
{ "trigger": ":init\tCCCamera:init()", "contents": "init()"},
{ "trigger": "CCCamera_getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "CCCamera:getEyeXYZ(_num,_num,_num)"},
{ "trigger": ":getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "getEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_new\tCCCamera:new()", "contents": "CCCamera:new()"},
{ "trigger": ":new\tCCCamera:new()", "contents": "new()"},
{ "trigger": "CCCamera_getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "CCCamera:getUpXYZ(_num,_num,_num)"},
{ "trigger": ":getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "getUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "CCCamera:getCenterXYZ(_num,_num,_num)"},
{ "trigger": ":getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "getCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_restore\tCCCamera:restore()", "contents": "CCCamera:restore()"},
{ "trigger": ":restore\tCCCamera:restore()", "contents": "restore()"},
{ "trigger": "CCCamera_new_local\tCCCamera:new_local()", "contents": "CCCamera:new_local()"},
{ "trigger": ":new_local\tCCCamera:new_local()", "contents": "new_local()"},
{ "trigger": "CCCamera_delete\tCCCamera:delete()", "contents": "CCCamera:delete()"},
{ "trigger": ":delete\tCCCamera:delete()", "contents": "delete()"},
{ "trigger": "CCCamera_setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "CCCamera:setUpXYZ(_num,_num,_num)"},
{ "trigger": ":setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "setUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getZEye\tCCCamera:getZEye()", "contents": "CCCamera:getZEye()"},
{ "trigger": ":getZEye\tCCCamera:getZEye()", "contents": "getZEye()"},
{ "trigger": "CCCamera_locate\tCCCamera:locate()", "contents": "CCCamera:locate()"},
{ "trigger": ":locate\tCCCamera:locate()", "contents": "locate()"},
{ "trigger": "CCCamera_setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "CCCamera:setEyeXYZ(_num,_num,_num)"},
{ "trigger": ":setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "setEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCTMXMapInfo\t", "contents": "CCTMXMapInfo"},
{ "trigger": "CCTMXMapInfo_call\tCCTMXMapInfo:call()", "contents": "CCTMXMapInfo:call()"},
{ "trigger": ":call\tCCTMXMapInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXMapInfo_initWithXML\tCCTMXMapInfo:initWithXML(_str,_str)", "contents": "CCTMXMapInfo:initWithXML(_str,_str)"},
{ "trigger": ":initWithXML\tCCTMXMapInfo:initWithXML(_str,_str)", "contents": "initWithXML(_str,_str)"},
{ "trigger": "CCTMXMapInfo_setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "CCTMXMapInfo:setTileProperties(_CCDictionary)"},
{ "trigger": ":setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "setTileProperties(_CCDictionary)"},
{ "trigger": "CCTMXMapInfo_getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "CCTMXMapInfo:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXMapInfo_initWithTMXFile\tCCTMXMapInfo:initWithTMXFile(_str)", "contents": "CCTMXMapInfo:initWithTMXFile(_str)"},
{ "trigger": ":initWithTMXFile\tCCTMXMapInfo:initWithTMXFile(_str)", "contents": "initWithTMXFile(_str)"},
{ "trigger": "CCTMXMapInfo_parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "CCTMXMapInfo:parseXMLString(_str)"},
{ "trigger": ":parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "parseXMLString(_str)"},
{ "trigger": "CCTMXMapInfo_getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "CCTMXMapInfo:getStoringCharacters()"},
{ "trigger": ":getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "getStoringCharacters()"},
{ "trigger": "CCTMXMapInfo_delete\tCCTMXMapInfo:delete()", "contents": "CCTMXMapInfo:delete()"},
{ "trigger": ":delete\tCCTMXMapInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXMapInfo_getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "CCTMXMapInfo:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXMapInfo_formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "CCTMXMapInfo:formatWithXML(_str,_str)"},
{ "trigger": ":formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "formatWithXML(_str,_str)"},
{ "trigger": "CCTMXMapInfo_getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "CCTMXMapInfo:getLayerAttribs()"},
{ "trigger": ":getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "getLayerAttribs()"},
{ "trigger": "CCTMXMapInfo_getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "CCTMXMapInfo:getOrientation()"},
{ "trigger": ":getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "getOrientation()"},
{ "trigger": "CCTMXMapInfo_getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "CCTMXMapInfo:getParentGID()"},
{ "trigger": ":getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "getParentGID()"},
{ "trigger": "CCTMXMapInfo_getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "CCTMXMapInfo:getCurrentString()"},
{ "trigger": ":getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "getCurrentString()"},
{ "trigger": "CCTMXMapInfo_getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "CCTMXMapInfo:getParentElement()"},
{ "trigger": ":getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "getParentElement()"},
{ "trigger": "CCTMXMapInfo_getProperties\tCCTMXMapInfo:getProperties()", "contents": "CCTMXMapInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXMapInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXMapInfo_getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "CCTMXMapInfo:getTilesets()"},
{ "trigger": ":getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "getTilesets()"},
{ "trigger": "CCTMXMapInfo_setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "CCTMXMapInfo:setCurrentString(_str)"},
{ "trigger": ":setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "setCurrentString(_str)"},
{ "trigger": "CCTMXMapInfo_parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "CCTMXMapInfo:parseXMLFile(_str)"},
{ "trigger": ":parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "parseXMLFile(_str)"},
{ "trigger": "CCTMXMapInfo_new\tCCTMXMapInfo:new()", "contents": "CCTMXMapInfo:new()"},
{ "trigger": ":new\tCCTMXMapInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXMapInfo_getLayers\tCCTMXMapInfo:getLayers()", "contents": "CCTMXMapInfo:getLayers()"},
{ "trigger": ":getLayers\tCCTMXMapInfo:getLayers()", "contents": "getLayers()"},
{ "trigger": "CCTMXMapInfo_formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "CCTMXMapInfo:formatWithTMXFile(_str)"},
{ "trigger": ":formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "formatWithTMXFile(_str)"},
{ "trigger": "CCTMXMapInfo_getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "CCTMXMapInfo:getTileProperties()"},
{ "trigger": ":getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "getTileProperties()"},
{ "trigger": "CCTMXMapInfo_new_local\tCCTMXMapInfo:new_local()", "contents": "CCTMXMapInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXMapInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXMapInfo_getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "CCTMXMapInfo:getTMXFileName()"},
{ "trigger": ":getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "getTMXFileName()"},
{ "trigger": "CCTMXMapInfo_getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "CCTMXMapInfo:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCTMXMapInfo_setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "CCTMXMapInfo:setTMXFileName(_str)"},
{ "trigger": ":setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "setTMXFileName(_str)"},
{ "trigger": "CCTwirl\t", "contents": "CCTwirl"},
{ "trigger": "CCTwirl_create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "CCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": "CCPhysicsBody\t", "contents": "CCPhysicsBody"},
{ "trigger": "CCPhysicsBody_setCollisionGroup\tCCPhysicsBody:setCollisionGroup(_num)", "contents": "CCPhysicsBody:setCollisionGroup(_num)"},
{ "trigger": ":setCollisionGroup\tCCPhysicsBody:setCollisionGroup(_num)", "contents": "setCollisionGroup(_num)"},
{ "trigger": "CCPhysicsBody_addSegmentShape\tCCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)", "contents": "CCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": ":addSegmentShape\tCCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)", "contents": "addSegmentShape(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": "CCPhysicsBody_setForce\tCCPhysicsBody:setForce(_CCPhysicsVector)", "contents": "CCPhysicsBody:setForce(_CCPhysicsVector)"},
{ "trigger": ":setForce\tCCPhysicsBody:setForce(_CCPhysicsVector)", "contents": "setForce(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsBody_setTorque\tCCPhysicsBody:setTorque(_num)", "contents": "CCPhysicsBody:setTorque(_num)"},
{ "trigger": ":setTorque\tCCPhysicsBody:setTorque(_num)", "contents": "setTorque(_num)"},
{ "trigger": "CCPhysicsBody_setAngle\tCCPhysicsBody:setAngle(_num)", "contents": "CCPhysicsBody:setAngle(_num)"},
{ "trigger": ":setAngle\tCCPhysicsBody:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCPhysicsBody_getAngleVelocityLimit\tCCPhysicsBody:getAngleVelocityLimit()", "contents": "CCPhysicsBody:getAngleVelocityLimit()"},
{ "trigger": ":getAngleVelocityLimit\tCCPhysicsBody:getAngleVelocityLimit()", "contents": "getAngleVelocityLimit()"},
{ "trigger": "CCPhysicsBody_createStaticBody\tCCPhysicsBody:createStaticBody(_CCPhysicsWorld)", "contents": "CCPhysicsBody:createStaticBody(_CCPhysicsWorld)"},
{ "trigger": ":createStaticBody\tCCPhysicsBody:createStaticBody(_CCPhysicsWorld)", "contents": "createStaticBody(_CCPhysicsWorld)"},
{ "trigger": "CCPhysicsBody_activate\tCCPhysicsBody:activate()", "contents": "CCPhysicsBody:activate()"},
{ "trigger": ":activate\tCCPhysicsBody:activate()", "contents": "activate()"},
{ "trigger": "CCPhysicsBody_setRotation\tCCPhysicsBody:setRotation(_num)", "contents": "CCPhysicsBody:setRotation(_num)"},
{ "trigger": ":setRotation\tCCPhysicsBody:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCPhysicsBody_setTag\tCCPhysicsBody:setTag(_num)", "contents": "CCPhysicsBody:setTag(_num)"},
{ "trigger": ":setTag\tCCPhysicsBody:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCPhysicsBody_setCollisionType\tCCPhysicsBody:setCollisionType(_num)", "contents": "CCPhysicsBody:setCollisionType(_num)"},
{ "trigger": ":setCollisionType\tCCPhysicsBody:setCollisionType(_num)", "contents": "setCollisionType(_num)"},
{ "trigger": "CCPhysicsBody_setElasticity\tCCPhysicsBody:setElasticity(_num)", "contents": "CCPhysicsBody:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsBody:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsBody_setVelocity\tCCPhysicsBody:setVelocity(_CCPhysicsVector)", "contents": "CCPhysicsBody:setVelocity(_CCPhysicsVector)"},
{ "trigger": ":setVelocity\tCCPhysicsBody:setVelocity(_CCPhysicsVector)", "contents": "setVelocity(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsBody_getCollisionLayers\tCCPhysicsBody:getCollisionLayers()", "contents": "CCPhysicsBody:getCollisionLayers()"},
{ "trigger": ":getCollisionLayers\tCCPhysicsBody:getCollisionLayers()", "contents": "getCollisionLayers()"},
{ "trigger": "CCPhysicsBody_getVelocity\tCCPhysicsBody:getVelocity(_num,_num)", "contents": "CCPhysicsBody:getVelocity(_num,_num)"},
{ "trigger": ":getVelocity\tCCPhysicsBody:getVelocity(_num,_num)", "contents": "getVelocity(_num,_num)"},
{ "trigger": "CCPhysicsBody_isSensor\tCCPhysicsBody:isSensor()", "contents": "CCPhysicsBody:isSensor()"},
{ "trigger": ":isSensor\tCCPhysicsBody:isSensor()", "contents": "isSensor()"},
{ "trigger": "CCPhysicsBody_unbind\tCCPhysicsBody:unbind()", "contents": "CCPhysicsBody:unbind()"},
{ "trigger": ":unbind\tCCPhysicsBody:unbind()", "contents": "unbind()"},
{ "trigger": "CCPhysicsBody_setPosition\tCCPhysicsBody:setPosition(_const_CCPoint)", "contents": "CCPhysicsBody:setPosition(_const_CCPoint)"},
{ "trigger": ":setPosition\tCCPhysicsBody:setPosition(_const_CCPoint)", "contents": "setPosition(_const_CCPoint)"},
{ "trigger": "CCPhysicsBody_getRotation\tCCPhysicsBody:getRotation()", "contents": "CCPhysicsBody:getRotation()"},
{ "trigger": ":getRotation\tCCPhysicsBody:getRotation()", "contents": "getRotation()"},
{ "trigger": "CCPhysicsBody_sleep\tCCPhysicsBody:sleep()", "contents": "CCPhysicsBody:sleep()"},
{ "trigger": ":sleep\tCCPhysicsBody:sleep()", "contents": "sleep()"},
{ "trigger": "CCPhysicsBody_getFriction\tCCPhysicsBody:getFriction()", "contents": "CCPhysicsBody:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsBody:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsBody_getNode\tCCPhysicsBody:getNode()", "contents": "CCPhysicsBody:getNode()"},
{ "trigger": ":getNode\tCCPhysicsBody:getNode()", "contents": "getNode()"},
{ "trigger": "CCPhysicsBody_create\tCCPhysicsBody:create(_CCPhysicsWorld,_num,_num)", "contents": "CCPhysicsBody:create(_CCPhysicsWorld,_num,_num)"},
{ "trigger": ":create\tCCPhysicsBody:create(_CCPhysicsWorld,_num,_num)", "contents": "create(_CCPhysicsWorld,_num,_num)"},
{ "trigger": "CCPhysicsBody_getCollisionGroup\tCCPhysicsBody:getCollisionGroup()", "contents": "CCPhysicsBody:getCollisionGroup()"},
{ "trigger": ":getCollisionGroup\tCCPhysicsBody:getCollisionGroup()", "contents": "getCollisionGroup()"},
{ "trigger": "CCPhysicsBody_setMass\tCCPhysicsBody:setMass(_num)", "contents": "CCPhysicsBody:setMass(_num)"},
{ "trigger": ":setMass\tCCPhysicsBody:setMass(_num)", "contents": "setMass(_num)"},
{ "trigger": "CCPhysicsBody_setIsSensor\tCCPhysicsBody:setIsSensor(_boo)", "contents": "CCPhysicsBody:setIsSensor(_boo)"},
{ "trigger": ":setIsSensor\tCCPhysicsBody:setIsSensor(_boo)", "contents": "setIsSensor(_boo)"},
{ "trigger": "CCPhysicsBody_getTorque\tCCPhysicsBody:getTorque()", "contents": "CCPhysicsBody:getTorque()"},
{ "trigger": ":getTorque\tCCPhysicsBody:getTorque()", "contents": "getTorque()"},
{ "trigger": "CCPhysicsBody_getVelocityLimit\tCCPhysicsBody:getVelocityLimit()", "contents": "CCPhysicsBody:getVelocityLimit()"},
{ "trigger": ":getVelocityLimit\tCCPhysicsBody:getVelocityLimit()", "contents": "getVelocityLimit()"},
{ "trigger": "CCPhysicsBody_setName\tCCPhysicsBody:setName(_str)", "contents": "CCPhysicsBody:setName(_str)"},
{ "trigger": ":setName\tCCPhysicsBody:setName(_str)", "contents": "setName(_str)"},
{ "trigger": "CCPhysicsBody_removeShape\tCCPhysicsBody:removeShape(_CCPhysicsShape)", "contents": "CCPhysicsBody:removeShape(_CCPhysicsShape)"},
{ "trigger": ":removeShape\tCCPhysicsBody:removeShape(_CCPhysicsShape)", "contents": "removeShape(_CCPhysicsShape)"},
{ "trigger": "CCPhysicsBody_isSleeping\tCCPhysicsBody:isSleeping()", "contents": "CCPhysicsBody:isSleeping()"},
{ "trigger": ":isSleeping\tCCPhysicsBody:isSleeping()", "contents": "isSleeping()"},
{ "trigger": "CCPhysicsBody_removeShapeAtIndex\tCCPhysicsBody:removeShapeAtIndex(_num)", "contents": "CCPhysicsBody:removeShapeAtIndex(_num)"},
{ "trigger": ":removeShapeAtIndex\tCCPhysicsBody:removeShapeAtIndex(_num)", "contents": "removeShapeAtIndex(_num)"},
{ "trigger": "CCPhysicsBody_setFriction\tCCPhysicsBody:setFriction(_num)", "contents": "CCPhysicsBody:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsBody:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCPhysicsBody_dist\tCCPhysicsBody:dist(_CCPhysicsBody)", "contents": "CCPhysicsBody:dist(_CCPhysicsBody)"},
{ "trigger": ":dist\tCCPhysicsBody:dist(_CCPhysicsBody)", "contents": "dist(_CCPhysicsBody)"},
{ "trigger": "CCPhysicsBody_getAngle\tCCPhysicsBody:getAngle()", "contents": "CCPhysicsBody:getAngle()"},
{ "trigger": ":getAngle\tCCPhysicsBody:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCPhysicsBody_setCollisionLayers\tCCPhysicsBody:setCollisionLayers(_num)", "contents": "CCPhysicsBody:setCollisionLayers(_num)"},
{ "trigger": ":setCollisionLayers\tCCPhysicsBody:setCollisionLayers(_num)", "contents": "setCollisionLayers(_num)"},
{ "trigger": "CCPhysicsBody_getTag\tCCPhysicsBody:getTag()", "contents": "CCPhysicsBody:getTag()"},
{ "trigger": ":getTag\tCCPhysicsBody:getTag()", "contents": "getTag()"},
{ "trigger": "CCPhysicsBody_setAngleVelocityLimit\tCCPhysicsBody:setAngleVelocityLimit(_num)", "contents": "CCPhysicsBody:setAngleVelocityLimit(_num)"},
{ "trigger": ":setAngleVelocityLimit\tCCPhysicsBody:setAngleVelocityLimit(_num)", "contents": "setAngleVelocityLimit(_num)"},
{ "trigger": "CCPhysicsBody_getMass\tCCPhysicsBody:getMass()", "contents": "CCPhysicsBody:getMass()"},
{ "trigger": ":getMass\tCCPhysicsBody:getMass()", "contents": "getMass()"},
{ "trigger": "CCPhysicsBody_getPosition\tCCPhysicsBody:getPosition(_num,_num)", "contents": "CCPhysicsBody:getPosition(_num,_num)"},
{ "trigger": ":getPosition\tCCPhysicsBody:getPosition(_num,_num)", "contents": "getPosition(_num,_num)"},
{ "trigger": "CCPhysicsBody_getElasticity\tCCPhysicsBody:getElasticity()", "contents": "CCPhysicsBody:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsBody:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsBody_resetForces\tCCPhysicsBody:resetForces()", "contents": "CCPhysicsBody:resetForces()"},
{ "trigger": ":resetForces\tCCPhysicsBody:resetForces()", "contents": "resetForces()"},
{ "trigger": "CCPhysicsBody_applyForce\tCCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)", "contents": "CCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)"},
{ "trigger": ":applyForce\tCCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)", "contents": "applyForce(_CCPhysicsVector,_num,_num)"},
{ "trigger": "CCPhysicsBody_addBoxShape\tCCPhysicsBody:addBoxShape(_num,_num)", "contents": "CCPhysicsBody:addBoxShape(_num,_num)"},
{ "trigger": ":addBoxShape\tCCPhysicsBody:addBoxShape(_num,_num)", "contents": "addBoxShape(_num,_num)"},
{ "trigger": "CCPhysicsBody_setAngleVelocity\tCCPhysicsBody:setAngleVelocity(_num)", "contents": "CCPhysicsBody:setAngleVelocity(_num)"},
{ "trigger": ":setAngleVelocity\tCCPhysicsBody:setAngleVelocity(_num)", "contents": "setAngleVelocity(_num)"},
{ "trigger": "CCPhysicsBody_setInertia\tCCPhysicsBody:setInertia(_num)", "contents": "CCPhysicsBody:setInertia(_num)"},
{ "trigger": ":setInertia\tCCPhysicsBody:setInertia(_num)", "contents": "setInertia(_num)"},
{ "trigger": "CCPhysicsBody_getAngleVelocity\tCCPhysicsBody:getAngleVelocity()", "contents": "CCPhysicsBody:getAngleVelocity()"},
{ "trigger": ":getAngleVelocity\tCCPhysicsBody:getAngleVelocity()", "contents": "getAngleVelocity()"},
{ "trigger": "CCPhysicsBody_setVelocityLimit\tCCPhysicsBody:setVelocityLimit(_num)", "contents": "CCPhysicsBody:setVelocityLimit(_num)"},
{ "trigger": ":setVelocityLimit\tCCPhysicsBody:setVelocityLimit(_num)", "contents": "setVelocityLimit(_num)"},
{ "trigger": "CCPhysicsBody_defaultStaticBody\tCCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)", "contents": "CCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)"},
{ "trigger": ":defaultStaticBody\tCCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)", "contents": "defaultStaticBody(_CCPhysicsWorld)"},
{ "trigger": "CCPhysicsBody_getForce\tCCPhysicsBody:getForce(_num,_num)", "contents": "CCPhysicsBody:getForce(_num,_num)"},
{ "trigger": ":getForce\tCCPhysicsBody:getForce(_num,_num)", "contents": "getForce(_num,_num)"},
{ "trigger": "CCPhysicsBody_getInertia\tCCPhysicsBody:getInertia()", "contents": "CCPhysicsBody:getInertia()"},
{ "trigger": ":getInertia\tCCPhysicsBody:getInertia()", "contents": "getInertia()"},
{ "trigger": "CCPhysicsBody_addPolygonShape\tCCPhysicsBody:addPolygonShape(_num,_num,_num)", "contents": "CCPhysicsBody:addPolygonShape(_num,_num,_num)"},
{ "trigger": ":addPolygonShape\tCCPhysicsBody:addPolygonShape(_num,_num,_num)", "contents": "addPolygonShape(_num,_num,_num)"},
{ "trigger": "CCPhysicsBody_applyImpulse\tCCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)", "contents": "CCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)"},
{ "trigger": ":applyImpulse\tCCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)", "contents": "applyImpulse(_CCPhysicsVector,_num,_num)"},
{ "trigger": "CCPhysicsBody_removeAllShape\tCCPhysicsBody:removeAllShape()", "contents": "CCPhysicsBody:removeAllShape()"},
{ "trigger": ":removeAllShape\tCCPhysicsBody:removeAllShape()", "contents": "removeAllShape()"},
{ "trigger": "CCPhysicsBody_removeSelf\tCCPhysicsBody:removeSelf(_boo)", "contents": "CCPhysicsBody:removeSelf(_boo)"},
{ "trigger": ":removeSelf\tCCPhysicsBody:removeSelf(_boo)", "contents": "removeSelf(_boo)"},
{ "trigger": "CCPhysicsBody_addCircleShape\tCCPhysicsBody:addCircleShape(_num,_num,_num)", "contents": "CCPhysicsBody:addCircleShape(_num,_num,_num)"},
{ "trigger": ":addCircleShape\tCCPhysicsBody:addCircleShape(_num,_num,_num)", "contents": "addCircleShape(_num,_num,_num)"},
{ "trigger": "CCPhysicsBody_getName\tCCPhysicsBody:getName()", "contents": "CCPhysicsBody:getName()"},
{ "trigger": ":getName\tCCPhysicsBody:getName()", "contents": "getName()"},
{ "trigger": "CCPhysicsBody_getCollisionType\tCCPhysicsBody:getCollisionType()", "contents": "CCPhysicsBody:getCollisionType()"},
{ "trigger": ":getCollisionType\tCCPhysicsBody:getCollisionType()", "contents": "getCollisionType()"},
{ "trigger": "CCPhysicsBody_bind\tCCPhysicsBody:bind(_CCNode)", "contents": "CCPhysicsBody:bind(_CCNode)"},
{ "trigger": ":bind\tCCPhysicsBody:bind(_CCNode)", "contents": "bind(_CCNode)"},
{ "trigger": "CCTransitionShrinkGrow\t", "contents": "CCTransitionShrinkGrow"},
{ "trigger": "CCTransitionShrinkGrow_create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "CCTransitionShrinkGrow:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCMenuItemFont\t", "contents": "CCMenuItemFont"},
{ "trigger": "CCMenuItemFont_fontName\tCCMenuItemFont:fontName()", "contents": "CCMenuItemFont:fontName()"},
{ "trigger": ":fontName\tCCMenuItemFont:fontName()", "contents": "fontName()"},
{ "trigger": "CCMenuItemFont_setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "CCMenuItemFont:setFontName(_str)"},
{ "trigger": ":setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCMenuItemFont_setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "CCMenuItemFont:setFontNameObj(_str)"},
{ "trigger": ":setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "setFontNameObj(_str)"},
{ "trigger": "CCMenuItemFont_setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "CCMenuItemFont:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCMenuItemFont_setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "CCMenuItemFont:setFontSizeObj(_num)"},
{ "trigger": ":setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "setFontSizeObj(_num)"},
{ "trigger": "CCMenuItemFont_fontSize\tCCMenuItemFont:fontSize()", "contents": "CCMenuItemFont:fontSize()"},
{ "trigger": ":fontSize\tCCMenuItemFont:fontSize()", "contents": "fontSize()"},
{ "trigger": "CCMenuItemFont_create\tCCMenuItemFont:create(_str)", "contents": "CCMenuItemFont:create(_str)"},
{ "trigger": ":create\tCCMenuItemFont:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCMenuItemFont_fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "CCMenuItemFont:fontNameObj()"},
{ "trigger": ":fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "fontNameObj()"},
{ "trigger": "CCMenuItemFont_fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "CCMenuItemFont:fontSizeObj()"},
{ "trigger": ":fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "fontSizeObj()"},
{ "trigger": "CCActionCamera\t", "contents": "CCActionCamera"},
{ "trigger": "ProcessBase\t", "contents": "ProcessBase"},
{ "trigger": "ProcessBase_stop\tProcessBase:stop()", "contents": "ProcessBase:stop()"},
{ "trigger": ":stop\tProcessBase:stop()", "contents": "stop()"},
{ "trigger": "ProcessBase_gotoFrame\tProcessBase:gotoFrame(_num)", "contents": "ProcessBase:gotoFrame(_num)"},
{ "trigger": ":gotoFrame\tProcessBase:gotoFrame(_num)", "contents": "gotoFrame(_num)"},
{ "trigger": "ProcessBase_getIsComplete\tProcessBase:getIsComplete()", "contents": "ProcessBase:getIsComplete()"},
{ "trigger": ":getIsComplete\tProcessBase:getIsComplete()", "contents": "getIsComplete()"},
{ "trigger": "ProcessBase_setIsComplete\tProcessBase:setIsComplete(_boo)", "contents": "ProcessBase:setIsComplete(_boo)"},
{ "trigger": ":setIsComplete\tProcessBase:setIsComplete(_boo)", "contents": "setIsComplete(_boo)"},
{ "trigger": "ProcessBase_setLoopType\tProcessBase:setLoopType(_num)", "contents": "ProcessBase:setLoopType(_num)"},
{ "trigger": ":setLoopType\tProcessBase:setLoopType(_num)", "contents": "setLoopType(_num)"},
{ "trigger": "ProcessBase_setRawDuration\tProcessBase:setRawDuration(_num)", "contents": "ProcessBase:setRawDuration(_num)"},
{ "trigger": ":setRawDuration\tProcessBase:setRawDuration(_num)", "contents": "setRawDuration(_num)"},
{ "trigger": "ProcessBase_play\tProcessBase:play(_userdata,_num,_num,_num,_num)", "contents": "ProcessBase:play(_userdata,_num,_num,_num,_num)"},
{ "trigger": ":play\tProcessBase:play(_userdata,_num,_num,_num,_num)", "contents": "play(_userdata,_num,_num,_num,_num)"},
{ "trigger": "ProcessBase_setAnimationScale\tProcessBase:setAnimationScale(_num)", "contents": "ProcessBase:setAnimationScale(_num)"},
{ "trigger": ":setAnimationScale\tProcessBase:setAnimationScale(_num)", "contents": "setAnimationScale(_num)"},
{ "trigger": "ProcessBase_setIsPlaying\tProcessBase:setIsPlaying(_boo)", "contents": "ProcessBase:setIsPlaying(_boo)"},
{ "trigger": ":setIsPlaying\tProcessBase:setIsPlaying(_boo)", "contents": "setIsPlaying(_boo)"},
{ "trigger": "ProcessBase_setAnimationInternal\tProcessBase:setAnimationInternal(_num)", "contents": "ProcessBase:setAnimationInternal(_num)"},
{ "trigger": ":setAnimationInternal\tProcessBase:setAnimationInternal(_num)", "contents": "setAnimationInternal(_num)"},
{ "trigger": "ProcessBase_getIsPlaying\tProcessBase:getIsPlaying()", "contents": "ProcessBase:getIsPlaying()"},
{ "trigger": ":getIsPlaying\tProcessBase:getIsPlaying()", "contents": "getIsPlaying()"},
{ "trigger": "ProcessBase_getAnimationScale\tProcessBase:getAnimationScale()", "contents": "ProcessBase:getAnimationScale()"},
{ "trigger": ":getAnimationScale\tProcessBase:getAnimationScale()", "contents": "getAnimationScale()"},
{ "trigger": "ProcessBase_getAnimationInternal\tProcessBase:getAnimationInternal()", "contents": "ProcessBase:getAnimationInternal()"},
{ "trigger": ":getAnimationInternal\tProcessBase:getAnimationInternal()", "contents": "getAnimationInternal()"},
{ "trigger": "ProcessBase_getCurrentFrameIndex\tProcessBase:getCurrentFrameIndex()", "contents": "ProcessBase:getCurrentFrameIndex()"},
{ "trigger": ":getCurrentFrameIndex\tProcessBase:getCurrentFrameIndex()", "contents": "getCurrentFrameIndex()"},
{ "trigger": "ProcessBase_pause\tProcessBase:pause()", "contents": "ProcessBase:pause()"},
{ "trigger": ":pause\tProcessBase:pause()", "contents": "pause()"},
{ "trigger": "ProcessBase_getIsPause\tProcessBase:getIsPause()", "contents": "ProcessBase:getIsPause()"},
{ "trigger": ":getIsPause\tProcessBase:getIsPause()", "contents": "getIsPause()"},
{ "trigger": "ProcessBase_getRawDuration\tProcessBase:getRawDuration()", "contents": "ProcessBase:getRawDuration()"},
{ "trigger": ":getRawDuration\tProcessBase:getRawDuration()", "contents": "getRawDuration()"},
{ "trigger": "ProcessBase_resume\tProcessBase:resume()", "contents": "ProcessBase:resume()"},
{ "trigger": ":resume\tProcessBase:resume()", "contents": "resume()"},
{ "trigger": "ProcessBase_setCurrentPercent\tProcessBase:setCurrentPercent(_num)", "contents": "ProcessBase:setCurrentPercent(_num)"},
{ "trigger": ":setCurrentPercent\tProcessBase:setCurrentPercent(_num)", "contents": "setCurrentPercent(_num)"},
{ "trigger": "ProcessBase_getLoopType\tProcessBase:getLoopType()", "contents": "ProcessBase:getLoopType()"},
{ "trigger": ":getLoopType\tProcessBase:getLoopType()", "contents": "getLoopType()"},
{ "trigger": "ProcessBase_getCurrentPercent\tProcessBase:getCurrentPercent()", "contents": "ProcessBase:getCurrentPercent()"},
{ "trigger": ":getCurrentPercent\tProcessBase:getCurrentPercent()", "contents": "getCurrentPercent()"},
{ "trigger": "ProcessBase_getTweenEasing\tProcessBase:getTweenEasing()", "contents": "ProcessBase:getTweenEasing()"},
{ "trigger": ":getTweenEasing\tProcessBase:getTweenEasing()", "contents": "getTweenEasing()"},
{ "trigger": "ProcessBase_setIsPause\tProcessBase:setIsPause(_boo)", "contents": "ProcessBase:setIsPause(_boo)"},
{ "trigger": ":setIsPause\tProcessBase:setIsPause(_boo)", "contents": "setIsPause(_boo)"},
{ "trigger": "ProcessBase_setTweenEasing\tProcessBase:setTweenEasing(_num)", "contents": "ProcessBase:setTweenEasing(_num)"},
{ "trigger": ":setTweenEasing\tProcessBase:setTweenEasing(_num)", "contents": "setTweenEasing(_num)"},
{ "trigger": "HSV\t", "contents": "HSV"},
{ "trigger": "CCTransitionFade\t", "contents": "CCTransitionFade"},
{ "trigger": "CCTransitionFade_create\tCCTransitionFade:create(_num,_CCScene)", "contents": "CCTransitionFade:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFade:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCKeypadDispatcher\t", "contents": "CCKeypadDispatcher"},
{ "trigger": "CCKeypadDispatcher_dispatchKeypadMSG\tCCKeypadDispatcher:dispatchKeypadMSG(_num)", "contents": "CCKeypadDispatcher:dispatchKeypadMSG(_num)"},
{ "trigger": ":dispatchKeypadMSG\tCCKeypadDispatcher:dispatchKeypadMSG(_num)", "contents": "dispatchKeypadMSG(_num)"},
{ "trigger": "CCNetwork\t", "contents": "CCNetwork"},
{ "trigger": "CCNetwork_isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "CCNetwork:isHostNameReachable(_str)"},
{ "trigger": ":isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "isHostNameReachable(_str)"},
{ "trigger": "CCNetwork_createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "CCNetwork:createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": ":createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": "CCNetwork_isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "CCNetwork:isInternetConnectionAvailable()"},
{ "trigger": ":isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "isInternetConnectionAvailable()"},
{ "trigger": "CCNetwork_isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "CCNetwork:isLocalWiFiAvailable()"},
{ "trigger": ":isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "isLocalWiFiAvailable()"},
{ "trigger": "CCNetwork_getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "CCNetwork:getInternetConnectionStatus()"},
{ "trigger": ":getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "getInternetConnectionStatus()"},
{ "trigger": "CCClippingNode\t", "contents": "CCClippingNode"},
{ "trigger": "CCClippingNode_setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "CCClippingNode:setAlphaThreshold(_num)"},
{ "trigger": ":setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "setAlphaThreshold(_num)"},
{ "trigger": "CCClippingNode_getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "CCClippingNode:getAlphaThreshold()"},
{ "trigger": ":getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "getAlphaThreshold()"},
{ "trigger": "CCClippingNode_getStencil\tCCClippingNode:getStencil()", "contents": "CCClippingNode:getStencil()"},
{ "trigger": ":getStencil\tCCClippingNode:getStencil()", "contents": "getStencil()"},
{ "trigger": "CCClippingNode_setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "CCClippingNode:setStencil(_CCNode)"},
{ "trigger": ":setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "setStencil(_CCNode)"},
{ "trigger": "CCClippingNode_setInverted\tCCClippingNode:setInverted(_boo)", "contents": "CCClippingNode:setInverted(_boo)"},
{ "trigger": ":setInverted\tCCClippingNode:setInverted(_boo)", "contents": "setInverted(_boo)"},
{ "trigger": "CCClippingNode_isInverted\tCCClippingNode:isInverted()", "contents": "CCClippingNode:isInverted()"},
{ "trigger": ":isInverted\tCCClippingNode:isInverted()", "contents": "isInverted()"},
{ "trigger": "CCClippingNode_create\tCCClippingNode:create()", "contents": "CCClippingNode:create()"},
{ "trigger": ":create\tCCClippingNode:create()", "contents": "create()"},
{ "trigger": "CCNodeRGBA\t", "contents": "CCNodeRGBA"},
{ "trigger": "CCNodeRGBA_getColor\tCCNodeRGBA:getColor()", "contents": "CCNodeRGBA:getColor()"},
{ "trigger": ":getColor\tCCNodeRGBA:getColor()", "contents": "getColor()"},
{ "trigger": "CCNodeRGBA_setOpacity\tCCNodeRGBA:setOpacity(_num)", "contents": "CCNodeRGBA:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCNodeRGBA:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCNodeRGBA_getDisplayedColor\tCCNodeRGBA:getDisplayedColor()", "contents": "CCNodeRGBA:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCNodeRGBA:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCNodeRGBA_isOpacityModifyRGB\tCCNodeRGBA:isOpacityModifyRGB()", "contents": "CCNodeRGBA:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCNodeRGBA:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCNodeRGBA_setOpacityModifyRGB\tCCNodeRGBA:setOpacityModifyRGB(_boo)", "contents": "CCNodeRGBA:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCNodeRGBA:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCNodeRGBA_create\tCCNodeRGBA:create()", "contents": "CCNodeRGBA:create()"},
{ "trigger": ":create\tCCNodeRGBA:create()", "contents": "create()"},
{ "trigger": "CCNodeRGBA_setColor\tCCNodeRGBA:setColor(_ccColor3B)", "contents": "CCNodeRGBA:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCNodeRGBA:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCNodeRGBA_updateDisplayedOpacity\tCCNodeRGBA:updateDisplayedOpacity(_num)", "contents": "CCNodeRGBA:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCNodeRGBA:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCNodeRGBA_getDisplayedOpacity\tCCNodeRGBA:getDisplayedOpacity()", "contents": "CCNodeRGBA:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCNodeRGBA:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCNodeRGBA_isCascadeColorEnabled\tCCNodeRGBA:isCascadeColorEnabled()", "contents": "CCNodeRGBA:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCNodeRGBA:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCNodeRGBA_isCascadeOpacityEnabled\tCCNodeRGBA:isCascadeOpacityEnabled()", "contents": "CCNodeRGBA:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCNodeRGBA:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCNodeRGBA_setCascadeOpacityEnabled\tCCNodeRGBA:setCascadeOpacityEnabled(_boo)", "contents": "CCNodeRGBA:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCNodeRGBA:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCNodeRGBA_setCascadeColorEnabled\tCCNodeRGBA:setCascadeColorEnabled(_boo)", "contents": "CCNodeRGBA:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCNodeRGBA:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCNodeRGBA_getOpacity\tCCNodeRGBA:getOpacity()", "contents": "CCNodeRGBA:getOpacity()"},
{ "trigger": ":getOpacity\tCCNodeRGBA:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCNodeRGBA_updateDisplayedColor\tCCNodeRGBA:updateDisplayedColor(_ccColor3B)", "contents": "CCNodeRGBA:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCNodeRGBA:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "cc_timeval\t", "contents": "cc_timeval"},
{ "trigger": "CCProgressTimer\t", "contents": "CCProgressTimer"},
{ "trigger": "CCProgressTimer_setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "CCProgressTimer:setSprite(_CCSprite)"},
{ "trigger": ":setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "setSprite(_CCSprite)"},
{ "trigger": "CCProgressTimer_isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "CCProgressTimer:isReverseDirection()"},
{ "trigger": ":isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "isReverseDirection()"},
{ "trigger": "CCProgressTimer_setType\tCCProgressTimer:setType(_num)", "contents": "CCProgressTimer:setType(_num)"},
{ "trigger": ":setType\tCCProgressTimer:setType(_num)", "contents": "setType(_num)"},
{ "trigger": "CCProgressTimer_getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "CCProgressTimer:getBarChangeRate()"},
{ "trigger": ":getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "getBarChangeRate()"},
{ "trigger": "CCProgressTimer_setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "CCProgressTimer:setMidpoint(_CCPoint)"},
{ "trigger": ":setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "setMidpoint(_CCPoint)"},
{ "trigger": "CCProgressTimer_create\tCCProgressTimer:create(_CCSprite)", "contents": "CCProgressTimer:create(_CCSprite)"},
{ "trigger": ":create\tCCProgressTimer:create(_CCSprite)", "contents": "create(_CCSprite)"},
{ "trigger": "CCProgressTimer_getType\tCCProgressTimer:getType()", "contents": "CCProgressTimer:getType()"},
{ "trigger": ":getType\tCCProgressTimer:getType()", "contents": "getType()"},
{ "trigger": "CCProgressTimer_getPercentage\tCCProgressTimer:getPercentage()", "contents": "CCProgressTimer:getPercentage()"},
{ "trigger": ":getPercentage\tCCProgressTimer:getPercentage()", "contents": "getPercentage()"},
{ "trigger": "CCProgressTimer_setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "CCProgressTimer:setBarChangeRate(_CCPoint)"},
{ "trigger": ":setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "setBarChangeRate(_CCPoint)"},
{ "trigger": "CCProgressTimer_setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "CCProgressTimer:setPercentage(_num)"},
{ "trigger": ":setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "setPercentage(_num)"},
{ "trigger": "CCProgressTimer_setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "CCProgressTimer:setReverseProgress(_boo)"},
{ "trigger": ":setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "setReverseProgress(_boo)"},
{ "trigger": "CCProgressTimer_getSprite\tCCProgressTimer:getSprite()", "contents": "CCProgressTimer:getSprite()"},
{ "trigger": ":getSprite\tCCProgressTimer:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCProgressTimer_getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "CCProgressTimer:getMidpoint()"},
{ "trigger": ":getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "getMidpoint()"},
{ "trigger": "CCProgressTimer_setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "CCProgressTimer:setReverseDirection(_boo)"},
{ "trigger": ":setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "setReverseDirection(_boo)"},
{ "trigger": "CCTransitionTurnOffTiles\t", "contents": "CCTransitionTurnOffTiles"},
{ "trigger": "CCTransitionTurnOffTiles_create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "CCTransitionTurnOffTiles:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCEaseSineInOut\t", "contents": "CCEaseSineInOut"},
{ "trigger": "CCEaseSineInOut_create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "CCEaseSineInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleGalaxy\t", "contents": "CCParticleGalaxy"},
{ "trigger": "CCParticleGalaxy_createWithTotalParticles\tCCParticleGalaxy:createWithTotalParticles(_num)", "contents": "CCParticleGalaxy:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleGalaxy:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleGalaxy_create\tCCParticleGalaxy:create()", "contents": "CCParticleGalaxy:create()"},
{ "trigger": ":create\tCCParticleGalaxy:create()", "contents": "create()"},
{ "trigger": "CCTileMapAtlas\t", "contents": "CCTileMapAtlas"},
{ "trigger": "CCTileMapAtlas_call\tCCTileMapAtlas:call()", "contents": "CCTileMapAtlas:call()"},
{ "trigger": ":call\tCCTileMapAtlas:call()", "contents": "call()"},
{ "trigger": "CCTileMapAtlas_new\tCCTileMapAtlas:new()", "contents": "CCTileMapAtlas:new()"},
{ "trigger": ":new\tCCTileMapAtlas:new()", "contents": "new()"},
{ "trigger": "CCTileMapAtlas_releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "CCTileMapAtlas:releaseMap()"},
{ "trigger": ":releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTileMapAtlas_new_local\tCCTileMapAtlas:new_local()", "contents": "CCTileMapAtlas:new_local()"},
{ "trigger": ":new_local\tCCTileMapAtlas:new_local()", "contents": "new_local()"},
{ "trigger": "CCTileMapAtlas_setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "CCTileMapAtlas:setTile(_ccColor3B,_CCPoint)"},
{ "trigger": ":setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "setTile(_ccColor3B,_CCPoint)"},
{ "trigger": "CCTileMapAtlas_delete\tCCTileMapAtlas:delete()", "contents": "CCTileMapAtlas:delete()"},
{ "trigger": ":delete\tCCTileMapAtlas:delete()", "contents": "delete()"},
{ "trigger": "CCTileMapAtlas_initWithTileFile\tCCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)", "contents": "CCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)"},
{ "trigger": ":initWithTileFile\tCCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)", "contents": "initWithTileFile(_str,_str,_num,_num)"},
{ "trigger": "CCTileMapAtlas_tileAt\tCCTileMapAtlas:tileAt(_CCPoint)", "contents": "CCTileMapAtlas:tileAt(_CCPoint)"},
{ "trigger": ":tileAt\tCCTileMapAtlas:tileAt(_CCPoint)", "contents": "tileAt(_CCPoint)"},
{ "trigger": "CCTileMapAtlas_create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "CCTileMapAtlas:create(_str,_str,_num,_num)"},
{ "trigger": ":create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "create(_str,_str,_num,_num)"},
{ "trigger": "ccFontDefinition\t", "contents": "ccFontDefinition"},
{ "trigger": "ccFontDefinition_call\tccFontDefinition:call()", "contents": "ccFontDefinition:call()"},
{ "trigger": ":call\tccFontDefinition:call()", "contents": "call()"},
{ "trigger": "ccFontDefinition_new\tccFontDefinition:new()", "contents": "ccFontDefinition:new()"},
{ "trigger": ":new\tccFontDefinition:new()", "contents": "new()"},
{ "trigger": "ccFontDefinition_new_local\tccFontDefinition:new_local()", "contents": "ccFontDefinition:new_local()"},
{ "trigger": ":new_local\tccFontDefinition:new_local()", "contents": "new_local()"},
{ "trigger": "CCTransitionFlipX\t", "contents": "CCTransitionFlipX"},
{ "trigger": "CCTransitionFlipX_create\tCCTransitionFlipX:create(_num,_CCScene)", "contents": "CCTransitionFlipX:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipX:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCOrbitCamera\t", "contents": "CCOrbitCamera"},
{ "trigger": "CCOrbitCamera_sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "CCOrbitCamera:sphericalRadius(_num,_num,_num)"},
{ "trigger": ":sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "sphericalRadius(_num,_num,_num)"},
{ "trigger": "CCOrbitCamera_create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "CCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": ":create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": "CCTransitionFlipY\t", "contents": "CCTransitionFlipY"},
{ "trigger": "CCTransitionFlipY_create\tCCTransitionFlipY:create(_num,_CCScene)", "contents": "CCTransitionFlipY:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipY:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCToggleVisibility\t", "contents": "CCToggleVisibility"},
{ "trigger": "CCToggleVisibility_create\tCCToggleVisibility:create()", "contents": "CCToggleVisibility:create()"},
{ "trigger": ":create\tCCToggleVisibility:create()", "contents": "create()"},
{ "trigger": "CCShaky3D\t", "contents": "CCShaky3D"},
{ "trigger": "CCShaky3D_create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShaky3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCCatmullRomTo\t", "contents": "CCCatmullRomTo"},
{ "trigger": "CCCatmullRomTo_create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "CCCatmullRomTo:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCWaves\t", "contents": "CCWaves"},
{ "trigger": "CCWaves_create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "CCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": ":create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": "CCSpriteBatchNode\t", "contents": "CCSpriteBatchNode"},
{ "trigger": "CCSpriteBatchNode_getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "CCSpriteBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSpriteBatchNode_insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:insertChild(_CCSprite,_num)"},
{ "trigger": ":insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "insertChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": ":atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "CCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": ":rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "CCSpriteBatchNode:appendChild(_CCSprite)"},
{ "trigger": ":appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "appendChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_create\tCCSpriteBatchNode:create(_str)", "contents": "CCSpriteBatchNode:create(_str)"},
{ "trigger": ":create\tCCSpriteBatchNode:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCSpriteBatchNode_setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "CCSpriteBatchNode:removeChildAtIndex(_num,_boo)"},
{ "trigger": ":removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "removeChildAtIndex(_num,_boo)"},
{ "trigger": "CCSpriteBatchNode_lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCSpriteBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSpriteBatchNode_removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "CCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": ":removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_getTexture\tCCSpriteBatchNode:getTexture()", "contents": "CCSpriteBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteBatchNode_highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCEaseBounce\t", "contents": "CCEaseBounce"},
{ "trigger": "CCEaseBounce_create\tCCEaseBounce:create(_CCActionInterval)", "contents": "CCEaseBounce:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounce:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCStopGrid\t", "contents": "CCStopGrid"},
{ "trigger": "CCStopGrid_create\tCCStopGrid:create()", "contents": "CCStopGrid:create()"},
{ "trigger": ":create\tCCStopGrid:create()", "contents": "create()"},
{ "trigger": "CCSize\t", "contents": "CCSize"},
{ "trigger": "CCSize_call\tCCSize:call()", "contents": "CCSize:call()"},
{ "trigger": ":call\tCCSize:call()", "contents": "call()"},
{ "trigger": "CCSize_new\tCCSize:new()", "contents": "CCSize:new()"},
{ "trigger": ":new\tCCSize:new()", "contents": "new()"},
{ "trigger": "CCSize_setSize\tCCSize:setSize(_num,_num)", "contents": "CCSize:setSize(_num,_num)"},
{ "trigger": ":setSize\tCCSize:setSize(_num,_num)", "contents": "setSize(_num,_num)"},
{ "trigger": "CCSize_equals\tCCSize:equals(_CCSize)", "contents": "CCSize:equals(_CCSize)"},
{ "trigger": ":equals\tCCSize:equals(_CCSize)", "contents": "equals(_CCSize)"},
{ "trigger": "CCSize_new_local\tCCSize:new_local()", "contents": "CCSize:new_local()"},
{ "trigger": ":new_local\tCCSize:new_local()", "contents": "new_local()"},
{ "trigger": "CCArray\t", "contents": "CCArray"},
{ "trigger": "CCArray_count\tCCArray:count()", "contents": "CCArray:count()"},
{ "trigger": ":count\tCCArray:count()", "contents": "count()"},
{ "trigger": "CCArray_fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "CCArray:fastRemoveObject(_CCObject)"},
{ "trigger": ":fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "fastRemoveObject(_CCObject)"},
{ "trigger": "CCArray_exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "CCArray:exchangeObjectAtIndex(_num,_num)"},
{ "trigger": ":exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "exchangeObjectAtIndex(_num,_num)"},
{ "trigger": "CCArray_containsObject\tCCArray:containsObject(_CCObject)", "contents": "CCArray:containsObject(_CCObject)"},
{ "trigger": ":containsObject\tCCArray:containsObject(_CCObject)", "contents": "containsObject(_CCObject)"},
{ "trigger": "CCArray_removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "CCArray:removeLastObject(_boo)"},
{ "trigger": ":removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "removeLastObject(_boo)"},
{ "trigger": "CCArray_objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "CCArray:objectAtIndex(_num)"},
{ "trigger": ":objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "objectAtIndex(_num)"},
{ "trigger": "CCArray_addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "CCArray:addObjectsFromArray(_CCArray)"},
{ "trigger": ":addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "addObjectsFromArray(_CCArray)"},
{ "trigger": "CCArray_fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "CCArray:fastRemoveObjectAtIndex(_num)"},
{ "trigger": ":fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "fastRemoveObjectAtIndex(_num)"},
{ "trigger": "CCArray_createWithContentsOfFileThreadSafe\tCCArray:createWithContentsOfFileThreadSafe(_str)", "contents": "CCArray:createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": ":createWithContentsOfFileThreadSafe\tCCArray:createWithContentsOfFileThreadSafe(_str)", "contents": "createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": "CCArray_createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "CCArray:createWithObject(_CCObject)"},
{ "trigger": ":createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "createWithObject(_CCObject)"},
{ "trigger": "CCArray_createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "CCArray:createWithCapacity(_num)"},
{ "trigger": ":createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "createWithCapacity(_num)"},
{ "trigger": "CCArray_capacity\tCCArray:capacity()", "contents": "CCArray:capacity()"},
{ "trigger": ":capacity\tCCArray:capacity()", "contents": "capacity()"},
{ "trigger": "CCArray_replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "CCArray:replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": ":replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": "CCArray_removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "CCArray:removeObjectsInArray(_CCArray)"},
{ "trigger": ":removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "removeObjectsInArray(_CCArray)"},
{ "trigger": "CCArray_randomObject\tCCArray:randomObject()", "contents": "CCArray:randomObject()"},
{ "trigger": ":randomObject\tCCArray:randomObject()", "contents": "randomObject()"},
{ "trigger": "CCArray_createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "CCArray:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCArray_reverseObjects\tCCArray:reverseObjects()", "contents": "CCArray:reverseObjects()"},
{ "trigger": ":reverseObjects\tCCArray:reverseObjects()", "contents": "reverseObjects()"},
{ "trigger": "CCArray_createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "CCArray:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCArray_removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "CCArray:removeObjectAtIndex(_num,_boo)"},
{ "trigger": ":removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "removeObjectAtIndex(_num,_boo)"},
{ "trigger": "CCArray_isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "CCArray:isEqualToArray(_CCArray)"},
{ "trigger": ":isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "isEqualToArray(_CCArray)"},
{ "trigger": "CCArray_removeAllObjects\tCCArray:removeAllObjects()", "contents": "CCArray:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCArray:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCArray_reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "CCArray:reduceMemoryFootprint()"},
{ "trigger": ":reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "reduceMemoryFootprint()"},
{ "trigger": "CCArray_create\tCCArray:create()", "contents": "CCArray:create()"},
{ "trigger": ":create\tCCArray:create()", "contents": "create()"},
{ "trigger": "CCArray_lastObject\tCCArray:lastObject()", "contents": "CCArray:lastObject()"},
{ "trigger": ":lastObject\tCCArray:lastObject()", "contents": "lastObject()"},
{ "trigger": "CCArray_indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "CCArray:indexOfObject(_CCObject)"},
{ "trigger": ":indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "indexOfObject(_CCObject)"},
{ "trigger": "CCArray_removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "CCArray:removeObject(_CCObject,_boo)"},
{ "trigger": ":removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "removeObject(_CCObject,_boo)"},
{ "trigger": "CCArray_exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "CCArray:exchangeObject(_CCObject,_CCObject)"},
{ "trigger": ":exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "exchangeObject(_CCObject,_CCObject)"},
{ "trigger": "CCArray_addObject\tCCArray:addObject(_CCObject)", "contents": "CCArray:addObject(_CCObject)"},
{ "trigger": ":addObject\tCCArray:addObject(_CCObject)", "contents": "addObject(_CCObject)"},
{ "trigger": "CCArray_insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "CCArray:insertObject(_CCObject,_num)"},
{ "trigger": ":insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "insertObject(_CCObject,_num)"},
{ "trigger": "CCParticleSmoke\t", "contents": "CCParticleSmoke"},
{ "trigger": "CCParticleSmoke_createWithTotalParticles\tCCParticleSmoke:createWithTotalParticles(_num)", "contents": "CCParticleSmoke:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSmoke:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSmoke_create\tCCParticleSmoke:create()", "contents": "CCParticleSmoke:create()"},
{ "trigger": ":create\tCCParticleSmoke:create()", "contents": "create()"},
{ "trigger": "Animation\t", "contents": "Animation"},
{ "trigger": "Animation_pause\tAnimation:pause()", "contents": "Animation:pause()"},
{ "trigger": ":pause\tAnimation:pause()", "contents": "pause()"},
{ "trigger": "Animation_stop\tAnimation:stop()", "contents": "Animation:stop()"},
{ "trigger": ":stop\tAnimation:stop()", "contents": "stop()"},
{ "trigger": "Animation_resume\tAnimation:resume()", "contents": "Animation:resume()"},
{ "trigger": ":resume\tAnimation:resume()", "contents": "resume()"},
{ "trigger": "Animation_playByIndex\tAnimation:playByIndex(_num,_num,_num,_num,_num)", "contents": "Animation:playByIndex(_num,_num,_num,_num,_num)"},
{ "trigger": ":playByIndex\tAnimation:playByIndex(_num,_num,_num,_num,_num)", "contents": "playByIndex(_num,_num,_num,_num,_num)"},
{ "trigger": "Animation_getMovementCount\tAnimation:getMovementCount()", "contents": "Animation:getMovementCount()"},
{ "trigger": ":getMovementCount\tAnimation:getMovementCount()", "contents": "getMovementCount()"},
{ "trigger": "Animation_play\tAnimation:play(_str,_num,_num,_num,_num)", "contents": "Animation:play(_str,_num,_num,_num,_num)"},
{ "trigger": ":play\tAnimation:play(_str,_num,_num,_num,_num)", "contents": "play(_str,_num,_num,_num,_num)"},
{ "trigger": "Animation_setAnimationScale\tAnimation:setAnimationScale(_num)", "contents": "Animation:setAnimationScale(_num)"},
{ "trigger": ":setAnimationScale\tAnimation:setAnimationScale(_num)", "contents": "setAnimationScale(_num)"},
{ "trigger": "Animation_create\tAnimation:create(_Armature)", "contents": "Animation:create(_Armature)"},
{ "trigger": ":create\tAnimation:create(_Armature)", "contents": "create(_Armature)"},
{ "trigger": "CCTransitionFadeUp\t", "contents": "CCTransitionFadeUp"},
{ "trigger": "CCTransitionFadeUp_create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "CCTransitionFadeUp:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressVertical\t", "contents": "CCTransitionProgressVertical"},
{ "trigger": "CCTransitionProgressVertical_create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "CCTransitionProgressVertical:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDouble\t", "contents": "CCDouble"},
{ "trigger": "CCDouble_getValue\tCCDouble:getValue()", "contents": "CCDouble:getValue()"},
{ "trigger": ":getValue\tCCDouble:getValue()", "contents": "getValue()"},
{ "trigger": "CCDouble_call\tCCDouble:call(_num)", "contents": "CCDouble:call(_num)"},
{ "trigger": ":call\tCCDouble:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCDouble_new\tCCDouble:new(_num)", "contents": "CCDouble:new(_num)"},
{ "trigger": ":new\tCCDouble:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCDouble_new_local\tCCDouble:new_local(_num)", "contents": "CCDouble:new_local(_num)"},
{ "trigger": ":new_local\tCCDouble:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCDouble_create\tCCDouble:create(_num)", "contents": "CCDouble:create(_num)"},
{ "trigger": ":create\tCCDouble:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTurnOffTiles\t", "contents": "CCTurnOffTiles"},
{ "trigger": "CCTurnOffTiles_create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "CCTurnOffTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCAtlasNode\t", "contents": "CCAtlasNode"},
{ "trigger": "CCAtlasNode_call\tCCAtlasNode:call()", "contents": "CCAtlasNode:call()"},
{ "trigger": ":call\tCCAtlasNode:call()", "contents": "call()"},
{ "trigger": "CCAtlasNode_getColor\tCCAtlasNode:getColor()", "contents": "CCAtlasNode:getColor()"},
{ "trigger": ":getColor\tCCAtlasNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCAtlasNode_setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "CCAtlasNode:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCAtlasNode_getBlendFunc\tCCAtlasNode:getBlendFunc()", "contents": "CCAtlasNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCAtlasNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCAtlasNode_getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "CCAtlasNode:getQuadsToDraw()"},
{ "trigger": ":getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "getQuadsToDraw()"},
{ "trigger": "CCAtlasNode_isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "CCAtlasNode:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCAtlasNode_getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "CCAtlasNode:getTextureAtlas()"},
{ "trigger": ":getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "getTextureAtlas()"},
{ "trigger": "CCAtlasNode_initWithTileFile\tCCAtlasNode:initWithTileFile(_str,_num,_num,_num)", "contents": "CCAtlasNode:initWithTileFile(_str,_num,_num,_num)"},
{ "trigger": ":initWithTileFile\tCCAtlasNode:initWithTileFile(_str,_num,_num,_num)", "contents": "initWithTileFile(_str,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "CCAtlasNode:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCAtlasNode_create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "CCAtlasNode:create(_str,_num,_num,_num)"},
{ "trigger": ":create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "create(_str,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "CCAtlasNode:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCAtlasNode_new\tCCAtlasNode:new()", "contents": "CCAtlasNode:new()"},
{ "trigger": ":new\tCCAtlasNode:new()", "contents": "new()"},
{ "trigger": "CCAtlasNode_setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "CCAtlasNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCAtlasNode_updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "CCAtlasNode:updateAtlasValues()"},
{ "trigger": ":updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "updateAtlasValues()"},
{ "trigger": "CCAtlasNode_new_local\tCCAtlasNode:new_local()", "contents": "CCAtlasNode:new_local()"},
{ "trigger": ":new_local\tCCAtlasNode:new_local()", "contents": "new_local()"},
{ "trigger": "CCAtlasNode_delete\tCCAtlasNode:delete()", "contents": "CCAtlasNode:delete()"},
{ "trigger": ":delete\tCCAtlasNode:delete()", "contents": "delete()"},
{ "trigger": "CCAtlasNode_initWithTexture\tCCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)", "contents": "CCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)"},
{ "trigger": ":initWithTexture\tCCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)", "contents": "initWithTexture(_CCTexture2D,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_getTexture\tCCAtlasNode:getTexture()", "contents": "CCAtlasNode:getTexture()"},
{ "trigger": ":getTexture\tCCAtlasNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCShakyTiles3D\t", "contents": "CCShakyTiles3D"},
{ "trigger": "CCShakyTiles3D_create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShakyTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCTransitionCrossFade\t", "contents": "CCTransitionCrossFade"},
{ "trigger": "CCTransitionCrossFade_create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "CCTransitionCrossFade:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTargetedAction\t", "contents": "CCTargetedAction"},
{ "trigger": "CCTargetedAction_create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "CCTargetedAction:create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": "CCSpriteFrame\t", "contents": "CCSpriteFrame"},
{ "trigger": "CCSpriteFrame_setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "CCSpriteFrame:setRect(_CCRect)"},
{ "trigger": ":setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "setRect(_CCRect)"},
{ "trigger": "CCSpriteFrame_getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "CCSpriteFrame:getRectInPixels()"},
{ "trigger": ":getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "getRectInPixels()"},
{ "trigger": "CCSpriteFrame_setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "CCSpriteFrame:setOffsetInPixels(_CCPoint)"},
{ "trigger": ":setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "setOffsetInPixels(_CCPoint)"},
{ "trigger": "CCSpriteFrame_createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "CCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": ":createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "CCSpriteFrame:setOriginalSizeInPixels(_CCSize)"},
{ "trigger": ":setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "setOriginalSizeInPixels(_CCSize)"},
{ "trigger": "CCSpriteFrame_create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "CCSpriteFrame:create(_str,_CCRect)"},
{ "trigger": ":create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "create(_str,_CCRect)"},
{ "trigger": "CCSpriteFrame_setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "CCSpriteFrame:setRectInPixels(_CCRect)"},
{ "trigger": ":setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "setRectInPixels(_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSize\tCCSpriteFrame:setOriginalSize(_CCSize)", "contents": "CCSpriteFrame:setOriginalSize(_CCSize)"},
{ "trigger": ":setOriginalSize\tCCSpriteFrame:setOriginalSize(_CCSize)", "contents": "setOriginalSize(_CCSize)"},
{ "trigger": "CCSpriteFrame_getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "CCSpriteFrame:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCSpriteFrame_isRotated\tCCSpriteFrame:isRotated()", "contents": "CCSpriteFrame:isRotated()"},
{ "trigger": ":isRotated\tCCSpriteFrame:isRotated()", "contents": "isRotated()"},
{ "trigger": "CCSpriteFrame_setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "CCSpriteFrame:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrame_getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "CCSpriteFrame:getOriginalSizeInPixels()"},
{ "trigger": ":getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "getOriginalSizeInPixels()"},
{ "trigger": "CCSpriteFrame_setOffset\tCCSpriteFrame:setOffset(_CCPoint)", "contents": "CCSpriteFrame:setOffset(_CCPoint)"},
{ "trigger": ":setOffset\tCCSpriteFrame:setOffset(_CCPoint)", "contents": "setOffset(_CCPoint)"},
{ "trigger": "CCSpriteFrame_setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "CCSpriteFrame:setRotated(_boo)"},
{ "trigger": ":setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "setRotated(_boo)"},
{ "trigger": "CCSpriteFrame_getOffset\tCCSpriteFrame:getOffset()", "contents": "CCSpriteFrame:getOffset()"},
{ "trigger": ":getOffset\tCCSpriteFrame:getOffset()", "contents": "getOffset()"},
{ "trigger": "CCSpriteFrame_getTexture\tCCSpriteFrame:getTexture()", "contents": "CCSpriteFrame:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteFrame:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteFrame_getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "CCSpriteFrame:getOffsetInPixels()"},
{ "trigger": ":getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "getOffsetInPixels()"},
{ "trigger": "CCSpriteFrame_getRect\tCCSpriteFrame:getRect()", "contents": "CCSpriteFrame:getRect()"},
{ "trigger": ":getRect\tCCSpriteFrame:getRect()", "contents": "getRect()"},
{ "trigger": "CCScale9Sprite\t", "contents": "CCScale9Sprite"},
{ "trigger": "CCScale9Sprite_getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "CCScale9Sprite:getCapInsets()"},
{ "trigger": ":getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "getCapInsets()"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "CCScale9Sprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCScale9Sprite_setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "CCScale9Sprite:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCScale9Sprite_setInsetTop\tCCScale9Sprite:setInsetTop(_num)", "contents": "CCScale9Sprite:setInsetTop(_num)"},
{ "trigger": ":setInsetTop\tCCScale9Sprite:setInsetTop(_num)", "contents": "setInsetTop(_num)"},
{ "trigger": "CCScale9Sprite_resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "CCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": ":resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_isOpacityModifyRGB\tCCScale9Sprite:isOpacityModifyRGB()", "contents": "CCScale9Sprite:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCScale9Sprite:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCScale9Sprite_setOpacityModifyRGB\tCCScale9Sprite:setOpacityModifyRGB(_boo)", "contents": "CCScale9Sprite:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCScale9Sprite:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCScale9Sprite_setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_setColor\tCCScale9Sprite:setColor(_ccColor3B)", "contents": "CCScale9Sprite:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCScale9Sprite:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCScale9Sprite_setInsetLeft\tCCScale9Sprite:setInsetLeft(_num)", "contents": "CCScale9Sprite:setInsetLeft(_num)"},
{ "trigger": ":setInsetLeft\tCCScale9Sprite:setInsetLeft(_num)", "contents": "setInsetLeft(_num)"},
{ "trigger": "CCScale9Sprite_getOpacity\tCCScale9Sprite:getOpacity()", "contents": "CCScale9Sprite:getOpacity()"},
{ "trigger": ":getOpacity\tCCScale9Sprite:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCScale9Sprite_getInsetLeft\tCCScale9Sprite:getInsetLeft()", "contents": "CCScale9Sprite:getInsetLeft()"},
{ "trigger": ":getInsetLeft\tCCScale9Sprite:getInsetLeft()", "contents": "getInsetLeft()"},
{ "trigger": "CCScale9Sprite_setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "CCScale9Sprite:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCScale9Sprite_setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "CCScale9Sprite:setCapInsets(_CCRect)"},
{ "trigger": ":setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "setCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_getColor\tCCScale9Sprite:getColor()", "contents": "CCScale9Sprite:getColor()"},
{ "trigger": ":getColor\tCCScale9Sprite:getColor()", "contents": "getColor()"},
{ "trigger": "CCScale9Sprite_create\tCCScale9Sprite:create()", "contents": "CCScale9Sprite:create()"},
{ "trigger": ":create\tCCScale9Sprite:create()", "contents": "create()"},
{ "trigger": "CCScale9Sprite_getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "CCScale9Sprite:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCScale9Sprite_setInsetRight\tCCScale9Sprite:setInsetRight(_num)", "contents": "CCScale9Sprite:setInsetRight(_num)"},
{ "trigger": ":setInsetRight\tCCScale9Sprite:setInsetRight(_num)", "contents": "setInsetRight(_num)"},
{ "trigger": "CCScale9Sprite_setInsetBottom\tCCScale9Sprite:setInsetBottom(_num)", "contents": "CCScale9Sprite:setInsetBottom(_num)"},
{ "trigger": ":setInsetBottom\tCCScale9Sprite:setInsetBottom(_num)", "contents": "setInsetBottom(_num)"},
{ "trigger": "CCScale9Sprite_getInsetBottom\tCCScale9Sprite:getInsetBottom()", "contents": "CCScale9Sprite:getInsetBottom()"},
{ "trigger": ":getInsetBottom\tCCScale9Sprite:getInsetBottom()", "contents": "getInsetBottom()"},
{ "trigger": "CCScale9Sprite_getInsetRight\tCCScale9Sprite:getInsetRight()", "contents": "CCScale9Sprite:getInsetRight()"},
{ "trigger": ":getInsetRight\tCCScale9Sprite:getInsetRight()", "contents": "getInsetRight()"},
{ "trigger": "CCScale9Sprite_getInsetTop\tCCScale9Sprite:getInsetTop()", "contents": "CCScale9Sprite:getInsetTop()"},
{ "trigger": ":getInsetTop\tCCScale9Sprite:getInsetTop()", "contents": "getInsetTop()"},
{ "trigger": "CCScale9Sprite_getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "CCScale9Sprite:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_setContentSize\tCCScale9Sprite:setContentSize(_CCSize)", "contents": "CCScale9Sprite:setContentSize(_CCSize)"},
{ "trigger": ":setContentSize\tCCScale9Sprite:setContentSize(_CCSize)", "contents": "setContentSize(_CCSize)"},
{ "trigger": "CCPageTurn3D\t", "contents": "CCPageTurn3D"},
{ "trigger": "CCPageTurn3D_create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "CCPageTurn3D:create(_num,_CCSize)"},
{ "trigger": ":create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCParticleRain\t", "contents": "CCParticleRain"},
{ "trigger": "CCParticleRain_createWithTotalParticles\tCCParticleRain:createWithTotalParticles(_num)", "contents": "CCParticleRain:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleRain:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleRain_create\tCCParticleRain:create()", "contents": "CCParticleRain:create()"},
{ "trigger": ":create\tCCParticleRain:create()", "contents": "create()"},
{ "trigger": "CCLayerRGBA\t", "contents": "CCLayerRGBA"},
{ "trigger": "CCLayerRGBA_getColor\tCCLayerRGBA:getColor()", "contents": "CCLayerRGBA:getColor()"},
{ "trigger": ":getColor\tCCLayerRGBA:getColor()", "contents": "getColor()"},
{ "trigger": "CCLayerRGBA_setOpacity\tCCLayerRGBA:setOpacity(_num)", "contents": "CCLayerRGBA:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLayerRGBA:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLayerRGBA_getDisplayedColor\tCCLayerRGBA:getDisplayedColor()", "contents": "CCLayerRGBA:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCLayerRGBA:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCLayerRGBA_isOpacityModifyRGB\tCCLayerRGBA:isOpacityModifyRGB()", "contents": "CCLayerRGBA:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLayerRGBA:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLayerRGBA_setOpacityModifyRGB\tCCLayerRGBA:setOpacityModifyRGB(_boo)", "contents": "CCLayerRGBA:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLayerRGBA:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLayerRGBA_create\tCCLayerRGBA:create()", "contents": "CCLayerRGBA:create()"},
{ "trigger": ":create\tCCLayerRGBA:create()", "contents": "create()"},
{ "trigger": "CCLayerRGBA_setColor\tCCLayerRGBA:setColor(_ccColor3B)", "contents": "CCLayerRGBA:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLayerRGBA:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLayerRGBA_updateDisplayedOpacity\tCCLayerRGBA:updateDisplayedOpacity(_num)", "contents": "CCLayerRGBA:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCLayerRGBA:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCLayerRGBA_getDisplayedOpacity\tCCLayerRGBA:getDisplayedOpacity()", "contents": "CCLayerRGBA:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCLayerRGBA:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCLayerRGBA_isCascadeColorEnabled\tCCLayerRGBA:isCascadeColorEnabled()", "contents": "CCLayerRGBA:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCLayerRGBA:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCLayerRGBA_isCascadeOpacityEnabled\tCCLayerRGBA:isCascadeOpacityEnabled()", "contents": "CCLayerRGBA:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCLayerRGBA:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCLayerRGBA_setCascadeOpacityEnabled\tCCLayerRGBA:setCascadeOpacityEnabled(_boo)", "contents": "CCLayerRGBA:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCLayerRGBA:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCLayerRGBA_setCascadeColorEnabled\tCCLayerRGBA:setCascadeColorEnabled(_boo)", "contents": "CCLayerRGBA:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCLayerRGBA:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCLayerRGBA_getOpacity\tCCLayerRGBA:getOpacity()", "contents": "CCLayerRGBA:getOpacity()"},
{ "trigger": ":getOpacity\tCCLayerRGBA:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLayerRGBA_updateDisplayedColor\tCCLayerRGBA:updateDisplayedColor(_ccColor3B)", "contents": "CCLayerRGBA:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCLayerRGBA:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "CCString\t", "contents": "CCString"},
{ "trigger": "CCString_getCString\tCCString:getCString()", "contents": "CCString:getCString()"},
{ "trigger": ":getCString\tCCString:getCString()", "contents": "getCString()"},
{ "trigger": "CCString_isEqual\tCCString:isEqual(_CCObject)", "contents": "CCString:isEqual(_CCObject)"},
{ "trigger": ":isEqual\tCCString:isEqual(_CCObject)", "contents": "isEqual(_CCObject)"},
{ "trigger": "CCString_compare\tCCString:compare(_str)", "contents": "CCString:compare(_str)"},
{ "trigger": ":compare\tCCString:compare(_str)", "contents": "compare(_str)"},
{ "trigger": "CCString_length\tCCString:length()", "contents": "CCString:length()"},
{ "trigger": ":length\tCCString:length()", "contents": "length()"},
{ "trigger": "CCString_doubleValue\tCCString:doubleValue()", "contents": "CCString:doubleValue()"},
{ "trigger": ":doubleValue\tCCString:doubleValue()", "contents": "doubleValue()"},
{ "trigger": "CCString_boolValue\tCCString:boolValue()", "contents": "CCString:boolValue()"},
{ "trigger": ":boolValue\tCCString:boolValue()", "contents": "boolValue()"},
{ "trigger": "CCString_floatValue\tCCString:floatValue()", "contents": "CCString:floatValue()"},
{ "trigger": ":floatValue\tCCString:floatValue()", "contents": "floatValue()"},
{ "trigger": "CCString_create\tCCString:create(_str)", "contents": "CCString:create(_str)"},
{ "trigger": ":create\tCCString:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCString_uintValue\tCCString:uintValue()", "contents": "CCString:uintValue()"},
{ "trigger": ":uintValue\tCCString:uintValue()", "contents": "uintValue()"},
{ "trigger": "CCString_intValue\tCCString:intValue()", "contents": "CCString:intValue()"},
{ "trigger": ":intValue\tCCString:intValue()", "contents": "intValue()"},
{ "trigger": "CCString_createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "CCString:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "AssetsManager\t", "contents": "AssetsManager"},
{ "trigger": "AssetsManager_update\tAssetsManager:update()", "contents": "AssetsManager:update()"},
{ "trigger": ":update\tAssetsManager:update()", "contents": "update()"},
{ "trigger": "AssetsManager_call\tAssetsManager:call(_str,_str,_str)", "contents": "AssetsManager:call(_str,_str,_str)"},
{ "trigger": ":call\tAssetsManager:call(_str,_str,_str)", "contents": "call(_str,_str,_str)"},
{ "trigger": "AssetsManager_deleteVersion\tAssetsManager:deleteVersion()", "contents": "AssetsManager:deleteVersion()"},
{ "trigger": ":deleteVersion\tAssetsManager:deleteVersion()", "contents": "deleteVersion()"},
{ "trigger": "AssetsManager_setConnectionTimeout\tAssetsManager:setConnectionTimeout(_num)", "contents": "AssetsManager:setConnectionTimeout(_num)"},
{ "trigger": ":setConnectionTimeout\tAssetsManager:setConnectionTimeout(_num)", "contents": "setConnectionTimeout(_num)"},
{ "trigger": "AssetsManager_setPackageUrl\tAssetsManager:setPackageUrl(_str)", "contents": "AssetsManager:setPackageUrl(_str)"},
{ "trigger": ":setPackageUrl\tAssetsManager:setPackageUrl(_str)", "contents": "setPackageUrl(_str)"},
{ "trigger": "AssetsManager_checkUpdate\tAssetsManager:checkUpdate()", "contents": "AssetsManager:checkUpdate()"},
{ "trigger": ":checkUpdate\tAssetsManager:checkUpdate()", "contents": "checkUpdate()"},
{ "trigger": "AssetsManager_getPackageUrl\tAssetsManager:getPackageUrl()", "contents": "AssetsManager:getPackageUrl()"},
{ "trigger": ":getPackageUrl\tAssetsManager:getPackageUrl()", "contents": "getPackageUrl()"},
{ "trigger": "AssetsManager_getVersionFileUrl\tAssetsManager:getVersionFileUrl()", "contents": "AssetsManager:getVersionFileUrl()"},
{ "trigger": ":getVersionFileUrl\tAssetsManager:getVersionFileUrl()", "contents": "getVersionFileUrl()"},
{ "trigger": "AssetsManager_getConnectionTimeout\tAssetsManager:getConnectionTimeout()", "contents": "AssetsManager:getConnectionTimeout()"},
{ "trigger": ":getConnectionTimeout\tAssetsManager:getConnectionTimeout()", "contents": "getConnectionTimeout()"},
{ "trigger": "AssetsManager_getStoragePath\tAssetsManager:getStoragePath()", "contents": "AssetsManager:getStoragePath()"},
{ "trigger": ":getStoragePath\tAssetsManager:getStoragePath()", "contents": "getStoragePath()"},
{ "trigger": "AssetsManager_registerScriptHandler\tAssetsManager:registerScriptHandler(_listener)", "contents": "AssetsManager:registerScriptHandler(_listener)"},
{ "trigger": ":registerScriptHandler\tAssetsManager:registerScriptHandler(_listener)", "contents": "registerScriptHandler(_listener)"},
{ "trigger": "AssetsManager_new\tAssetsManager:new(_str,_str,_str)", "contents": "AssetsManager:new(_str,_str,_str)"},
{ "trigger": ":new\tAssetsManager:new(_str,_str,_str)", "contents": "new(_str,_str,_str)"},
{ "trigger": "AssetsManager_getVersion\tAssetsManager:getVersion()", "contents": "AssetsManager:getVersion()"},
{ "trigger": ":getVersion\tAssetsManager:getVersion()", "contents": "getVersion()"},
{ "trigger": "AssetsManager_new_local\tAssetsManager:new_local(_str,_str,_str)", "contents": "AssetsManager:new_local(_str,_str,_str)"},
{ "trigger": ":new_local\tAssetsManager:new_local(_str,_str,_str)", "contents": "new_local(_str,_str,_str)"},
{ "trigger": "AssetsManager_setStoragePath\tAssetsManager:setStoragePath(_str)", "contents": "AssetsManager:setStoragePath(_str)"},
{ "trigger": ":setStoragePath\tAssetsManager:setStoragePath(_str)", "contents": "setStoragePath(_str)"},
{ "trigger": "AssetsManager_delete\tAssetsManager:delete()", "contents": "AssetsManager:delete()"},
{ "trigger": ":delete\tAssetsManager:delete()", "contents": "delete()"},
{ "trigger": "AssetsManager_setVersionFileUrl\tAssetsManager:setVersionFileUrl(_str)", "contents": "AssetsManager:setVersionFileUrl(_str)"},
{ "trigger": ":setVersionFileUrl\tAssetsManager:setVersionFileUrl(_str)", "contents": "setVersionFileUrl(_str)"},
{ "trigger": "AssetsManager_unregisterScriptHandler\tAssetsManager:unregisterScriptHandler()", "contents": "AssetsManager:unregisterScriptHandler()"},
{ "trigger": ":unregisterScriptHandler\tAssetsManager:unregisterScriptHandler()", "contents": "unregisterScriptHandler()"},
{ "trigger": "CCCrypto\t", "contents": "CCCrypto"},
{ "trigger": "CCCrypto_encryptXXTEALua\tCCCrypto:encryptXXTEALua(_str,_num,_str,_num)", "contents": "CCCrypto:encryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": ":encryptXXTEALua\tCCCrypto:encryptXXTEALua(_str,_num,_str,_num)", "contents": "encryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "CCCrypto:MD5Lua(_str,_boo)"},
{ "trigger": ":MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "MD5Lua(_str,_boo)"},
{ "trigger": "CCCrypto_encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "CCCrypto:encodeBase64Lua(_str,_num)"},
{ "trigger": ":encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "encodeBase64Lua(_str,_num)"},
{ "trigger": "CCCrypto_decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "CCCrypto:decodeBase64Lua(_str)"},
{ "trigger": ":decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "decodeBase64Lua(_str)"},
{ "trigger": "CCCrypto_encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "CCCrypto:getAES256KeyLength()"},
{ "trigger": ":getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "getAES256KeyLength()"},
{ "trigger": "CCCrypto_sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "CCCrypto:sha1Lua(_str,_str,_boo)"},
{ "trigger": ":sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "sha1Lua(_str,_str,_boo)"},
{ "trigger": "CCCrypto_decryptXXTEALua\tCCCrypto:decryptXXTEALua(_str,_num,_str,_num)", "contents": "CCCrypto:decryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": ":decryptXXTEALua\tCCCrypto:decryptXXTEALua(_str,_num,_str,_num)", "contents": "decryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": "CCFlipY\t", "contents": "CCFlipY"},
{ "trigger": "CCFlipY_create\tCCFlipY:create(_boo)", "contents": "CCFlipY:create(_boo)"},
{ "trigger": ":create\tCCFlipY:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCMenuItemToggle\t", "contents": "CCMenuItemToggle"},
{ "trigger": "CCMenuItemToggle_selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "CCMenuItemToggle:selectedItem()"},
{ "trigger": ":selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "selectedItem()"},
{ "trigger": "CCMenuItemToggle_addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "CCMenuItemToggle:addSubItem(_CCMenuItem)"},
{ "trigger": ":addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "addSubItem(_CCMenuItem)"},
{ "trigger": "CCMenuItemToggle_setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "CCMenuItemToggle:setSelectedIndex(_num)"},
{ "trigger": ":setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "setSelectedIndex(_num)"},
{ "trigger": "CCMenuItemToggle_getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "CCMenuItemToggle:getSelectedIndex()"},
{ "trigger": ":getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "getSelectedIndex()"},
{ "trigger": "CCMenuItemToggle_create\tCCMenuItemToggle:create()", "contents": "CCMenuItemToggle:create()"},
{ "trigger": ":create\tCCMenuItemToggle:create()", "contents": "create()"},
{ "trigger": "CCMenuItemToggle_getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "CCMenuItemToggle:getSubItems()"},
{ "trigger": ":getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "getSubItems()"},
{ "trigger": "CCPolygonShape\t", "contents": "CCPolygonShape"},
{ "trigger": "CCPolygonShape_setFill\tCCPolygonShape:setFill(_boo)", "contents": "CCPolygonShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCPolygonShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCPolygonShape_setClose\tCCPolygonShape:setClose(_boo)", "contents": "CCPolygonShape:setClose(_boo)"},
{ "trigger": ":setClose\tCCPolygonShape:setClose(_boo)", "contents": "setClose(_boo)"},
{ "trigger": "CCPolygonShape_isFill\tCCPolygonShape:isFill()", "contents": "CCPolygonShape:isFill()"},
{ "trigger": ":isFill\tCCPolygonShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCPolygonShape_create\tCCPolygonShape:create(_CCPointArray)", "contents": "CCPolygonShape:create(_CCPointArray)"},
{ "trigger": ":create\tCCPolygonShape:create(_CCPointArray)", "contents": "create(_CCPointArray)"},
{ "trigger": "CCPolygonShape_isClose\tCCPolygonShape:isClose()", "contents": "CCPolygonShape:isClose()"},
{ "trigger": ":isClose\tCCPolygonShape:isClose()", "contents": "isClose()"},
{ "trigger": "CCAnimate\t", "contents": "CCAnimate"},
{ "trigger": "CCAnimate_create\tCCAnimate:create(_CCAnimation)", "contents": "CCAnimate:create(_CCAnimation)"},
{ "trigger": ":create\tCCAnimate:create(_CCAnimation)", "contents": "create(_CCAnimation)"},
{ "trigger": "CCFlipX\t", "contents": "CCFlipX"},
{ "trigger": "CCFlipX_create\tCCFlipX:create(_boo)", "contents": "CCFlipX:create(_boo)"},
{ "trigger": ":create\tCCFlipX:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCParticleBatchNode\t", "contents": "CCParticleBatchNode"},
{ "trigger": "CCParticleBatchNode_disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "CCParticleBatchNode:disableParticle(_num)"},
{ "trigger": ":disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "disableParticle(_num)"},
{ "trigger": "CCParticleBatchNode_setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "CCParticleBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleBatchNode_getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "CCParticleBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleBatchNode_insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "CCParticleBatchNode:insertChild(_CCParticleSystem,_num)"},
{ "trigger": ":insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "insertChild(_CCParticleSystem,_num)"},
{ "trigger": "CCParticleBatchNode_setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleBatchNode_createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "CCParticleBatchNode:createWithTexture(_CCTexture2D,_num)"},
{ "trigger": ":createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "createWithTexture(_CCTexture2D,_num)"},
{ "trigger": "CCParticleBatchNode_getTexture\tCCParticleBatchNode:getTexture()", "contents": "CCParticleBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCParticleBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCParticleBatchNode_create\tCCParticleBatchNode:create(_str,_num)", "contents": "CCParticleBatchNode:create(_str,_num)"},
{ "trigger": ":create\tCCParticleBatchNode:create(_str,_num)", "contents": "create(_str,_num)"},
{ "trigger": "CCEaseElasticOut\t", "contents": "CCEaseElasticOut"},
{ "trigger": "CCEaseElasticOut_create\tCCEaseElasticOut:create(_CCActionInterval)", "contents": "CCEaseElasticOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTextureCache\t", "contents": "CCTextureCache"},
{ "trigger": "CCTextureCache_removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "CCTextureCache:removeUnusedTextures()"},
{ "trigger": ":removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "removeUnusedTextures()"},
{ "trigger": "CCTextureCache_dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "CCTextureCache:dumpCachedTextureInfo()"},
{ "trigger": ":dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "dumpCachedTextureInfo()"},
{ "trigger": "CCTextureCache_removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "CCTextureCache:removeAllTextures()"},
{ "trigger": ":removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "removeAllTextures()"},
{ "trigger": "CCTextureCache_addImage\tCCTextureCache:addImage(_str)", "contents": "CCTextureCache:addImage(_str)"},
{ "trigger": ":addImage\tCCTextureCache:addImage(_str)", "contents": "addImage(_str)"},
{ "trigger": "CCTextureCache_purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "CCTextureCache:purgeSharedTextureCache()"},
{ "trigger": ":purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "purgeSharedTextureCache()"},
{ "trigger": "CCTextureCache_snapshotTextures\tCCTextureCache:snapshotTextures()", "contents": "CCTextureCache:snapshotTextures()"},
{ "trigger": ":snapshotTextures\tCCTextureCache:snapshotTextures()", "contents": "snapshotTextures()"},
{ "trigger": "CCTextureCache_removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "CCTextureCache:removeTexture(_CCTexture2D)"},
{ "trigger": ":removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "removeTexture(_CCTexture2D)"},
{ "trigger": "CCTextureCache_removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "CCTextureCache:removeTextureForKey(_str)"},
{ "trigger": ":removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "removeTextureForKey(_str)"},
{ "trigger": "CCTextureCache_addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "CCTextureCache:addPVRImage(_str)"},
{ "trigger": ":addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "addPVRImage(_str)"},
{ "trigger": "CCTextureCache_textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "CCTextureCache:textureForKey(_str)"},
{ "trigger": ":textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "textureForKey(_str)"},
{ "trigger": "CCTextureCache_addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "CCTextureCache:addUIImage(_CCImage,_str)"},
{ "trigger": ":addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "addUIImage(_CCImage,_str)"},
{ "trigger": "CCTextureCache_reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "CCTextureCache:reloadAllTextures()"},
{ "trigger": ":reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "reloadAllTextures()"},
{ "trigger": "CCTextureCache_addETCImage\tCCTextureCache:addETCImage(_str)", "contents": "CCTextureCache:addETCImage(_str)"},
{ "trigger": ":addETCImage\tCCTextureCache:addETCImage(_str)", "contents": "addETCImage(_str)"},
{ "trigger": "CCTextureCache_sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "CCTextureCache:sharedTextureCache()"},
{ "trigger": ":sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "sharedTextureCache()"},
{ "trigger": "CCCallFunc\t", "contents": "CCCallFunc"},
{ "trigger": "CCCallFunc_create\tCCCallFunc:create(_listener)", "contents": "CCCallFunc:create(_listener)"},
{ "trigger": ":create\tCCCallFunc:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCProgressFromTo\t", "contents": "CCProgressFromTo"},
{ "trigger": "CCProgressFromTo_create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "CCProgressFromTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCAnimationFrame\t", "contents": "CCAnimationFrame"},
{ "trigger": "CCAnimationFrame_setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "CCAnimationFrame:setDelayUnits(_num)"},
{ "trigger": ":setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "setDelayUnits(_num)"},
{ "trigger": "CCAnimationFrame_getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "CCAnimationFrame:getSpriteFrame()"},
{ "trigger": ":getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "getSpriteFrame()"},
{ "trigger": "CCAnimationFrame_setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimationFrame:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimationFrame_getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "CCAnimationFrame:getDelayUnits()"},
{ "trigger": ":getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "getDelayUnits()"},
{ "trigger": "CCEaseBounceIn\t", "contents": "CCEaseBounceIn"},
{ "trigger": "CCEaseBounceIn_create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "CCEaseBounceIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFadeTR\t", "contents": "CCTransitionFadeTR"},
{ "trigger": "CCTransitionFadeTR_create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "CCTransitionFadeTR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressRadialCW\t", "contents": "CCTransitionProgressRadialCW"},
{ "trigger": "CCTransitionProgressRadialCW_create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCNotificationCenter\t", "contents": "CCNotificationCenter"},
{ "trigger": "CCNotificationCenter_unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver(_CCObject,_str)", "contents": "CCNotificationCenter:unregisterScriptObserver(_CCObject,_str)"},
{ "trigger": ":unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver(_CCObject,_str)", "contents": "unregisterScriptObserver(_CCObject,_str)"},
{ "trigger": "CCNotificationCenter_sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "CCNotificationCenter:sharedNotificationCenter()"},
{ "trigger": ":sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "sharedNotificationCenter()"},
{ "trigger": "CCNotificationCenter_registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)", "contents": "CCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)"},
{ "trigger": ":registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)", "contents": "registerScriptObserver(_CCObject,_listener,_str)"},
{ "trigger": "CCNotificationCenter_removeAllObservers\tCCNotificationCenter:removeAllObservers(_CCObject)", "contents": "CCNotificationCenter:removeAllObservers(_CCObject)"},
{ "trigger": ":removeAllObservers\tCCNotificationCenter:removeAllObservers(_CCObject)", "contents": "removeAllObservers(_CCObject)"},
{ "trigger": "CCNotificationCenter_removeObserver\tCCNotificationCenter:removeObserver(_CCObject,_str)", "contents": "CCNotificationCenter:removeObserver(_CCObject,_str)"},
{ "trigger": ":removeObserver\tCCNotificationCenter:removeObserver(_CCObject,_str)", "contents": "removeObserver(_CCObject,_str)"},
{ "trigger": "CCNotificationCenter_postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "CCNotificationCenter:postNotification(_str)"},
{ "trigger": ":postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "postNotification(_str)"},
{ "trigger": "CCNotificationCenter_purgeNotificationCenter\tCCNotificationCenter:purgeNotificationCenter()", "contents": "CCNotificationCenter:purgeNotificationCenter()"},
{ "trigger": ":purgeNotificationCenter\tCCNotificationCenter:purgeNotificationCenter()", "contents": "purgeNotificationCenter()"},
{ "trigger": "CCDrawNode\t", "contents": "CCDrawNode"},
{ "trigger": "CCDrawNode_clear\tCCDrawNode:clear()", "contents": "CCDrawNode:clear()"},
{ "trigger": ":clear\tCCDrawNode:clear()", "contents": "clear()"},
{ "trigger": "CCDrawNode_drawDot\tCCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)", "contents": "CCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)"},
{ "trigger": ":drawDot\tCCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)", "contents": "drawDot(_CCPoint,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "CCDrawNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCDrawNode_setBlendFunc\tCCDrawNode:setBlendFunc(_ccBlendFunc)", "contents": "CCDrawNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCDrawNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCDrawNode_drawSegment\tCCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)", "contents": "CCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)"},
{ "trigger": ":drawSegment\tCCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)", "contents": "drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)", "contents": "CCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)"},
{ "trigger": ":drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)", "contents": "drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_create\tCCDrawNode:create()", "contents": "CCDrawNode:create()"},
{ "trigger": ":create\tCCDrawNode:create()", "contents": "create()"},
{ "trigger": "CCTouchDispatcher\t", "contents": "CCTouchDispatcher"},
{ "trigger": "CCTouchDispatcher_removeAllDelegates\tCCTouchDispatcher:removeAllDelegates()", "contents": "CCTouchDispatcher:removeAllDelegates()"},
{ "trigger": ":removeAllDelegates\tCCTouchDispatcher:removeAllDelegates()", "contents": "removeAllDelegates()"},
{ "trigger": "CCTransitionProgressHorizontal\t", "contents": "CCTransitionProgressHorizontal"},
{ "trigger": "CCTransitionProgressHorizontal_create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "CCTransitionProgressHorizontal:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCProgressTo\t", "contents": "CCProgressTo"},
{ "trigger": "CCProgressTo_create\tCCProgressTo:create(_num,_num)", "contents": "CCProgressTo:create(_num,_num)"},
{ "trigger": ":create\tCCProgressTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCAnimation\t", "contents": "CCAnimation"},
{ "trigger": "CCAnimation_setLoops\tCCAnimation:setLoops(_num)", "contents": "CCAnimation:setLoops(_num)"},
{ "trigger": ":setLoops\tCCAnimation:setLoops(_num)", "contents": "setLoops(_num)"},
{ "trigger": "CCAnimation_getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "CCAnimation:getTotalDelayUnits()"},
{ "trigger": ":getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "getTotalDelayUnits()"},
{ "trigger": "CCAnimation_setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "CCAnimation:setRestoreOriginalFrame(_boo)"},
{ "trigger": ":setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "setRestoreOriginalFrame(_boo)"},
{ "trigger": "CCAnimation_create\tCCAnimation:create()", "contents": "CCAnimation:create()"},
{ "trigger": ":create\tCCAnimation:create()", "contents": "create()"},
{ "trigger": "CCAnimation_getDuration\tCCAnimation:getDuration()", "contents": "CCAnimation:getDuration()"},
{ "trigger": ":getDuration\tCCAnimation:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCAnimation_addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)", "contents": "CCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": ":addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)", "contents": "addSpriteFrameWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": "CCAnimation_getLoops\tCCAnimation:getLoops()", "contents": "CCAnimation:getLoops()"},
{ "trigger": ":getLoops\tCCAnimation:getLoops()", "contents": "getLoops()"},
{ "trigger": "CCAnimation_addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimation:addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimation_addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "CCAnimation:addSpriteFrameWithFileName(_str)"},
{ "trigger": ":addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "addSpriteFrameWithFileName(_str)"},
{ "trigger": "CCAnimation_getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "CCAnimation:getRestoreOriginalFrame()"},
{ "trigger": ":getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "getRestoreOriginalFrame()"},
{ "trigger": "CCAnimation_getFrames\tCCAnimation:getFrames()", "contents": "CCAnimation:getFrames()"},
{ "trigger": ":getFrames\tCCAnimation:getFrames()", "contents": "getFrames()"},
{ "trigger": "CCAnimation_setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "CCAnimation:setDelayPerUnit(_num)"},
{ "trigger": ":setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "setDelayPerUnit(_num)"},
{ "trigger": "CCAnimation_getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "CCAnimation:getDelayPerUnit()"},
{ "trigger": ":getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "getDelayPerUnit()"},
{ "trigger": "CCAnimation_createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray,_num)", "contents": "CCAnimation:createWithSpriteFrames(_CCArray,_num)"},
{ "trigger": ":createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray,_num)", "contents": "createWithSpriteFrames(_CCArray,_num)"},
{ "trigger": "CCAnimation_copy\tCCAnimation:copy()", "contents": "CCAnimation:copy()"},
{ "trigger": ":copy\tCCAnimation:copy()", "contents": "copy()"},
{ "trigger": "CCFiniteTimeAction\t", "contents": "CCFiniteTimeAction"},
{ "trigger": "CCFiniteTimeAction_reverse\tCCFiniteTimeAction:reverse()", "contents": "CCFiniteTimeAction:reverse()"},
{ "trigger": ":reverse\tCCFiniteTimeAction:reverse()", "contents": "reverse()"},
{ "trigger": "CCFiniteTimeAction_getDuration\tCCFiniteTimeAction:getDuration()", "contents": "CCFiniteTimeAction:getDuration()"},
{ "trigger": ":getDuration\tCCFiniteTimeAction:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCFiniteTimeAction_copy\tCCFiniteTimeAction:copy()", "contents": "CCFiniteTimeAction:copy()"},
{ "trigger": ":copy\tCCFiniteTimeAction:copy()", "contents": "copy()"},
{ "trigger": "CCFlipX3D\t", "contents": "CCFlipX3D"},
{ "trigger": "CCFlipX3D_create\tCCFlipX3D:create(_num)", "contents": "CCFlipX3D:create(_num)"},
{ "trigger": ":create\tCCFlipX3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCSplitCols\t", "contents": "CCSplitCols"},
{ "trigger": "CCSplitCols_create\tCCSplitCols:create(_num,_num)", "contents": "CCSplitCols:create(_num,_num)"},
{ "trigger": ":create\tCCSplitCols:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCSequence\t", "contents": "CCSequence"},
{ "trigger": "CCSequence_createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSequence_create\tCCSequence:create(_CCArray)", "contents": "CCSequence:create(_CCArray)"},
{ "trigger": ":create\tCCSequence:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCTransitionZoomFlipAngular\t", "contents": "CCTransitionZoomFlipAngular"},
{ "trigger": "CCTransitionZoomFlipAngular_create\tCCTransitionZoomFlipAngular:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipAngular:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipAngular:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDelayTime\t", "contents": "CCDelayTime"},
{ "trigger": "CCDelayTime_create\tCCDelayTime:create(_num)", "contents": "CCDelayTime:create(_num)"},
{ "trigger": ":create\tCCDelayTime:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCAnimationCache\t", "contents": "CCAnimationCache"},
{ "trigger": "CCAnimationCache_addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "CCAnimationCache:addAnimationsWithFile(_str)"},
{ "trigger": ":addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "addAnimationsWithFile(_str)"},
{ "trigger": "CCAnimationCache_animationByName\tCCAnimationCache:animationByName(_str)", "contents": "CCAnimationCache:animationByName(_str)"},
{ "trigger": ":animationByName\tCCAnimationCache:animationByName(_str)", "contents": "animationByName(_str)"},
{ "trigger": "CCAnimationCache_addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "CCAnimationCache:addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": ":addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": "CCAnimationCache_removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "CCAnimationCache:removeAnimationByName(_str)"},
{ "trigger": ":removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "removeAnimationByName(_str)"},
{ "trigger": "CCAnimationCache_sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "CCAnimationCache:sharedAnimationCache()"},
{ "trigger": ":sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "sharedAnimationCache()"},
{ "trigger": "CCAnimationCache_addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "CCAnimationCache:addAnimation(_CCAnimation,_str)"},
{ "trigger": ":addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "addAnimation(_CCAnimation,_str)"},
{ "trigger": "CCAnimationCache_purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "CCAnimationCache:purgeSharedAnimationCache()"},
{ "trigger": ":purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "purgeSharedAnimationCache()"},
{ "trigger": "CCTMXLayer\t", "contents": "CCTMXLayer"},
{ "trigger": "CCTMXLayer_call\tCCTMXLayer:call()", "contents": "CCTMXLayer:call()"},
{ "trigger": ":call\tCCTMXLayer:call()", "contents": "call()"},
{ "trigger": "CCTMXLayer_removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "CCTMXLayer:removeTileAt(_CCPoint)"},
{ "trigger": ":removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "removeTileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "CCTMXLayer:getMapTileSize()"},
{ "trigger": ":getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "getMapTileSize()"},
{ "trigger": "CCTMXLayer_getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "CCTMXLayer:getLayerOrientation()"},
{ "trigger": ":getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "getLayerOrientation()"},
{ "trigger": "CCTMXLayer_releaseMap\tCCTMXLayer:releaseMap()", "contents": "CCTMXLayer:releaseMap()"},
{ "trigger": ":releaseMap\tCCTMXLayer:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTMXLayer_tileGIDAt\tCCTMXLayer:tileGIDAt(_CCPoint)", "contents": "CCTMXLayer:tileGIDAt(_CCPoint)"},
{ "trigger": ":tileGIDAt\tCCTMXLayer:tileGIDAt(_CCPoint)", "contents": "tileGIDAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "CCTMXLayer:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXLayer_getProperties\tCCTMXLayer:getProperties()", "contents": "CCTMXLayer:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayer:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXLayer_create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "CCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": ":create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": "CCTMXLayer_tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "CCTMXLayer:tileAt(_CCPoint)"},
{ "trigger": ":tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "tileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_getLayerName\tCCTMXLayer:getLayerName()", "contents": "CCTMXLayer:getLayerName()"},
{ "trigger": ":getLayerName\tCCTMXLayer:getLayerName()", "contents": "getLayerName()"},
{ "trigger": "CCTMXLayer_getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "CCTMXLayer:getLayerSize()"},
{ "trigger": ":getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "getLayerSize()"},
{ "trigger": "CCTMXLayer_positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "CCTMXLayer:positionAt(_CCPoint)"},
{ "trigger": ":positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "positionAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_new\tCCTMXLayer:new()", "contents": "CCTMXLayer:new()"},
{ "trigger": ":new\tCCTMXLayer:new()", "contents": "new()"},
{ "trigger": "CCTMXLayer_setTileGID\tCCTMXLayer:setTileGID(_num,_CCPoint)", "contents": "CCTMXLayer:setTileGID(_num,_CCPoint)"},
{ "trigger": ":setTileGID\tCCTMXLayer:setTileGID(_num,_CCPoint)", "contents": "setTileGID(_num,_CCPoint)"},
{ "trigger": "CCTMXLayer_new_local\tCCTMXLayer:new_local()", "contents": "CCTMXLayer:new_local()"},
{ "trigger": ":new_local\tCCTMXLayer:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXLayer_delete\tCCTMXLayer:delete()", "contents": "CCTMXLayer:delete()"},
{ "trigger": ":delete\tCCTMXLayer:delete()", "contents": "delete()"},
{ "trigger": "CCTMXLayer_initWithTilesetInfo\tCCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "CCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": ":initWithTilesetInfo\tCCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": "CCTMXLayer_getTileSet\tCCTMXLayer:getTileSet()", "contents": "CCTMXLayer:getTileSet()"},
{ "trigger": ":getTileSet\tCCTMXLayer:getTileSet()", "contents": "getTileSet()"},
{ "trigger": "CCAccelAmplitude\t", "contents": "CCAccelAmplitude"},
{ "trigger": "CCAccelAmplitude_create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCJumpTiles3D\t", "contents": "CCJumpTiles3D"},
{ "trigger": "CCJumpTiles3D_create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCJumpTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent\t", "contents": "CCPhysicsCollisionEvent"},
{ "trigger": "CCPhysicsCollisionEvent_getDepth\tCCPhysicsCollisionEvent:getDepth(_num)", "contents": "CCPhysicsCollisionEvent:getDepth(_num)"},
{ "trigger": ":getDepth\tCCPhysicsCollisionEvent:getDepth(_num)", "contents": "getDepth(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getBody1\tCCPhysicsCollisionEvent:getBody1()", "contents": "CCPhysicsCollisionEvent:getBody1()"},
{ "trigger": ":getBody1\tCCPhysicsCollisionEvent:getBody1()", "contents": "getBody1()"},
{ "trigger": "CCPhysicsCollisionEvent_getBody2\tCCPhysicsCollisionEvent:getBody2()", "contents": "CCPhysicsCollisionEvent:getBody2()"},
{ "trigger": ":getBody2\tCCPhysicsCollisionEvent:getBody2()", "contents": "getBody2()"},
{ "trigger": "CCPhysicsCollisionEvent_getFriction\tCCPhysicsCollisionEvent:getFriction()", "contents": "CCPhysicsCollisionEvent:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsCollisionEvent:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsCollisionEvent_isFirstContact\tCCPhysicsCollisionEvent:isFirstContact()", "contents": "CCPhysicsCollisionEvent:isFirstContact()"},
{ "trigger": ":isFirstContact\tCCPhysicsCollisionEvent:isFirstContact()", "contents": "isFirstContact()"},
{ "trigger": "CCPhysicsCollisionEvent_getElasticity\tCCPhysicsCollisionEvent:getElasticity()", "contents": "CCPhysicsCollisionEvent:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsCollisionEvent:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsCollisionEvent_getNormal\tCCPhysicsCollisionEvent:getNormal(_num,_num,_num)", "contents": "CCPhysicsCollisionEvent:getNormal(_num,_num,_num)"},
{ "trigger": ":getNormal\tCCPhysicsCollisionEvent:getNormal(_num,_num,_num)", "contents": "getNormal(_num,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getSurfaceVelocities\tCCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)", "contents": "CCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)"},
{ "trigger": ":getSurfaceVelocities\tCCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)", "contents": "getSurfaceVelocities(_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getUserData\tCCPhysicsCollisionEvent:getUserData()", "contents": "CCPhysicsCollisionEvent:getUserData()"},
{ "trigger": ":getUserData\tCCPhysicsCollisionEvent:getUserData()", "contents": "getUserData()"},
{ "trigger": "CCPhysicsCollisionEvent_setUserData\tCCPhysicsCollisionEvent:setUserData(_userdata)", "contents": "CCPhysicsCollisionEvent:setUserData(_userdata)"},
{ "trigger": ":setUserData\tCCPhysicsCollisionEvent:setUserData(_userdata)", "contents": "setUserData(_userdata)"},
{ "trigger": "CCPhysicsCollisionEvent_setSurfaceVelocities\tCCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)", "contents": "CCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)"},
{ "trigger": ":setSurfaceVelocities\tCCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)", "contents": "setSurfaceVelocities(_const_CCPoint)"},
{ "trigger": "CCPhysicsCollisionEvent_getWorld\tCCPhysicsCollisionEvent:getWorld()", "contents": "CCPhysicsCollisionEvent:getWorld()"},
{ "trigger": ":getWorld\tCCPhysicsCollisionEvent:getWorld()", "contents": "getWorld()"},
{ "trigger": "CCPhysicsCollisionEvent_setElasticity\tCCPhysicsCollisionEvent:setElasticity(_num)", "contents": "CCPhysicsCollisionEvent:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsCollisionEvent:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getPoint\tCCPhysicsCollisionEvent:getPoint(_num,_num,_num)", "contents": "CCPhysicsCollisionEvent:getPoint(_num,_num,_num)"},
{ "trigger": ":getPoint\tCCPhysicsCollisionEvent:getPoint(_num,_num,_num)", "contents": "getPoint(_num,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_setFriction\tCCPhysicsCollisionEvent:setFriction(_num)", "contents": "CCPhysicsCollisionEvent:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsCollisionEvent:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getCount\tCCPhysicsCollisionEvent:getCount()", "contents": "CCPhysicsCollisionEvent:getCount()"},
{ "trigger": ":getCount\tCCPhysicsCollisionEvent:getCount()", "contents": "getCount()"},
{ "trigger": "CCInteger\t", "contents": "CCInteger"},
{ "trigger": "CCInteger_getValue\tCCInteger:getValue()", "contents": "CCInteger:getValue()"},
{ "trigger": ":getValue\tCCInteger:getValue()", "contents": "getValue()"},
{ "trigger": "CCInteger_call\tCCInteger:call(_num)", "contents": "CCInteger:call(_num)"},
{ "trigger": ":call\tCCInteger:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCInteger_new\tCCInteger:new(_num)", "contents": "CCInteger:new(_num)"},
{ "trigger": ":new\tCCInteger:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCInteger_new_local\tCCInteger:new_local(_num)", "contents": "CCInteger:new_local(_num)"},
{ "trigger": ":new_local\tCCInteger:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCInteger_create\tCCInteger:create(_num)", "contents": "CCInteger:create(_num)"},
{ "trigger": ":create\tCCInteger:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCMenuItemLabel\t", "contents": "CCMenuItemLabel"},
{ "trigger": "CCMenuItemLabel_setString\tCCMenuItemLabel:setString(_str)", "contents": "CCMenuItemLabel:setString(_str)"},
{ "trigger": ":setString\tCCMenuItemLabel:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCMenuItemLabel_getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "CCMenuItemLabel:getDisabledColor()"},
{ "trigger": ":getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "getDisabledColor()"},
{ "trigger": "CCMenuItemLabel_setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "CCMenuItemLabel:setLabel(_CCNode)"},
{ "trigger": ":setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "setLabel(_CCNode)"},
{ "trigger": "CCMenuItemLabel_create\tCCMenuItemLabel:create(_CCNode)", "contents": "CCMenuItemLabel:create(_CCNode)"},
{ "trigger": ":create\tCCMenuItemLabel:create(_CCNode)", "contents": "create(_CCNode)"},
{ "trigger": "CCMenuItemLabel_getLabel\tCCMenuItemLabel:getLabel()", "contents": "CCMenuItemLabel:getLabel()"},
{ "trigger": ":getLabel\tCCMenuItemLabel:getLabel()", "contents": "getLabel()"},
{ "trigger": "CCMenuItemLabel_setDisabledColor\tCCMenuItemLabel:setDisabledColor(_ccColor3B)", "contents": "CCMenuItemLabel:setDisabledColor(_ccColor3B)"},
{ "trigger": ":setDisabledColor\tCCMenuItemLabel:setDisabledColor(_ccColor3B)", "contents": "setDisabledColor(_ccColor3B)"},
{ "trigger": "CCLayerColor\t", "contents": "CCLayerColor"},
{ "trigger": "CCLayerColor_setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "CCLayerColor:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLayerColor_changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "CCLayerColor:changeWidthAndHeight(_num,_num)"},
{ "trigger": ":changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "changeWidthAndHeight(_num,_num)"},
{ "trigger": "CCLayerColor_setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "CCLayerColor:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLayerColor_getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "CCLayerColor:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCLayerColor_setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "CCLayerColor:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCLayerColor_changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "CCLayerColor:changeWidth(_num)"},
{ "trigger": ":changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "changeWidth(_num)"},
{ "trigger": "CCLayerColor_changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "CCLayerColor:changeHeight(_num)"},
{ "trigger": ":changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "changeHeight(_num)"},
{ "trigger": "CCLayerColor_isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "CCLayerColor:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLayerColor_setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "CCLayerColor:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLayerColor_create\tCCLayerColor:create()", "contents": "CCLayerColor:create()"},
{ "trigger": ":create\tCCLayerColor:create()", "contents": "create()"},
{ "trigger": "CCRenderTexture\t", "contents": "CCRenderTexture"},
{ "trigger": "CCRenderTexture_newCCImage\tCCRenderTexture:newCCImage(_boo)", "contents": "CCRenderTexture:newCCImage(_boo)"},
{ "trigger": ":newCCImage\tCCRenderTexture:newCCImage(_boo)", "contents": "newCCImage(_boo)"},
{ "trigger": "CCRenderTexture_getClearColor\tCCRenderTexture:getClearColor()", "contents": "CCRenderTexture:getClearColor()"},
{ "trigger": ":getClearColor\tCCRenderTexture:getClearColor()", "contents": "getClearColor()"},
{ "trigger": "CCRenderTexture_setClearDepth\tCCRenderTexture:setClearDepth(_num)", "contents": "CCRenderTexture:setClearDepth(_num)"},
{ "trigger": ":setClearDepth\tCCRenderTexture:setClearDepth(_num)", "contents": "setClearDepth(_num)"},
{ "trigger": "CCRenderTexture_beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "CCRenderTexture:beginWithClear(_num,_num,_num,_num)"},
{ "trigger": ":beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "beginWithClear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "CCRenderTexture:clearDepth(_num)"},
{ "trigger": ":clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "clearDepth(_num)"},
{ "trigger": "CCRenderTexture_create\tCCRenderTexture:create(_num,_num)", "contents": "CCRenderTexture:create(_num,_num)"},
{ "trigger": ":create\tCCRenderTexture:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCRenderTexture_getClearFlags\tCCRenderTexture:getClearFlags()", "contents": "CCRenderTexture:getClearFlags()"},
{ "trigger": ":getClearFlags\tCCRenderTexture:getClearFlags()", "contents": "getClearFlags()"},
{ "trigger": "CCRenderTexture_setClearColor\tCCRenderTexture:setClearColor(_ccColor4F)", "contents": "CCRenderTexture:setClearColor(_ccColor4F)"},
{ "trigger": ":setClearColor\tCCRenderTexture:setClearColor(_ccColor4F)", "contents": "setClearColor(_ccColor4F)"},
{ "trigger": "CCRenderTexture_begin\tCCRenderTexture:begin()", "contents": "CCRenderTexture:begin()"},
{ "trigger": ":begin\tCCRenderTexture:begin()", "contents": "begin()"},
{ "trigger": "CCRenderTexture_clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "CCRenderTexture:clear(_num,_num,_num,_num)"},
{ "trigger": ":clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "clear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_setClearStencil\tCCRenderTexture:setClearStencil(_num)", "contents": "CCRenderTexture:setClearStencil(_num)"},
{ "trigger": ":setClearStencil\tCCRenderTexture:setClearStencil(_num)", "contents": "setClearStencil(_num)"},
{ "trigger": "CCRenderTexture_setAutoDraw\tCCRenderTexture:setAutoDraw(_boo)", "contents": "CCRenderTexture:setAutoDraw(_boo)"},
{ "trigger": ":setAutoDraw\tCCRenderTexture:setAutoDraw(_boo)", "contents": "setAutoDraw(_boo)"},
{ "trigger": "CCRenderTexture_getClearDepth\tCCRenderTexture:getClearDepth()", "contents": "CCRenderTexture:getClearDepth()"},
{ "trigger": ":getClearDepth\tCCRenderTexture:getClearDepth()", "contents": "getClearDepth()"},
{ "trigger": "CCRenderTexture_endToLua\tCCRenderTexture:endToLua()", "contents": "CCRenderTexture:endToLua()"},
{ "trigger": ":endToLua\tCCRenderTexture:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCRenderTexture_saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "CCRenderTexture:saveToFile(_str)"},
{ "trigger": ":saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "saveToFile(_str)"},
{ "trigger": "CCRenderTexture_getSprite\tCCRenderTexture:getSprite()", "contents": "CCRenderTexture:getSprite()"},
{ "trigger": ":getSprite\tCCRenderTexture:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCRenderTexture_isAutoDraw\tCCRenderTexture:isAutoDraw()", "contents": "CCRenderTexture:isAutoDraw()"},
{ "trigger": ":isAutoDraw\tCCRenderTexture:isAutoDraw()", "contents": "isAutoDraw()"},
{ "trigger": "CCRenderTexture_getClearStencil\tCCRenderTexture:getClearStencil()", "contents": "CCRenderTexture:getClearStencil()"},
{ "trigger": ":getClearStencil\tCCRenderTexture:getClearStencil()", "contents": "getClearStencil()"},
{ "trigger": "CCRenderTexture_clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "CCRenderTexture:clearStencil(_num)"},
{ "trigger": ":clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "clearStencil(_num)"},
{ "trigger": "CCRenderTexture_setClearFlags\tCCRenderTexture:setClearFlags(_num)", "contents": "CCRenderTexture:setClearFlags(_num)"},
{ "trigger": ":setClearFlags\tCCRenderTexture:setClearFlags(_num)", "contents": "setClearFlags(_num)"},
{ "trigger": "CCTransitionMoveInB\t", "contents": "CCTransitionMoveInB"},
{ "trigger": "CCTransitionMoveInB_create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "CCTransitionMoveInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCCatmullRomBy\t", "contents": "CCCatmullRomBy"},
{ "trigger": "CCCatmullRomBy_create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "CCCatmullRomBy:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCBool\t", "contents": "CCBool"},
{ "trigger": "CCBool_getValue\tCCBool:getValue()", "contents": "CCBool:getValue()"},
{ "trigger": ":getValue\tCCBool:getValue()", "contents": "getValue()"},
{ "trigger": "CCBool_call\tCCBool:call(_boo)", "contents": "CCBool:call(_boo)"},
{ "trigger": ":call\tCCBool:call(_boo)", "contents": "call(_boo)"},
{ "trigger": "CCBool_new\tCCBool:new(_boo)", "contents": "CCBool:new(_boo)"},
{ "trigger": ":new\tCCBool:new(_boo)", "contents": "new(_boo)"},
{ "trigger": "CCBool_new_local\tCCBool:new_local(_boo)", "contents": "CCBool:new_local(_boo)"},
{ "trigger": ":new_local\tCCBool:new_local(_boo)", "contents": "new_local(_boo)"},
{ "trigger": "CCBool_create\tCCBool:create(_boo)", "contents": "CCBool:create(_boo)"},
{ "trigger": ":create\tCCBool:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCTiledGrid3DAction\t", "contents": "CCTiledGrid3DAction"},
{ "trigger": "CCTiledGrid3DAction_create\tCCTiledGrid3DAction:create(_num,_CCSize)", "contents": "CCTiledGrid3DAction:create(_num,_CCSize)"},
{ "trigger": ":create\tCCTiledGrid3DAction:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionMoveInT\t", "contents": "CCTransitionMoveInT"},
{ "trigger": "CCTransitionMoveInT_create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "CCTransitionMoveInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionMoveInL\t", "contents": "CCTransitionMoveInL"},
{ "trigger": "CCTransitionMoveInL_create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "CCTransitionMoveInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionRotoZoom\t", "contents": "CCTransitionRotoZoom"},
{ "trigger": "CCTransitionRotoZoom_create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "CCTransitionRotoZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCFadeOutTRTiles\t", "contents": "CCFadeOutTRTiles"},
{ "trigger": "CCFadeOutTRTiles_create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "CCFadeOutTRTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionMoveInR\t", "contents": "CCTransitionMoveInR"},
{ "trigger": "CCTransitionMoveInR_create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "CCTransitionMoveInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCGridAction\t", "contents": "CCGridAction"},
{ "trigger": "CCPhysicsVector\t", "contents": "CCPhysicsVector"},
{ "trigger": "CCPhysicsVector_createForAngle\tCCPhysicsVector:createForAngle(_num)", "contents": "CCPhysicsVector:createForAngle(_num)"},
{ "trigger": ":createForAngle\tCCPhysicsVector:createForAngle(_num)", "contents": "createForAngle(_num)"},
{ "trigger": "CCPhysicsVector_getValue\tCCPhysicsVector:getValue(_num,_num)", "contents": "CCPhysicsVector:getValue(_num,_num)"},
{ "trigger": ":getValue\tCCPhysicsVector:getValue(_num,_num)", "contents": "getValue(_num,_num)"},
{ "trigger": "CCPhysicsVector_createForRotation\tCCPhysicsVector:createForRotation(_num)", "contents": "CCPhysicsVector:createForRotation(_num)"},
{ "trigger": ":createForRotation\tCCPhysicsVector:createForRotation(_num)", "contents": "createForRotation(_num)"},
{ "trigger": "CCPhysicsVector_sub\tCCPhysicsVector:sub(_CCPhysicsVector)", "contents": "CCPhysicsVector:sub(_CCPhysicsVector)"},
{ "trigger": ":sub\tCCPhysicsVector:sub(_CCPhysicsVector)", "contents": "sub(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_negate\tCCPhysicsVector:negate()", "contents": "CCPhysicsVector:negate()"},
{ "trigger": ":negate\tCCPhysicsVector:negate()", "contents": "negate()"},
{ "trigger": "CCPhysicsVector_rotate\tCCPhysicsVector:rotate(_CCPhysicsVector)", "contents": "CCPhysicsVector:rotate(_CCPhysicsVector)"},
{ "trigger": ":rotate\tCCPhysicsVector:rotate(_CCPhysicsVector)", "contents": "rotate(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_distsq\tCCPhysicsVector:distsq(_CCPhysicsVector)", "contents": "CCPhysicsVector:distsq(_CCPhysicsVector)"},
{ "trigger": ":distsq\tCCPhysicsVector:distsq(_CCPhysicsVector)", "contents": "distsq(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_lengthsq\tCCPhysicsVector:lengthsq()", "contents": "CCPhysicsVector:lengthsq()"},
{ "trigger": ":lengthsq\tCCPhysicsVector:lengthsq()", "contents": "lengthsq()"},
{ "trigger": "CCPhysicsVector_sum\tCCPhysicsVector:sum()", "contents": "CCPhysicsVector:sum()"},
{ "trigger": ":sum\tCCPhysicsVector:sum()", "contents": "sum()"},
{ "trigger": "CCPhysicsVector_equal\tCCPhysicsVector:equal(_CCPhysicsVector)", "contents": "CCPhysicsVector:equal(_CCPhysicsVector)"},
{ "trigger": ":equal\tCCPhysicsVector:equal(_CCPhysicsVector)", "contents": "equal(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_add\tCCPhysicsVector:add(_CCPhysicsVector)", "contents": "CCPhysicsVector:add(_CCPhysicsVector)"},
{ "trigger": ":add\tCCPhysicsVector:add(_CCPhysicsVector)", "contents": "add(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_create\tCCPhysicsVector:create(_const_CCPoint)", "contents": "CCPhysicsVector:create(_const_CCPoint)"},
{ "trigger": ":create\tCCPhysicsVector:create(_const_CCPoint)", "contents": "create(_const_CCPoint)"},
{ "trigger": "CCPhysicsVector_rperp\tCCPhysicsVector:rperp()", "contents": "CCPhysicsVector:rperp()"},
{ "trigger": ":rperp\tCCPhysicsVector:rperp()", "contents": "rperp()"},
{ "trigger": "CCPhysicsVector_angle\tCCPhysicsVector:angle()", "contents": "CCPhysicsVector:angle()"},
{ "trigger": ":angle\tCCPhysicsVector:angle()", "contents": "angle()"},
{ "trigger": "CCPhysicsVector_dot\tCCPhysicsVector:dot(_CCPhysicsVector)", "contents": "CCPhysicsVector:dot(_CCPhysicsVector)"},
{ "trigger": ":dot\tCCPhysicsVector:dot(_CCPhysicsVector)", "contents": "dot(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_perp\tCCPhysicsVector:perp()", "contents": "CCPhysicsVector:perp()"},
{ "trigger": ":perp\tCCPhysicsVector:perp()", "contents": "perp()"},
{ "trigger": "CCPhysicsVector_rotation\tCCPhysicsVector:rotation()", "contents": "CCPhysicsVector:rotation()"},
{ "trigger": ":rotation\tCCPhysicsVector:rotation()", "contents": "rotation()"},
{ "trigger": "CCPhysicsVector_length\tCCPhysicsVector:length()", "contents": "CCPhysicsVector:length()"},
{ "trigger": ":length\tCCPhysicsVector:length()", "contents": "length()"},
{ "trigger": "CCPhysicsVector_multi\tCCPhysicsVector:multi(_num)", "contents": "CCPhysicsVector:multi(_num)"},
{ "trigger": ":multi\tCCPhysicsVector:multi(_num)", "contents": "multi(_num)"},
{ "trigger": "CCPhysicsVector_dist\tCCPhysicsVector:dist(_CCPhysicsVector)", "contents": "CCPhysicsVector:dist(_CCPhysicsVector)"},
{ "trigger": ":dist\tCCPhysicsVector:dist(_CCPhysicsVector)", "contents": "dist(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_cross\tCCPhysicsVector:cross(_CCPhysicsVector)", "contents": "CCPhysicsVector:cross(_CCPhysicsVector)"},
{ "trigger": ":cross\tCCPhysicsVector:cross(_CCPhysicsVector)", "contents": "cross(_CCPhysicsVector)"},
{ "trigger": "CCParallaxNode\t", "contents": "CCParallaxNode"},
{ "trigger": "CCParallaxNode_addChild\tCCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)", "contents": "CCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)"},
{ "trigger": ":addChild\tCCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)", "contents": "addChild(_CCNode,_num,_CCPoint,_CCPoint)"},
{ "trigger": "CCParallaxNode_create\tCCParallaxNode:create()", "contents": "CCParallaxNode:create()"},
{ "trigger": ":create\tCCParallaxNode:create()", "contents": "create()"},
{ "trigger": "CCEaseOut\t", "contents": "CCEaseOut"},
{ "trigger": "CCEaseOut_create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "CCEaseOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCEGLView\t", "contents": "CCEGLView"},
{ "trigger": "CCEGLView_setFrameSize\tCCEGLView:setFrameSize(_num,_num)", "contents": "CCEGLView:setFrameSize(_num,_num)"},
{ "trigger": ":setFrameSize\tCCEGLView:setFrameSize(_num,_num)", "contents": "setFrameSize(_num,_num)"},
{ "trigger": "CCEGLView_setDesignResolutionSize\tCCEGLView:setDesignResolutionSize(_num,_num,_num)", "contents": "CCEGLView:setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": ":setDesignResolutionSize\tCCEGLView:setDesignResolutionSize(_num,_num,_num)", "contents": "setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": "CCEGLView_getDesignResolutionSize\tCCEGLView:getDesignResolutionSize()", "contents": "CCEGLView:getDesignResolutionSize()"},
{ "trigger": ":getDesignResolutionSize\tCCEGLView:getDesignResolutionSize()", "contents": "getDesignResolutionSize()"},
{ "trigger": "CCEGLView_getFrameSize\tCCEGLView:getFrameSize()", "contents": "CCEGLView:getFrameSize()"},
{ "trigger": ":getFrameSize\tCCEGLView:getFrameSize()", "contents": "getFrameSize()"},
{ "trigger": "CCEGLView_getScaleY\tCCEGLView:getScaleY()", "contents": "CCEGLView:getScaleY()"},
{ "trigger": ":getScaleY\tCCEGLView:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCEGLView_getVisibleOrigin\tCCEGLView:getVisibleOrigin()", "contents": "CCEGLView:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCEGLView:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCEGLView_getScaleX\tCCEGLView:getScaleX()", "contents": "CCEGLView:getScaleX()"},
{ "trigger": ":getScaleX\tCCEGLView:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCEGLView_isScissorEnabled\tCCEGLView:isScissorEnabled()", "contents": "CCEGLView:isScissorEnabled()"},
{ "trigger": ":isScissorEnabled\tCCEGLView:isScissorEnabled()", "contents": "isScissorEnabled()"},
{ "trigger": "CCEGLView_sharedOpenGLView\tCCEGLView:sharedOpenGLView()", "contents": "CCEGLView:sharedOpenGLView()"},
{ "trigger": ":sharedOpenGLView\tCCEGLView:sharedOpenGLView()", "contents": "sharedOpenGLView()"},
{ "trigger": "CCEGLView_setViewPortInPoints\tCCEGLView:setViewPortInPoints(_num,_num,_num,_num)", "contents": "CCEGLView:setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setViewPortInPoints\tCCEGLView:setViewPortInPoints(_num,_num,_num,_num)", "contents": "setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCEGLView_getScissorRect\tCCEGLView:getScissorRect()", "contents": "CCEGLView:getScissorRect()"},
{ "trigger": ":getScissorRect\tCCEGLView:getScissorRect()", "contents": "getScissorRect()"},
{ "trigger": "CCEGLView_getVisibleSize\tCCEGLView:getVisibleSize()", "contents": "CCEGLView:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCEGLView:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCEGLView_getViewPortRect\tCCEGLView:getViewPortRect()", "contents": "CCEGLView:getViewPortRect()"},
{ "trigger": ":getViewPortRect\tCCEGLView:getViewPortRect()", "contents": "getViewPortRect()"},
{ "trigger": "CCEGLView_setScissorInPoints\tCCEGLView:setScissorInPoints(_num,_num,_num,_num)", "contents": "CCEGLView:setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setScissorInPoints\tCCEGLView:setScissorInPoints(_num,_num,_num,_num)", "contents": "setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCControlSaturationBrightnessPicker\t", "contents": "CCControlSaturationBrightnessPicker"},
{ "trigger": "CCControlSaturationBrightnessPicker_getBrightness\tCCControlSaturationBrightnessPicker:getBrightness()", "contents": "CCControlSaturationBrightnessPicker:getBrightness()"},
{ "trigger": ":getBrightness\tCCControlSaturationBrightnessPicker:getBrightness()", "contents": "getBrightness()"},
{ "trigger": "CCControlSaturationBrightnessPicker_create\tCCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)", "contents": "CCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)"},
{ "trigger": ":create\tCCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)", "contents": "create(_CCNode,_CCPoint)"},
{ "trigger": "CCControlSaturationBrightnessPicker_getSaturation\tCCControlSaturationBrightnessPicker:getSaturation()", "contents": "CCControlSaturationBrightnessPicker:getSaturation()"},
{ "trigger": ":getSaturation\tCCControlSaturationBrightnessPicker:getSaturation()", "contents": "getSaturation()"},
{ "trigger": "CCControlUtils\t", "contents": "CCControlUtils"},
{ "trigger": "CCControlUtils_CCRectUnion\tCCControlUtils:CCRectUnion(_CCRect,_CCRect)", "contents": "CCControlUtils:CCRectUnion(_CCRect,_CCRect)"},
{ "trigger": ":CCRectUnion\tCCControlUtils:CCRectUnion(_CCRect,_CCRect)", "contents": "CCRectUnion(_CCRect,_CCRect)"},
{ "trigger": "CCControlUtils_HSVfromRGB\tCCControlUtils:HSVfromRGB(_RGBA)", "contents": "CCControlUtils:HSVfromRGB(_RGBA)"},
{ "trigger": ":HSVfromRGB\tCCControlUtils:HSVfromRGB(_RGBA)", "contents": "HSVfromRGB(_RGBA)"},
{ "trigger": "CCControlUtils_RGBfromHSV\tCCControlUtils:RGBfromHSV(_HSV)", "contents": "CCControlUtils:RGBfromHSV(_HSV)"},
{ "trigger": ":RGBfromHSV\tCCControlUtils:RGBfromHSV(_HSV)", "contents": "RGBfromHSV(_HSV)"},
{ "trigger": "CCNode\t", "contents": "CCNode"},
{ "trigger": "CCNode_cleanup\tCCNode:cleanup()", "contents": "CCNode:cleanup()"},
{ "trigger": ":cleanup\tCCNode:cleanup()", "contents": "cleanup()"},
{ "trigger": "CCNode_setScaleY\tCCNode:setScaleY(_num)", "contents": "CCNode:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCNode:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCNode_getChildrenCount\tCCNode:getChildrenCount()", "contents": "CCNode:getChildrenCount()"},
{ "trigger": ":getChildrenCount\tCCNode:getChildrenCount()", "contents": "getChildrenCount()"},
{ "trigger": "CCNode_setScaleX\tCCNode:setScaleX(_num)", "contents": "CCNode:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCNode:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCNode_reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "CCNode:reorderChild(_CCNode,_num)"},
{ "trigger": ":reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "reorderChild(_CCNode,_num)"},
{ "trigger": "CCNode_getChildren\tCCNode:getChildren()", "contents": "CCNode:getChildren()"},
{ "trigger": ":getChildren\tCCNode:getChildren()", "contents": "getChildren()"},
{ "trigger": "CCNode_visit\tCCNode:visit()", "contents": "CCNode:visit()"},
{ "trigger": ":visit\tCCNode:visit()", "contents": "visit()"},
{ "trigger": "CCNode_isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "CCNode:isIgnoreAnchorPointForPosition()"},
{ "trigger": ":isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "isIgnoreAnchorPointForPosition()"},
{ "trigger": "CCNode_removeFromParent\tCCNode:removeFromParent()", "contents": "CCNode:removeFromParent()"},
{ "trigger": ":removeFromParent\tCCNode:removeFromParent()", "contents": "removeFromParent()"},
{ "trigger": "CCNode_convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "CCNode:convertToWorldSpace(_CCPoint)"},
{ "trigger": ":convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "convertToWorldSpace(_CCPoint)"},
{ "trigger": "CCNode_getBoundingBox\tCCNode:getBoundingBox()", "contents": "CCNode:getBoundingBox()"},
{ "trigger": ":getBoundingBox\tCCNode:getBoundingBox()", "contents": "getBoundingBox()"},
{ "trigger": "CCNode_numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "CCNode:numberOfRunningActions()"},
{ "trigger": ":numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "numberOfRunningActions()"},
{ "trigger": "CCNode_draw\tCCNode:draw()", "contents": "CCNode:draw()"},
{ "trigger": ":draw\tCCNode:draw()", "contents": "draw()"},
{ "trigger": "CCNode_setRotation\tCCNode:setRotation(_num)", "contents": "CCNode:setRotation(_num)"},
{ "trigger": ":setRotation\tCCNode:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCNode_setTag\tCCNode:setTag(_num)", "contents": "CCNode:setTag(_num)"},
{ "trigger": ":setTag\tCCNode:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCNode_getScale\tCCNode:getScale()", "contents": "CCNode:getScale()"},
{ "trigger": ":getScale\tCCNode:getScale()", "contents": "getScale()"},
{ "trigger": "CCNode_scheduleUpdate\tCCNode:scheduleUpdate()", "contents": "CCNode:scheduleUpdate()"},
{ "trigger": ":scheduleUpdate\tCCNode:scheduleUpdate()", "contents": "scheduleUpdate()"},
{ "trigger": "CCNode_getShaderProgram\tCCNode:getShaderProgram()", "contents": "CCNode:getShaderProgram()"},
{ "trigger": ":getShaderProgram\tCCNode:getShaderProgram()", "contents": "getShaderProgram()"},
{ "trigger": "CCNode_convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "CCNode:convertToNodeSpace(_CCPoint)"},
{ "trigger": ":convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "convertToNodeSpace(_CCPoint)"},
{ "trigger": "CCNode_runAction\tCCNode:runAction(_CCAction)", "contents": "CCNode:runAction(_CCAction)"},
{ "trigger": ":runAction\tCCNode:runAction(_CCAction)", "contents": "runAction(_CCAction)"},
{ "trigger": "CCNode_setRotationX\tCCNode:setRotationX(_num)", "contents": "CCNode:setRotationX(_num)"},
{ "trigger": ":setRotationX\tCCNode:setRotationX(_num)", "contents": "setRotationX(_num)"},
{ "trigger": "CCNode_setRotationY\tCCNode:setRotationY(_num)", "contents": "CCNode:setRotationY(_num)"},
{ "trigger": ":setRotationY\tCCNode:setRotationY(_num)", "contents": "setRotationY(_num)"},
{ "trigger": "CCNode_getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "CCNode:getAnchorPointInPoints()"},
{ "trigger": ":getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "getAnchorPointInPoints()"},
{ "trigger": "CCNode_convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": "CCNode_scheduleUpdateWithPriority\tCCNode:scheduleUpdateWithPriority(_num)", "contents": "CCNode:scheduleUpdateWithPriority(_num)"},
{ "trigger": ":scheduleUpdateWithPriority\tCCNode:scheduleUpdateWithPriority(_num)", "contents": "scheduleUpdateWithPriority(_num)"},
{ "trigger": "CCNode_setVertexZ\tCCNode:setVertexZ(_num)", "contents": "CCNode:setVertexZ(_num)"},
{ "trigger": ":setVertexZ\tCCNode:setVertexZ(_num)", "contents": "setVertexZ(_num)"},
{ "trigger": "CCNode_isRunning\tCCNode:isRunning()", "contents": "CCNode:isRunning()"},
{ "trigger": ":isRunning\tCCNode:isRunning()", "contents": "isRunning()"},
{ "trigger": "CCNode_setParent\tCCNode:setParent(_CCNode)", "contents": "CCNode:setParent(_CCNode)"},
{ "trigger": ":setParent\tCCNode:setParent(_CCNode)", "contents": "setParent(_CCNode)"},
{ "trigger": "CCNode_getParent\tCCNode:getParent()", "contents": "CCNode:getParent()"},
{ "trigger": ":getParent\tCCNode:getParent()", "contents": "getParent()"},
{ "trigger": "CCNode_getContentSize\tCCNode:getContentSize()", "contents": "CCNode:getContentSize()"},
{ "trigger": ":getContentSize\tCCNode:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCNode_getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "CCNode:getAnchorPoint()"},
{ "trigger": ":getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "getAnchorPoint()"},
{ "trigger": "CCNode_setPosition\tCCNode:setPosition(_CCPoint)", "contents": "CCNode:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCNode:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCNode_getRotation\tCCNode:getRotation()", "contents": "CCNode:getRotation()"},
{ "trigger": ":getRotation\tCCNode:getRotation()", "contents": "getRotation()"},
{ "trigger": "CCNode_create\tCCNode:create()", "contents": "CCNode:create()"},
{ "trigger": ":create\tCCNode:create()", "contents": "create()"},
{ "trigger": "CCNode_convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "CCNode:convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": ":convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_getUserObject\tCCNode:getUserObject()", "contents": "CCNode:getUserObject()"},
{ "trigger": ":getUserObject\tCCNode:getUserObject()", "contents": "getUserObject()"},
{ "trigger": "CCNode_stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "CCNode:stopActionByTag(_num)"},
{ "trigger": ":stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "stopActionByTag(_num)"},
{ "trigger": "CCNode_convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": "CCNode_convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "CCNode:convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": ":convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_removeChild\tCCNode:removeChild(_CCNode)", "contents": "CCNode:removeChild(_CCNode)"},
{ "trigger": ":removeChild\tCCNode:removeChild(_CCNode)", "contents": "removeChild(_CCNode)"},
{ "trigger": "CCNode_getRotationY\tCCNode:getRotationY()", "contents": "CCNode:getRotationY()"},
{ "trigger": ":getRotationY\tCCNode:getRotationY()", "contents": "getRotationY()"},
{ "trigger": "CCNode_getActionByTag\tCCNode:getActionByTag(_num)", "contents": "CCNode:getActionByTag(_num)"},
{ "trigger": ":getActionByTag\tCCNode:getActionByTag(_num)", "contents": "getActionByTag(_num)"},
{ "trigger": "CCNode_stopAllActions\tCCNode:stopAllActions()", "contents": "CCNode:stopAllActions()"},
{ "trigger": ":stopAllActions\tCCNode:stopAllActions()", "contents": "stopAllActions()"},
{ "trigger": "CCNode_getRotationX\tCCNode:getRotationX()", "contents": "CCNode:getRotationX()"},
{ "trigger": ":getRotationX\tCCNode:getRotationX()", "contents": "getRotationX()"},
{ "trigger": "CCNode_addChild\tCCNode:addChild(_CCNode)", "contents": "CCNode:addChild(_CCNode)"},
{ "trigger": ":addChild\tCCNode:addChild(_CCNode)", "contents": "addChild(_CCNode)"},
{ "trigger": "CCNode_unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "CCNode:unregisterScriptHandler()"},
{ "trigger": ":unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "unregisterScriptHandler()"},
{ "trigger": "CCNode_sortAllChildren\tCCNode:sortAllChildren()", "contents": "CCNode:sortAllChildren()"},
{ "trigger": ":sortAllChildren\tCCNode:sortAllChildren()", "contents": "sortAllChildren()"},
{ "trigger": "CCNode_getChildByTag\tCCNode:getChildByTag(_num)", "contents": "CCNode:getChildByTag(_num)"},
{ "trigger": ":getChildByTag\tCCNode:getChildByTag(_num)", "contents": "getChildByTag(_num)"},
{ "trigger": "CCNode_getTag\tCCNode:getTag()", "contents": "CCNode:getTag()"},
{ "trigger": ":getTag\tCCNode:getTag()", "contents": "getTag()"},
{ "trigger": "CCNode_setShaderProgram\tCCNode:setShaderProgram(_CCGLProgram)", "contents": "CCNode:setShaderProgram(_CCGLProgram)"},
{ "trigger": ":setShaderProgram\tCCNode:setShaderProgram(_CCGLProgram)", "contents": "setShaderProgram(_CCGLProgram)"},
{ "trigger": "CCNode_getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "CCNode:getOrderOfArrival()"},
{ "trigger": ":getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "getOrderOfArrival()"},
{ "trigger": "CCNode_setZOrder\tCCNode:setZOrder(_num)", "contents": "CCNode:setZOrder(_num)"},
{ "trigger": ":setZOrder\tCCNode:setZOrder(_num)", "contents": "setZOrder(_num)"},
{ "trigger": "CCNode_getVertexZ\tCCNode:getVertexZ()", "contents": "CCNode:getVertexZ()"},
{ "trigger": ":getVertexZ\tCCNode:getVertexZ()", "contents": "getVertexZ()"},
{ "trigger": "CCNode_getScaleY\tCCNode:getScaleY()", "contents": "CCNode:getScaleY()"},
{ "trigger": ":getScaleY\tCCNode:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCNode_getPosition\tCCNode:getPosition(_num,_num)", "contents": "CCNode:getPosition(_num,_num)"},
{ "trigger": ":getPosition\tCCNode:getPosition(_num,_num)", "contents": "getPosition(_num,_num)"},
{ "trigger": "CCNode_setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "CCNode:setAnchorPoint(_CCPoint)"},
{ "trigger": ":setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "setAnchorPoint(_CCPoint)"},
{ "trigger": "CCNode_getScaleX\tCCNode:getScaleX()", "contents": "CCNode:getScaleX()"},
{ "trigger": ":getScaleX\tCCNode:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCNode_removeAllChildren\tCCNode:removeAllChildren()", "contents": "CCNode:removeAllChildren()"},
{ "trigger": ":removeAllChildren\tCCNode:removeAllChildren()", "contents": "removeAllChildren()"},
{ "trigger": "CCNode_boundingBox\tCCNode:boundingBox()", "contents": "CCNode:boundingBox()"},
{ "trigger": ":boundingBox\tCCNode:boundingBox()", "contents": "boundingBox()"},
{ "trigger": "CCNode_isVisible\tCCNode:isVisible()", "contents": "CCNode:isVisible()"},
{ "trigger": ":isVisible\tCCNode:isVisible()", "contents": "isVisible()"},
{ "trigger": "CCNode_getPositionY\tCCNode:getPositionY()", "contents": "CCNode:getPositionY()"},
{ "trigger": ":getPositionY\tCCNode:getPositionY()", "contents": "getPositionY()"},
{ "trigger": "CCNode_getPositionX\tCCNode:getPositionX()", "contents": "CCNode:getPositionX()"},
{ "trigger": ":getPositionX\tCCNode:getPositionX()", "contents": "getPositionX()"},
{ "trigger": "CCNode_scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "CCNode:scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": ":scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": "CCNode_getZOrder\tCCNode:getZOrder()", "contents": "CCNode:getZOrder()"},
{ "trigger": ":getZOrder\tCCNode:getZOrder()", "contents": "getZOrder()"},
{ "trigger": "CCNode_getSkewY\tCCNode:getSkewY()", "contents": "CCNode:getSkewY()"},
{ "trigger": ":getSkewY\tCCNode:getSkewY()", "contents": "getSkewY()"},
{ "trigger": "CCNode_getSkewX\tCCNode:getSkewX()", "contents": "CCNode:getSkewX()"},
{ "trigger": ":getSkewX\tCCNode:getSkewX()", "contents": "getSkewX()"},
{ "trigger": "CCNode_unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "CCNode:unscheduleUpdate()"},
{ "trigger": ":unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "unscheduleUpdate()"},
{ "trigger": "CCNode_setSkewY\tCCNode:setSkewY(_num)", "contents": "CCNode:setSkewY(_num)"},
{ "trigger": ":setSkewY\tCCNode:setSkewY(_num)", "contents": "setSkewY(_num)"},
{ "trigger": "CCNode_setSkewX\tCCNode:setSkewX(_num)", "contents": "CCNode:setSkewX(_num)"},
{ "trigger": ":setSkewX\tCCNode:setSkewX(_num)", "contents": "setSkewX(_num)"},
{ "trigger": "CCNode_stopAction\tCCNode:stopAction(_CCAction)", "contents": "CCNode:stopAction(_CCAction)"},
{ "trigger": ":stopAction\tCCNode:stopAction(_CCAction)", "contents": "stopAction(_CCAction)"},
{ "trigger": "CCNode_setScale\tCCNode:setScale(_num)", "contents": "CCNode:setScale(_num)"},
{ "trigger": ":setScale\tCCNode:setScale(_num)", "contents": "setScale(_num)"},
{ "trigger": "CCNode_setVisible\tCCNode:setVisible(_boo)", "contents": "CCNode:setVisible(_boo)"},
{ "trigger": ":setVisible\tCCNode:setVisible(_boo)", "contents": "setVisible(_boo)"},
{ "trigger": "CCNode_setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "CCNode:setUserObject(_CCObject)"},
{ "trigger": ":setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "setUserObject(_CCObject)"},
{ "trigger": "CCNode_removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "CCNode:removeFromParentAndCleanup(_boo)"},
{ "trigger": ":removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "removeFromParentAndCleanup(_boo)"},
{ "trigger": "CCNode_registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "CCNode:registerScriptHandler(_listener)"},
{ "trigger": ":registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "registerScriptHandler(_listener)"},
{ "trigger": "CCNode_getCamera\tCCNode:getCamera()", "contents": "CCNode:getCamera()"},
{ "trigger": ":getCamera\tCCNode:getCamera()", "contents": "getCamera()"},
{ "trigger": "CCNode_ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "CCNode:ignoreAnchorPointForPosition(_boo)"},
{ "trigger": ":ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "ignoreAnchorPointForPosition(_boo)"},
{ "trigger": "CCNode_getPositionInCCPoint\tCCNode:getPositionInCCPoint()", "contents": "CCNode:getPositionInCCPoint()"},
{ "trigger": ":getPositionInCCPoint\tCCNode:getPositionInCCPoint()", "contents": "getPositionInCCPoint()"},
{ "trigger": "CCNode_removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "CCNode:removeAllChildrenWithCleanup(_boo)"},
{ "trigger": ":removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "removeAllChildrenWithCleanup(_boo)"},
{ "trigger": "CCNode_setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "CCNode:setOrderOfArrival(_num)"},
{ "trigger": ":setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "setOrderOfArrival(_num)"},
{ "trigger": "CCNode_removeChildByTag\tCCNode:removeChildByTag(_num)", "contents": "CCNode:removeChildByTag(_num)"},
{ "trigger": ":removeChildByTag\tCCNode:removeChildByTag(_num)", "contents": "removeChildByTag(_num)"},
{ "trigger": "CCNode_setPositionY\tCCNode:setPositionY(_num)", "contents": "CCNode:setPositionY(_num)"},
{ "trigger": ":setPositionY\tCCNode:setPositionY(_num)", "contents": "setPositionY(_num)"},
{ "trigger": "CCNode_setPositionX\tCCNode:setPositionX(_num)", "contents": "CCNode:setPositionX(_num)"},
{ "trigger": ":setPositionX\tCCNode:setPositionX(_num)", "contents": "setPositionX(_num)"},
{ "trigger": "CCNode_setContentSize\tCCNode:setContentSize(_CCSize)", "contents": "CCNode:setContentSize(_CCSize)"},
{ "trigger": ":setContentSize\tCCNode:setContentSize(_CCSize)", "contents": "setContentSize(_CCSize)"},
{ "trigger": "CCLens3D\t", "contents": "CCLens3D"},
{ "trigger": "CCLens3D_create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "CCLens3D:create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": ":create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": "CCAccelerometer\t", "contents": "CCAccelerometer"},
{ "trigger": "CCAccelerometer_setAccelerometerInterval\tCCAccelerometer:setAccelerometerInterval(_num)", "contents": "CCAccelerometer:setAccelerometerInterval(_num)"},
{ "trigger": ":setAccelerometerInterval\tCCAccelerometer:setAccelerometerInterval(_num)", "contents": "setAccelerometerInterval(_num)"},
{ "trigger": "CCBlink\t", "contents": "CCBlink"},
{ "trigger": "CCBlink_create\tCCBlink:create(_num,_num)", "contents": "CCBlink:create(_num,_num)"},
{ "trigger": ":create\tCCBlink:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "ArmatureDataManager\t", "contents": "ArmatureDataManager"},
{ "trigger": "ArmatureDataManager_addSpriteFrameFromFile\tArmatureDataManager:addSpriteFrameFromFile(_str,_str)", "contents": "ArmatureDataManager:addSpriteFrameFromFile(_str,_str)"},
{ "trigger": ":addSpriteFrameFromFile\tArmatureDataManager:addSpriteFrameFromFile(_str,_str)", "contents": "addSpriteFrameFromFile(_str,_str)"},
{ "trigger": "ArmatureDataManager_purgeArmatureSystem\tArmatureDataManager:purgeArmatureSystem()", "contents": "ArmatureDataManager:purgeArmatureSystem()"},
{ "trigger": ":purgeArmatureSystem\tArmatureDataManager:purgeArmatureSystem()", "contents": "purgeArmatureSystem()"},
{ "trigger": "ArmatureDataManager_sharedArmatureDataManager\tArmatureDataManager:sharedArmatureDataManager()", "contents": "ArmatureDataManager:sharedArmatureDataManager()"},
{ "trigger": ":sharedArmatureDataManager\tArmatureDataManager:sharedArmatureDataManager()", "contents": "sharedArmatureDataManager()"},
{ "trigger": "ArmatureDataManager_removeAll\tArmatureDataManager:removeAll()", "contents": "ArmatureDataManager:removeAll()"},
{ "trigger": ":removeAll\tArmatureDataManager:removeAll()", "contents": "removeAll()"},
{ "trigger": "ArmatureDataManager_addArmatureFileInfo\tArmatureDataManager:addArmatureFileInfo(_str,_str,_str)", "contents": "ArmatureDataManager:addArmatureFileInfo(_str,_str,_str)"},
{ "trigger": ":addArmatureFileInfo\tArmatureDataManager:addArmatureFileInfo(_str,_str,_str)", "contents": "addArmatureFileInfo(_str,_str,_str)"},
{ "trigger": "CCFadeOutUpTiles\t", "contents": "CCFadeOutUpTiles"},
{ "trigger": "CCFadeOutUpTiles_create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "CCFadeOutUpTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCMenuItemAtlasFont\t", "contents": "CCMenuItemAtlasFont"},
{ "trigger": "CCMenuItemAtlasFont_create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "CCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)"},
{ "trigger": ":create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "create(_str,_str,_num,_num,_num)"},
{ "trigger": "CCWavesTiles3D\t", "contents": "CCWavesTiles3D"},
{ "trigger": "CCWavesTiles3D_create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCWavesTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCMoveBy\t", "contents": "CCMoveBy"},
{ "trigger": "CCMoveBy_create\tCCMoveBy:create(_num,_CCPoint)", "contents": "CCMoveBy:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveBy:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCRectShape\t", "contents": "CCRectShape"},
{ "trigger": "CCRectShape_setFill\tCCRectShape:setFill(_boo)", "contents": "CCRectShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCRectShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCRectShape_setSize\tCCRectShape:setSize(_CCSize)", "contents": "CCRectShape:setSize(_CCSize)"},
{ "trigger": ":setSize\tCCRectShape:setSize(_CCSize)", "contents": "setSize(_CCSize)"},
{ "trigger": "CCRectShape_isFill\tCCRectShape:isFill()", "contents": "CCRectShape:isFill()"},
{ "trigger": ":isFill\tCCRectShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCRectShape_getSize\tCCRectShape:getSize()", "contents": "CCRectShape:getSize()"},
{ "trigger": ":getSize\tCCRectShape:getSize()", "contents": "getSize()"},
{ "trigger": "CCRectShape_create\tCCRectShape:create(_CCSize)", "contents": "CCRectShape:create(_CCSize)"},
{ "trigger": ":create\tCCRectShape:create(_CCSize)", "contents": "create(_CCSize)"},
{ "trigger": "CCPointShape\t", "contents": "CCPointShape"},
{ "trigger": "CCPointShape_create\tCCPointShape:create()", "contents": "CCPointShape:create()"},
{ "trigger": ":create\tCCPointShape:create()", "contents": "create()"},
{ "trigger": "CCMoveTo\t", "contents": "CCMoveTo"},
{ "trigger": "CCMoveTo_create\tCCMoveTo:create(_num,_CCPoint)", "contents": "CCMoveTo:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveTo:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCEaseBounceOut\t", "contents": "CCEaseBounceOut"},
{ "trigger": "CCEaseBounceOut_create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "CCEaseBounceOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCSpriteFrameCache\t", "contents": "CCSpriteFrameCache"},
{ "trigger": "CCSpriteFrameCache_spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "CCSpriteFrameCache:spriteFrameByName(_str)"},
{ "trigger": ":spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "spriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "CCSpriteFrameCache:removeSpriteFrames()"},
{ "trigger": ":removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "removeSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "CCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": ":addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": "CCSpriteFrameCache_addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "CCSpriteFrameCache:addSpriteFramesWithFile(_str)"},
{ "trigger": ":addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "addSpriteFramesWithFile(_str)"},
{ "trigger": "CCSpriteFrameCache_purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:purgeSharedSpriteFrameCache()"},
{ "trigger": ":purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "purgeSharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "CCSpriteFrameCache:removeSpriteFrameByName(_str)"},
{ "trigger": ":removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "removeSpriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "CCSpriteFrameCache:removeUnusedSpriteFrames()"},
{ "trigger": ":removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "removeUnusedSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:sharedSpriteFrameCache()"},
{ "trigger": ":sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "sharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": ":removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromFile(_str)"},
{ "trigger": ":removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "removeSpriteFramesFromFile(_str)"},
{ "trigger": "CCMenuItemSprite\t", "contents": "CCMenuItemSprite"},
{ "trigger": "CCMenuItemSprite_getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "CCMenuItemSprite:getNormalImage()"},
{ "trigger": ":getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "getNormalImage()"},
{ "trigger": "CCMenuItemSprite_setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "CCMenuItemSprite:setDisabledImage(_CCNode)"},
{ "trigger": ":setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "setDisabledImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "CCMenuItemSprite:setSelectedImage(_CCNode)"},
{ "trigger": ":setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "setSelectedImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "CCMenuItemSprite:setNormalImage(_CCNode)"},
{ "trigger": ":setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "setNormalImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "CCMenuItemSprite:getSelectedImage()"},
{ "trigger": ":getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "getSelectedImage()"},
{ "trigger": "CCMenuItemSprite_create\tCCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)", "contents": "CCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)"},
{ "trigger": ":create\tCCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)", "contents": "create(_CCNode,_CCNode,_CCNode)"},
{ "trigger": "CCMenuItemSprite_getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "CCMenuItemSprite:getDisabledImage()"},
{ "trigger": ":getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "getDisabledImage()"},
{ "trigger": "CCControlSlider\t", "contents": "CCControlSlider"},
{ "trigger": "CCControlSlider_setMaximumAllowedValue\tCCControlSlider:setMaximumAllowedValue(_num)", "contents": "CCControlSlider:setMaximumAllowedValue(_num)"},
{ "trigger": ":setMaximumAllowedValue\tCCControlSlider:setMaximumAllowedValue(_num)", "contents": "setMaximumAllowedValue(_num)"},
{ "trigger": "CCControlSlider_getMaximumAllowedValue\tCCControlSlider:getMaximumAllowedValue()", "contents": "CCControlSlider:getMaximumAllowedValue()"},
{ "trigger": ":getMaximumAllowedValue\tCCControlSlider:getMaximumAllowedValue()", "contents": "getMaximumAllowedValue()"},
{ "trigger": "CCControlSlider_getValue\tCCControlSlider:getValue()", "contents": "CCControlSlider:getValue()"},
{ "trigger": ":getValue\tCCControlSlider:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlSlider_getMaximumValue\tCCControlSlider:getMaximumValue()", "contents": "CCControlSlider:getMaximumValue()"},
{ "trigger": ":getMaximumValue\tCCControlSlider:getMaximumValue()", "contents": "getMaximumValue()"},
{ "trigger": "CCControlSlider_setMinimumValue\tCCControlSlider:setMinimumValue(_num)", "contents": "CCControlSlider:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlSlider:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlSlider_getMinimumAllowedValue\tCCControlSlider:getMinimumAllowedValue()", "contents": "CCControlSlider:getMinimumAllowedValue()"},
{ "trigger": ":getMinimumAllowedValue\tCCControlSlider:getMinimumAllowedValue()", "contents": "getMinimumAllowedValue()"},
{ "trigger": "CCControlSlider_setMaximumValue\tCCControlSlider:setMaximumValue(_num)", "contents": "CCControlSlider:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlSlider:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlSlider_getMinimumValue\tCCControlSlider:getMinimumValue()", "contents": "CCControlSlider:getMinimumValue()"},
{ "trigger": ":getMinimumValue\tCCControlSlider:getMinimumValue()", "contents": "getMinimumValue()"},
{ "trigger": "CCControlSlider_setValue\tCCControlSlider:setValue(_num)", "contents": "CCControlSlider:setValue(_num)"},
{ "trigger": ":setValue\tCCControlSlider:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlSlider_setMinimumAllowedValue\tCCControlSlider:setMinimumAllowedValue(_num)", "contents": "CCControlSlider:setMinimumAllowedValue(_num)"},
{ "trigger": ":setMinimumAllowedValue\tCCControlSlider:setMinimumAllowedValue(_num)", "contents": "setMinimumAllowedValue(_num)"},
{ "trigger": "CCControlSlider_create\tCCControlSlider:create(_str,_str,_str)", "contents": "CCControlSlider:create(_str,_str,_str)"},
{ "trigger": ":create\tCCControlSlider:create(_str,_str,_str)", "contents": "create(_str,_str,_str)"},
{ "trigger": "ccBezierConfig\t", "contents": "ccBezierConfig"},
{ "trigger": "ccBezierConfig_call\tccBezierConfig:call()", "contents": "ccBezierConfig:call()"},
{ "trigger": ":call\tccBezierConfig:call()", "contents": "call()"},
{ "trigger": "ccBezierConfig_new\tccBezierConfig:new()", "contents": "ccBezierConfig:new()"},
{ "trigger": ":new\tccBezierConfig:new()", "contents": "new()"},
{ "trigger": "ccBezierConfig_new_local\tccBezierConfig:new_local()", "contents": "ccBezierConfig:new_local()"},
{ "trigger": ":new_local\tccBezierConfig:new_local()", "contents": "new_local()"},
{ "trigger": "ccBezierConfig_delete\tccBezierConfig:delete()", "contents": "ccBezierConfig:delete()"},
{ "trigger": ":delete\tccBezierConfig:delete()", "contents": "delete()"},
{ "trigger": "CCUserDefault\t", "contents": "CCUserDefault"},
{ "trigger": "CCUserDefault_purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "CCUserDefault:purgeSharedUserDefault()"},
{ "trigger": ":purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "purgeSharedUserDefault()"},
{ "trigger": "CCUserDefault_getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "CCUserDefault:getFloatForKey(_str)"},
{ "trigger": ":getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "getFloatForKey(_str)"},
{ "trigger": "CCUserDefault_getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "CCUserDefault:getDoubleForKey(_str)"},
{ "trigger": ":getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "getDoubleForKey(_str)"},
{ "trigger": "CCUserDefault_setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "CCUserDefault:setDoubleForKey(_str,_num)"},
{ "trigger": ":setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "setDoubleForKey(_str,_num)"},
{ "trigger": "CCUserDefault_getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "CCUserDefault:getStringForKey(_str)"},
{ "trigger": ":getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "getStringForKey(_str)"},
{ "trigger": "CCUserDefault_setStringForKey\tCCUserDefault:setStringForKey(_str,_str)", "contents": "CCUserDefault:setStringForKey(_str,_str)"},
{ "trigger": ":setStringForKey\tCCUserDefault:setStringForKey(_str,_str)", "contents": "setStringForKey(_str,_str)"},
{ "trigger": "CCUserDefault_getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "CCUserDefault:getBoolForKey(_str)"},
{ "trigger": ":getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "getBoolForKey(_str)"},
{ "trigger": "CCUserDefault_flush\tCCUserDefault:flush()", "contents": "CCUserDefault:flush()"},
{ "trigger": ":flush\tCCUserDefault:flush()", "contents": "flush()"},
{ "trigger": "CCUserDefault_getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "CCUserDefault:getIntegerForKey(_str)"},
{ "trigger": ":getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "getIntegerForKey(_str)"},
{ "trigger": "CCUserDefault_setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "CCUserDefault:setFloatForKey(_str,_num)"},
{ "trigger": ":setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "setFloatForKey(_str,_num)"},
{ "trigger": "CCUserDefault_isXMLFileExist\tCCUserDefault:isXMLFileExist()", "contents": "CCUserDefault:isXMLFileExist()"},
{ "trigger": ":isXMLFileExist\tCCUserDefault:isXMLFileExist()", "contents": "isXMLFileExist()"},
{ "trigger": "CCUserDefault_setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "CCUserDefault:setIntegerForKey(_str,_num)"},
{ "trigger": ":setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "setIntegerForKey(_str,_num)"},
{ "trigger": "CCUserDefault_sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "CCUserDefault:sharedUserDefault()"},
{ "trigger": ":sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "sharedUserDefault()"},
{ "trigger": "CCUserDefault_setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "CCUserDefault:setBoolForKey(_str,_boo)"},
{ "trigger": ":setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "setBoolForKey(_str,_boo)"},
{ "trigger": "CCUserDefault_getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "CCUserDefault:getXMLFilePath()"},
{ "trigger": ":getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "getXMLFilePath()"},
{ "trigger": "CCLayer\t", "contents": "CCLayer"},
{ "trigger": "CCLayer_setAccelerometerInterval\tCCLayer:setAccelerometerInterval(_num)", "contents": "CCLayer:setAccelerometerInterval(_num)"},
{ "trigger": ":setAccelerometerInterval\tCCLayer:setAccelerometerInterval(_num)", "contents": "setAccelerometerInterval(_num)"},
{ "trigger": "CCLayer_setTouchMode\tCCLayer:setTouchMode(_num)", "contents": "CCLayer:setTouchMode(_num)"},
{ "trigger": ":setTouchMode\tCCLayer:setTouchMode(_num)", "contents": "setTouchMode(_num)"},
{ "trigger": "CCLayer_unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "CCLayer:unregisterScriptAccelerateHandler()"},
{ "trigger": ":unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "unregisterScriptAccelerateHandler()"},
{ "trigger": "CCLayer_getTouchMode\tCCLayer:getTouchMode()", "contents": "CCLayer:getTouchMode()"},
{ "trigger": ":getTouchMode\tCCLayer:getTouchMode()", "contents": "getTouchMode()"},
{ "trigger": "CCLayer_registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "CCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": ":registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": "CCLayer_setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "CCLayer:setTouchEnabled(_boo)"},
{ "trigger": ":setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "setTouchEnabled(_boo)"},
{ "trigger": "CCLayer_create\tCCLayer:create()", "contents": "CCLayer:create()"},
{ "trigger": ":create\tCCLayer:create()", "contents": "create()"},
{ "trigger": "CCLayer_unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "CCLayer:unregisterScriptTouchHandler()"},
{ "trigger": ":unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "unregisterScriptTouchHandler()"},
{ "trigger": "CCLayer_isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "CCLayer:isKeypadEnabled()"},
{ "trigger": ":isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "isKeypadEnabled()"},
{ "trigger": "CCLayer_getTouchPriority\tCCLayer:getTouchPriority()", "contents": "CCLayer:getTouchPriority()"},
{ "trigger": ":getTouchPriority\tCCLayer:getTouchPriority()", "contents": "getTouchPriority()"},
{ "trigger": "CCLayer_setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "CCLayer:setTouchPriority(_num)"},
{ "trigger": ":setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "setTouchPriority(_num)"},
{ "trigger": "CCLayer_setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "CCLayer:setAccelerometerEnabled(_boo)"},
{ "trigger": ":setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "setAccelerometerEnabled(_boo)"},
{ "trigger": "CCLayer_setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "CCLayer:setKeypadEnabled(_boo)"},
{ "trigger": ":setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "setKeypadEnabled(_boo)"},
{ "trigger": "CCLayer_registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "CCLayer:registerScriptAccelerateHandler(_listener)"},
{ "trigger": ":registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "registerScriptAccelerateHandler(_listener)"},
{ "trigger": "CCLayer_isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "CCLayer:isAccelerometerEnabled()"},
{ "trigger": ":isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "isAccelerometerEnabled()"},
{ "trigger": "CCLayer_isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "CCLayer:isTouchEnabled()"},
{ "trigger": ":isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "isTouchEnabled()"},
{ "trigger": "CCLayer_unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "CCLayer:unregisterScriptKeypadHandler()"},
{ "trigger": ":unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "unregisterScriptKeypadHandler()"},
{ "trigger": "CCLayer_registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "CCLayer:registerScriptKeypadHandler(_listener)"},
{ "trigger": ":registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "registerScriptKeypadHandler(_listener)"},
{ "trigger": "CCTransitionFadeDown\t", "contents": "CCTransitionFadeDown"},
{ "trigger": "CCTransitionFadeDown_create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "CCTransitionFadeDown:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLiquid\t", "contents": "CCLiquid"},
{ "trigger": "CCLiquid_create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "CCLiquid:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCShatteredTiles3D\t", "contents": "CCShatteredTiles3D"},
{ "trigger": "CCShatteredTiles3D_create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShatteredTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCReverseTime\t", "contents": "CCReverseTime"},
{ "trigger": "CCReverseTime_create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "CCReverseTime:create(_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "create(_CCFiniteTimeAction)"},
{ "trigger": "CCShapeNode\t", "contents": "CCShapeNode"},
{ "trigger": "CCShapeNode_setColor\tCCShapeNode:setColor(_ccColor4F)", "contents": "CCShapeNode:setColor(_ccColor4F)"},
{ "trigger": ":setColor\tCCShapeNode:setColor(_ccColor4F)", "contents": "setColor(_ccColor4F)"},
{ "trigger": "CCShapeNode_setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "CCShapeNode:setLineStippleEnabled(_boo)"},
{ "trigger": ":setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "setLineStippleEnabled(_boo)"},
{ "trigger": "CCShapeNode_isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "CCShapeNode:isLineStippleEnabled()"},
{ "trigger": ":isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "isLineStippleEnabled()"},
{ "trigger": "CCShapeNode_getLineWidth\tCCShapeNode:getLineWidth()", "contents": "CCShapeNode:getLineWidth()"},
{ "trigger": ":getLineWidth\tCCShapeNode:getLineWidth()", "contents": "getLineWidth()"},
{ "trigger": "CCShapeNode_getColor\tCCShapeNode:getColor()", "contents": "CCShapeNode:getColor()"},
{ "trigger": ":getColor\tCCShapeNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCShapeNode_getLineStipple\tCCShapeNode:getLineStipple()", "contents": "CCShapeNode:getLineStipple()"},
{ "trigger": ":getLineStipple\tCCShapeNode:getLineStipple()", "contents": "getLineStipple()"},
{ "trigger": "CCShapeNode_setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "CCShapeNode:setLineStipple(_num)"},
{ "trigger": ":setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "setLineStipple(_num)"},
{ "trigger": "CCShapeNode_setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "CCShapeNode:setLineWidth(_num)"},
{ "trigger": ":setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "setLineWidth(_num)"},
{ "trigger": "CCAction\t", "contents": "CCAction"},
{ "trigger": "CCAction_update\tCCAction:update(_num)", "contents": "CCAction:update(_num)"},
{ "trigger": ":update\tCCAction:update(_num)", "contents": "update(_num)"},
{ "trigger": "CCAction_isDone\tCCAction:isDone()", "contents": "CCAction:isDone()"},
{ "trigger": ":isDone\tCCAction:isDone()", "contents": "isDone()"},
{ "trigger": "CCAction_setTag\tCCAction:setTag(_num)", "contents": "CCAction:setTag(_num)"},
{ "trigger": ":setTag\tCCAction:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCAction_getTag\tCCAction:getTag()", "contents": "CCAction:getTag()"},
{ "trigger": ":getTag\tCCAction:getTag()", "contents": "getTag()"},
{ "trigger": "CCAction_step\tCCAction:step(_num)", "contents": "CCAction:step(_num)"},
{ "trigger": ":step\tCCAction:step(_num)", "contents": "step(_num)"},
{ "trigger": "CCLabelBMFont\t", "contents": "CCLabelBMFont"},
{ "trigger": "CCLabelBMFont_call\tCCLabelBMFont:call()", "contents": "CCLabelBMFont:call()"},
{ "trigger": ":call\tCCLabelBMFont:call()", "contents": "call()"},
{ "trigger": "CCLabelBMFont_setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "CCLabelBMFont:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLabelBMFont_setString\tCCLabelBMFont:setString(_str)", "contents": "CCLabelBMFont:setString(_str)"},
{ "trigger": ":setString\tCCLabelBMFont:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelBMFont_setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "CCLabelBMFont:setFntFile(_str)"},
{ "trigger": ":setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "setFntFile(_str)"},
{ "trigger": "CCLabelBMFont_isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "CCLabelBMFont:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLabelBMFont_setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "CCLabelBMFont:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLabelBMFont_setColor\tCCLabelBMFont:setColor(_ccColor3B)", "contents": "CCLabelBMFont:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLabelBMFont:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLabelBMFont_isCascadeColorEnabled\tCCLabelBMFont:isCascadeColorEnabled()", "contents": "CCLabelBMFont:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCLabelBMFont:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCLabelBMFont_getDisplayedOpacity\tCCLabelBMFont:getDisplayedOpacity()", "contents": "CCLabelBMFont:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCLabelBMFont:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCLabelBMFont_setCascadeColorEnabled\tCCLabelBMFont:setCascadeColorEnabled(_boo)", "contents": "CCLabelBMFont:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCLabelBMFont:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCLabelBMFont_isCascadeOpacityEnabled\tCCLabelBMFont:isCascadeOpacityEnabled()", "contents": "CCLabelBMFont:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCLabelBMFont:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCLabelBMFont_setCascadeOpacityEnabled\tCCLabelBMFont:setCascadeOpacityEnabled(_boo)", "contents": "CCLabelBMFont:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCLabelBMFont:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCLabelBMFont_delete\tCCLabelBMFont:delete()", "contents": "CCLabelBMFont:delete()"},
{ "trigger": ":delete\tCCLabelBMFont:delete()", "contents": "delete()"},
{ "trigger": "CCLabelBMFont_getOpacity\tCCLabelBMFont:getOpacity()", "contents": "CCLabelBMFont:getOpacity()"},
{ "trigger": ":getOpacity\tCCLabelBMFont:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLabelBMFont_setCString\tCCLabelBMFont:setCString(_str)", "contents": "CCLabelBMFont:setCString(_str)"},
{ "trigger": ":setCString\tCCLabelBMFont:setCString(_str)", "contents": "setCString(_str)"},
{ "trigger": "CCLabelBMFont_setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "CCLabelBMFont:setWidth(_num)"},
{ "trigger": ":setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "setWidth(_num)"},
{ "trigger": "CCLabelBMFont_initWithString\tCCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)", "contents": "CCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)"},
{ "trigger": ":initWithString\tCCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)", "contents": "initWithString(_str,_str,_num,_num,_CCPoint)"},
{ "trigger": "CCLabelBMFont_getFntFile\tCCLabelBMFont:getFntFile()", "contents": "CCLabelBMFont:getFntFile()"},
{ "trigger": ":getFntFile\tCCLabelBMFont:getFntFile()", "contents": "getFntFile()"},
{ "trigger": "CCLabelBMFont_getColor\tCCLabelBMFont:getColor()", "contents": "CCLabelBMFont:getColor()"},
{ "trigger": ":getColor\tCCLabelBMFont:getColor()", "contents": "getColor()"},
{ "trigger": "CCLabelBMFont_init\tCCLabelBMFont:init()", "contents": "CCLabelBMFont:init()"},
{ "trigger": ":init\tCCLabelBMFont:init()", "contents": "init()"},
{ "trigger": "CCLabelBMFont_getDisplayedColor\tCCLabelBMFont:getDisplayedColor()", "contents": "CCLabelBMFont:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCLabelBMFont:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCLabelBMFont_purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "CCLabelBMFont:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCLabelBMFont_create\tCCLabelBMFont:create()", "contents": "CCLabelBMFont:create()"},
{ "trigger": ":create\tCCLabelBMFont:create()", "contents": "create()"},
{ "trigger": "CCLabelBMFont_setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "CCLabelBMFont:setLineBreakWithoutSpace(_boo)"},
{ "trigger": ":setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "setLineBreakWithoutSpace(_boo)"},
{ "trigger": "CCLabelBMFont_new\tCCLabelBMFont:new()", "contents": "CCLabelBMFont:new()"},
{ "trigger": ":new\tCCLabelBMFont:new()", "contents": "new()"},
{ "trigger": "CCLabelBMFont_updateDisplayedOpacity\tCCLabelBMFont:updateDisplayedOpacity(_num)", "contents": "CCLabelBMFont:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCLabelBMFont:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCLabelBMFont_updateLabel\tCCLabelBMFont:updateLabel()", "contents": "CCLabelBMFont:updateLabel()"},
{ "trigger": ":updateLabel\tCCLabelBMFont:updateLabel()", "contents": "updateLabel()"},
{ "trigger": "CCLabelBMFont_new_local\tCCLabelBMFont:new_local()", "contents": "CCLabelBMFont:new_local()"},
{ "trigger": ":new_local\tCCLabelBMFont:new_local()", "contents": "new_local()"},
{ "trigger": "CCLabelBMFont_setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "CCLabelBMFont:setAlignment(_num)"},
{ "trigger": ":setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "setAlignment(_num)"},
{ "trigger": "CCLabelBMFont_getString\tCCLabelBMFont:getString()", "contents": "CCLabelBMFont:getString()"},
{ "trigger": ":getString\tCCLabelBMFont:getString()", "contents": "getString()"},
{ "trigger": "CCLabelBMFont_updateDisplayedColor\tCCLabelBMFont:updateDisplayedColor(_ccColor3B)", "contents": "CCLabelBMFont:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCLabelBMFont:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "CCBezierBy\t", "contents": "CCBezierBy"},
{ "trigger": "CCBezierBy_create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "CCBezierBy:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCTMXLayerInfo\t", "contents": "CCTMXLayerInfo"},
{ "trigger": "CCTMXLayerInfo_call\tCCTMXLayerInfo:call()", "contents": "CCTMXLayerInfo:call()"},
{ "trigger": ":call\tCCTMXLayerInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXLayerInfo_new\tCCTMXLayerInfo:new()", "contents": "CCTMXLayerInfo:new()"},
{ "trigger": ":new\tCCTMXLayerInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXLayerInfo_new_local\tCCTMXLayerInfo:new_local()", "contents": "CCTMXLayerInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXLayerInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXLayerInfo_delete\tCCTMXLayerInfo:delete()", "contents": "CCTMXLayerInfo:delete()"},
{ "trigger": ":delete\tCCTMXLayerInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXLayerInfo_getProperties\tCCTMXLayerInfo:getProperties()", "contents": "CCTMXLayerInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayerInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCClippingRegionNode\t", "contents": "CCClippingRegionNode"},
{ "trigger": "CCClippingRegionNode_getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "CCClippingRegionNode:getClippingRegion()"},
{ "trigger": ":getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "getClippingRegion()"},
{ "trigger": "CCClippingRegionNode_setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "CCClippingRegionNode:setClippingEnabled(_boo)"},
{ "trigger": ":setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "setClippingEnabled(_boo)"},
{ "trigger": "CCClippingRegionNode_setClippingRegion\tCCClippingRegionNode:setClippingRegion(_CCRect)", "contents": "CCClippingRegionNode:setClippingRegion(_CCRect)"},
{ "trigger": ":setClippingRegion\tCCClippingRegionNode:setClippingRegion(_CCRect)", "contents": "setClippingRegion(_CCRect)"},
{ "trigger": "CCClippingRegionNode_isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "CCClippingRegionNode:isClippingEnabled()"},
{ "trigger": ":isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "isClippingEnabled()"},
{ "trigger": "CCClippingRegionNode_create\tCCClippingRegionNode:create()", "contents": "CCClippingRegionNode:create()"},
{ "trigger": ":create\tCCClippingRegionNode:create()", "contents": "create()"},
{ "trigger": "CCWaves3D\t", "contents": "CCWaves3D"},
{ "trigger": "CCWaves3D_create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "CCWaves3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCMotionStreak\t", "contents": "CCMotionStreak"},
{ "trigger": "CCMotionStreak_setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "CCMotionStreak:setStartingPositionInitialized(_boo)"},
{ "trigger": ":setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "setStartingPositionInitialized(_boo)"},
{ "trigger": "CCMotionStreak_reset\tCCMotionStreak:reset()", "contents": "CCMotionStreak:reset()"},
{ "trigger": ":reset\tCCMotionStreak:reset()", "contents": "reset()"},
{ "trigger": "CCMotionStreak_isFastMode\tCCMotionStreak:isFastMode()", "contents": "CCMotionStreak:isFastMode()"},
{ "trigger": ":isFastMode\tCCMotionStreak:isFastMode()", "contents": "isFastMode()"},
{ "trigger": "CCMotionStreak_isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "CCMotionStreak:isStartingPositionInitialized()"},
{ "trigger": ":isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "isStartingPositionInitialized()"},
{ "trigger": "CCMotionStreak_create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "CCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": ":create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": "CCMotionStreak_tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "CCMotionStreak:tintWithColor(_ccColor3B)"},
{ "trigger": ":tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "tintWithColor(_ccColor3B)"},
{ "trigger": "CCMotionStreak_setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "CCMotionStreak:setFastMode(_boo)"},
{ "trigger": ":setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "setFastMode(_boo)"},
{ "trigger": "CCBezierTo\t", "contents": "CCBezierTo"},
{ "trigger": "CCBezierTo_create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "CCBezierTo:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCNative\t", "contents": "CCNative"},
{ "trigger": "CCNative_getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "CCNative:getInputText(_str,_str,_str)"},
{ "trigger": ":getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "getInputText(_str,_str,_str)"},
{ "trigger": "CCNative_createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "CCNative:createAlert(_str,_str,_str)"},
{ "trigger": ":createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "createAlert(_str,_str,_str)"},
{ "trigger": "CCNative_showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "CCNative:showActivityIndicator()"},
{ "trigger": ":showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "showActivityIndicator()"},
{ "trigger": "CCNative_getDeviceName\tCCNative:getDeviceName()", "contents": "CCNative:getDeviceName()"},
{ "trigger": ":getDeviceName\tCCNative:getDeviceName()", "contents": "getDeviceName()"},
{ "trigger": "CCNative_hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "CCNative:hideActivityIndicator()"},
{ "trigger": ":hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "hideActivityIndicator()"},
{ "trigger": "CCNative_vibrate\tCCNative:vibrate()", "contents": "CCNative:vibrate()"},
{ "trigger": ":vibrate\tCCNative:vibrate()", "contents": "vibrate()"},
{ "trigger": "CCNative_cancelAlert\tCCNative:cancelAlert()", "contents": "CCNative:cancelAlert()"},
{ "trigger": ":cancelAlert\tCCNative:cancelAlert()", "contents": "cancelAlert()"},
{ "trigger": "CCNative_showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "CCNative:showAlertLua(_listener)"},
{ "trigger": ":showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "showAlertLua(_listener)"},
{ "trigger": "CCNative_addAlertButton\tCCNative:addAlertButton(_str)", "contents": "CCNative:addAlertButton(_str)"},
{ "trigger": ":addAlertButton\tCCNative:addAlertButton(_str)", "contents": "addAlertButton(_str)"},
{ "trigger": "CCNative_openURL\tCCNative:openURL(_str)", "contents": "CCNative:openURL(_str)"},
{ "trigger": ":openURL\tCCNative:openURL(_str)", "contents": "openURL(_str)"},
{ "trigger": "CCNative_getOpenUDID\tCCNative:getOpenUDID()", "contents": "CCNative:getOpenUDID()"},
{ "trigger": ":getOpenUDID\tCCNative:getOpenUDID()", "contents": "getOpenUDID()"},
{ "trigger": "CCFadeIn\t", "contents": "CCFadeIn"},
{ "trigger": "CCFadeIn_create\tCCFadeIn:create(_num)", "contents": "CCFadeIn:create(_num)"},
{ "trigger": ":create\tCCFadeIn:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCFlipY3D\t", "contents": "CCFlipY3D"},
{ "trigger": "CCFlipY3D_create\tCCFlipY3D:create(_num)", "contents": "CCFlipY3D:create(_num)"},
{ "trigger": ":create\tCCFlipY3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCConfiguration\t", "contents": "CCConfiguration"},
{ "trigger": "CCConfiguration_sharedConfiguration\tCCConfiguration:sharedConfiguration()", "contents": "CCConfiguration:sharedConfiguration()"},
{ "trigger": ":sharedConfiguration\tCCConfiguration:sharedConfiguration()", "contents": "sharedConfiguration()"},
{ "trigger": "CCConfiguration_supportsShareableVAO\tCCConfiguration:supportsShareableVAO()", "contents": "CCConfiguration:supportsShareableVAO()"},
{ "trigger": ":supportsShareableVAO\tCCConfiguration:supportsShareableVAO()", "contents": "supportsShareableVAO()"},
{ "trigger": "CCConfiguration_getNumber\tCCConfiguration:getNumber(_str,_num)", "contents": "CCConfiguration:getNumber(_str,_num)"},
{ "trigger": ":getNumber\tCCConfiguration:getNumber(_str,_num)", "contents": "getNumber(_str,_num)"},
{ "trigger": "CCConfiguration_supportsDiscardFramebuffer\tCCConfiguration:supportsDiscardFramebuffer()", "contents": "CCConfiguration:supportsDiscardFramebuffer()"},
{ "trigger": ":supportsDiscardFramebuffer\tCCConfiguration:supportsDiscardFramebuffer()", "contents": "supportsDiscardFramebuffer()"},
{ "trigger": "CCConfiguration_getMaxTextureSize\tCCConfiguration:getMaxTextureSize()", "contents": "CCConfiguration:getMaxTextureSize()"},
{ "trigger": ":getMaxTextureSize\tCCConfiguration:getMaxTextureSize()", "contents": "getMaxTextureSize()"},
{ "trigger": "CCConfiguration_getBool\tCCConfiguration:getBool(_str,_boo)", "contents": "CCConfiguration:getBool(_str,_boo)"},
{ "trigger": ":getBool\tCCConfiguration:getBool(_str,_boo)", "contents": "getBool(_str,_boo)"},
{ "trigger": "CCConfiguration_gatherGPUInfo\tCCConfiguration:gatherGPUInfo()", "contents": "CCConfiguration:gatherGPUInfo()"},
{ "trigger": ":gatherGPUInfo\tCCConfiguration:gatherGPUInfo()", "contents": "gatherGPUInfo()"},
{ "trigger": "CCConfiguration_checkForGLExtension\tCCConfiguration:checkForGLExtension(_str)", "contents": "CCConfiguration:checkForGLExtension(_str)"},
{ "trigger": ":checkForGLExtension\tCCConfiguration:checkForGLExtension(_str)", "contents": "checkForGLExtension(_str)"},
{ "trigger": "CCConfiguration_getCString\tCCConfiguration:getCString(_str,_str)", "contents": "CCConfiguration:getCString(_str,_str)"},
{ "trigger": ":getCString\tCCConfiguration:getCString(_str,_str)", "contents": "getCString(_str,_str)"},
{ "trigger": "CCConfiguration_supportsBGRA8888\tCCConfiguration:supportsBGRA8888()", "contents": "CCConfiguration:supportsBGRA8888()"},
{ "trigger": ":supportsBGRA8888\tCCConfiguration:supportsBGRA8888()", "contents": "supportsBGRA8888()"},
{ "trigger": "CCConfiguration_dumpInfo\tCCConfiguration:dumpInfo()", "contents": "CCConfiguration:dumpInfo()"},
{ "trigger": ":dumpInfo\tCCConfiguration:dumpInfo()", "contents": "dumpInfo()"},
{ "trigger": "CCConfiguration_loadConfigFile\tCCConfiguration:loadConfigFile(_str)", "contents": "CCConfiguration:loadConfigFile(_str)"},
{ "trigger": ":loadConfigFile\tCCConfiguration:loadConfigFile(_str)", "contents": "loadConfigFile(_str)"},
{ "trigger": "CCConfiguration_setObject\tCCConfiguration:setObject(_str,_CCObject)", "contents": "CCConfiguration:setObject(_str,_CCObject)"},
{ "trigger": ":setObject\tCCConfiguration:setObject(_str,_CCObject)", "contents": "setObject(_str,_CCObject)"},
{ "trigger": "CCConfiguration_getMaxModelviewStackDepth\tCCConfiguration:getMaxModelviewStackDepth()", "contents": "CCConfiguration:getMaxModelviewStackDepth()"},
{ "trigger": ":getMaxModelviewStackDepth\tCCConfiguration:getMaxModelviewStackDepth()", "contents": "getMaxModelviewStackDepth()"},
{ "trigger": "CCConfiguration_supportsPVRTC\tCCConfiguration:supportsPVRTC()", "contents": "CCConfiguration:supportsPVRTC()"},
{ "trigger": ":supportsPVRTC\tCCConfiguration:supportsPVRTC()", "contents": "supportsPVRTC()"},
{ "trigger": "CCConfiguration_supportsNPOT\tCCConfiguration:supportsNPOT()", "contents": "CCConfiguration:supportsNPOT()"},
{ "trigger": ":supportsNPOT\tCCConfiguration:supportsNPOT()", "contents": "supportsNPOT()"},
{ "trigger": "CCConfiguration_getMaxTextureUnits\tCCConfiguration:getMaxTextureUnits()", "contents": "CCConfiguration:getMaxTextureUnits()"},
{ "trigger": ":getMaxTextureUnits\tCCConfiguration:getMaxTextureUnits()", "contents": "getMaxTextureUnits()"},
{ "trigger": "CCConfiguration_getObject\tCCConfiguration:getObject(_str)", "contents": "CCConfiguration:getObject(_str)"},
{ "trigger": ":getObject\tCCConfiguration:getObject(_str)", "contents": "getObject(_str)"},
{ "trigger": "CCTMXTiledMap\t", "contents": "CCTMXTiledMap"},
{ "trigger": "CCTMXTiledMap_propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "CCTMXTiledMap:propertiesForGID(_num)"},
{ "trigger": ":propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "propertiesForGID(_num)"},
{ "trigger": "CCTMXTiledMap_getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "CCTMXTiledMap:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXTiledMap_layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "CCTMXTiledMap:layerNamed(_str)"},
{ "trigger": ":layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "layerNamed(_str)"},
{ "trigger": "CCTMXTiledMap_getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "CCTMXTiledMap:getMapOrientation()"},
{ "trigger": ":getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "getMapOrientation()"},
{ "trigger": "CCTMXTiledMap_objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "CCTMXTiledMap:objectGroupNamed(_str)"},
{ "trigger": ":objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "objectGroupNamed(_str)"},
{ "trigger": "CCTMXTiledMap_getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "CCTMXTiledMap:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXTiledMap_createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "CCTMXTiledMap:createWithXML(_str,_str)"},
{ "trigger": ":createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "createWithXML(_str,_str)"},
{ "trigger": "CCTMXTiledMap_getProperties\tCCTMXTiledMap:getProperties()", "contents": "CCTMXTiledMap:getProperties()"},
{ "trigger": ":getProperties\tCCTMXTiledMap:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXTiledMap_propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "CCTMXTiledMap:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXTiledMap_create\tCCTMXTiledMap:create(_str)", "contents": "CCTMXTiledMap:create(_str)"},
{ "trigger": ":create\tCCTMXTiledMap:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCTMXTiledMap_getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "CCTMXTiledMap:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCEaseIn\t", "contents": "CCEaseIn"},
{ "trigger": "CCEaseIn_create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "CCEaseIn:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCAccelDeccelAmplitude\t", "contents": "CCAccelDeccelAmplitude"},
{ "trigger": "CCAccelDeccelAmplitude_create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCTextFieldTTF\t", "contents": "CCTextFieldTTF"},
{ "trigger": "CCTextFieldTTF_detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "CCTextFieldTTF:detachWithIME()"},
{ "trigger": ":detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "detachWithIME()"},
{ "trigger": "CCTextFieldTTF_setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "CCTextFieldTTF:setColorSpaceHolder(_ccColor3B)"},
{ "trigger": ":setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "setColorSpaceHolder(_ccColor3B)"},
{ "trigger": "CCTextFieldTTF_setSecureTextEntry\tCCTextFieldTTF:setSecureTextEntry(_boo)", "contents": "CCTextFieldTTF:setSecureTextEntry(_boo)"},
{ "trigger": ":setSecureTextEntry\tCCTextFieldTTF:setSecureTextEntry(_boo)", "contents": "setSecureTextEntry(_boo)"},
{ "trigger": "CCTextFieldTTF_setString\tCCTextFieldTTF:setString(_str)", "contents": "CCTextFieldTTF:setString(_str)"},
{ "trigger": ":setString\tCCTextFieldTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCTextFieldTTF_getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "CCTextFieldTTF:getColorSpaceHolder()"},
{ "trigger": ":getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "getColorSpaceHolder()"},
{ "trigger": "CCTextFieldTTF_isSecureTextEntry\tCCTextFieldTTF:isSecureTextEntry()", "contents": "CCTextFieldTTF:isSecureTextEntry()"},
{ "trigger": ":isSecureTextEntry\tCCTextFieldTTF:isSecureTextEntry()", "contents": "isSecureTextEntry()"},
{ "trigger": "CCTextFieldTTF_getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "CCTextFieldTTF:getCharCount()"},
{ "trigger": ":getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "getCharCount()"},
{ "trigger": "CCTextFieldTTF_setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "CCTextFieldTTF:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCTextFieldTTF_attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "CCTextFieldTTF:attachWithIME()"},
{ "trigger": ":attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "attachWithIME()"},
{ "trigger": "CCTextFieldTTF_textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "CCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": ":textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": "CCTextFieldTTF_getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "CCTextFieldTTF:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCTextFieldTTF_getString\tCCTextFieldTTF:getString()", "contents": "CCTextFieldTTF:getString()"},
{ "trigger": ":getString\tCCTextFieldTTF:getString()", "contents": "getString()"},
{ "trigger": "GL_ZERO\tGL_ZERO", "contents": "GL_ZERO"},
{ "trigger": "GL_ONE\tGL_ONE", "contents": "GL_ONE"},
{ "trigger": "GL_SRC_COLOR\tGL_SRC_COLOR", "contents": "GL_SRC_COLOR"},
{ "trigger": "GL_ONE_MINUS_SRC_COLOR\tGL_ONE_MINUS_SRC_COLOR", "contents": "GL_ONE_MINUS_SRC_COLOR"},
{ "trigger": "GL_SRC_ALPHA\tGL_SRC_ALPHA", "contents": "GL_SRC_ALPHA"},
{ "trigger": "GL_ONE_MINUS_SRC_ALPHA\tGL_ONE_MINUS_SRC_ALPHA", "contents": "GL_ONE_MINUS_SRC_ALPHA"},
{ "trigger": "GL_DST_ALPHA\tGL_DST_ALPHA", "contents": "GL_DST_ALPHA"},
{ "trigger": "GL_ONE_MINUS_DST_ALPHA\tGL_ONE_MINUS_DST_ALPHA", "contents": "GL_ONE_MINUS_DST_ALPHA"},
{ "trigger": "GL_DST_COLOR\tGL_DST_COLOR", "contents": "GL_DST_COLOR"},
{ "trigger": "GL_ONE_MINUS_DST_COLOR\tGL_ONE_MINUS_DST_COLOR", "contents": "GL_ONE_MINUS_DST_COLOR"},
{ "trigger": "kCCVerticalTextAlignmentTop\tkCCVerticalTextAlignmentTop", "contents": "kCCVerticalTextAlignmentTop"},
{ "trigger": "kCCVerticalTextAlignmentCenter\tkCCVerticalTextAlignmentCenter", "contents": "kCCVerticalTextAlignmentCenter"},
{ "trigger": "kCCVerticalTextAlignmentBottom\tkCCVerticalTextAlignmentBottom", "contents": "kCCVerticalTextAlignmentBottom"},
{ "trigger": "kCCTextAlignmentLeft\tkCCTextAlignmentLeft", "contents": "kCCTextAlignmentLeft"},
{ "trigger": "kCCTextAlignmentCenter\tkCCTextAlignmentCenter", "contents": "kCCTextAlignmentCenter"},
{ "trigger": "kCCTextAlignmentRight\tkCCTextAlignmentRight", "contents": "kCCTextAlignmentRight"},
{ "trigger": "kTargetWindows\tkTargetWindows", "contents": "kTargetWindows"},
{ "trigger": "kTargetLinux\tkTargetLinux", "contents": "kTargetLinux"},
{ "trigger": "kTargetMacOS\tkTargetMacOS", "contents": "kTargetMacOS"},
{ "trigger": "kTargetAndroid\tkTargetAndroid", "contents": "kTargetAndroid"},
{ "trigger": "kTargetIphone\tkTargetIphone", "contents": "kTargetIphone"},
{ "trigger": "kTargetIpad\tkTargetIpad", "contents": "kTargetIpad"},
{ "trigger": "kTargetBlackBerry\tkTargetBlackBerry", "contents": "kTargetBlackBerry"},
{ "trigger": "kTargetNaCl\tkTargetNaCl", "contents": "kTargetNaCl"},
{ "trigger": "kTargetEmscripten\tkTargetEmscripten", "contents": "kTargetEmscripten"},
{ "trigger": "kTargetTizen\tkTargetTizen", "contents": "kTargetTizen"},
{ "trigger": "kLanguageEnglish\tkLanguageEnglish", "contents": "kLanguageEnglish"},
{ "trigger": "kLanguageChinese\tkLanguageChinese", "contents": "kLanguageChinese"},
{ "trigger": "kLanguageFrench\tkLanguageFrench", "contents": "kLanguageFrench"},
{ "trigger": "kLanguageItalian\tkLanguageItalian", "contents": "kLanguageItalian"},
{ "trigger": "kLanguageGerman\tkLanguageGerman", "contents": "kLanguageGerman"},
{ "trigger": "kLanguageSpanish\tkLanguageSpanish", "contents": "kLanguageSpanish"},
{ "trigger": "kLanguageRussian\tkLanguageRussian", "contents": "kLanguageRussian"},
{ "trigger": "kLanguageKorean\tkLanguageKorean", "contents": "kLanguageKorean"},
{ "trigger": "kLanguageJapanese\tkLanguageJapanese", "contents": "kLanguageJapanese"},
{ "trigger": "kLanguageHungarian\tkLanguageHungarian", "contents": "kLanguageHungarian"},
{ "trigger": "kLanguagePortuguese\tkLanguagePortuguese", "contents": "kLanguagePortuguese"},
{ "trigger": "kLanguageArabic\tkLanguageArabic", "contents": "kLanguageArabic"},
{ "trigger": "kFmtJpg\tkFmtJpg", "contents": "kFmtJpg"},
{ "trigger": "kFmtPng\tkFmtPng", "contents": "kFmtPng"},
{ "trigger": "kFmtTiff\tkFmtTiff", "contents": "kFmtTiff"},
{ "trigger": "kFmtWebp\tkFmtWebp", "contents": "kFmtWebp"},
{ "trigger": "kFmtRawData\tkFmtRawData", "contents": "kFmtRawData"},
{ "trigger": "kFmtUnKnown\tkFmtUnKnown", "contents": "kFmtUnKnown"},
{ "trigger": "kResolutionExactFit\tkResolutionExactFit", "contents": "kResolutionExactFit"},
{ "trigger": "kResolutionNoBorder\tkResolutionNoBorder", "contents": "kResolutionNoBorder"},
{ "trigger": "kResolutionShowAll\tkResolutionShowAll", "contents": "kResolutionShowAll"},
{ "trigger": "kResolutionFixedHeight\tkResolutionFixedHeight", "contents": "kResolutionFixedHeight"},
{ "trigger": "kResolutionFixedWidth\tkResolutionFixedWidth", "contents": "kResolutionFixedWidth"},
{ "trigger": "kResolutionUnKnown\tkResolutionUnKnown", "contents": "kResolutionUnKnown"},
{ "trigger": "kTypeBackClicked\tkTypeBackClicked", "contents": "kTypeBackClicked"},
{ "trigger": "kTypeMenuClicked\tkTypeMenuClicked", "contents": "kTypeMenuClicked"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA8888\tkCCTexture2DPixelFormat_RGBA8888", "contents": "kCCTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB888\tkCCTexture2DPixelFormat_RGB888", "contents": "kCCTexture2DPixelFormat_RGB888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB565\tkCCTexture2DPixelFormat_RGB565", "contents": "kCCTexture2DPixelFormat_RGB565"},
{ "trigger": "kCCTexture2DPixelFormat_A8\tkCCTexture2DPixelFormat_A8", "contents": "kCCTexture2DPixelFormat_A8"},
{ "trigger": "kCCTexture2DPixelFormat_I8\tkCCTexture2DPixelFormat_I8", "contents": "kCCTexture2DPixelFormat_I8"},
{ "trigger": "kCCTexture2DPixelFormat_AI88\tkCCTexture2DPixelFormat_AI88", "contents": "kCCTexture2DPixelFormat_AI88"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA4444\tkCCTexture2DPixelFormat_RGBA4444", "contents": "kCCTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kCCTexture2DPixelFormat_RGB5A1\tkCCTexture2DPixelFormat_RGB5A1", "contents": "kCCTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC4\tkCCTexture2DPixelFormat_PVRTC4", "contents": "kCCTexture2DPixelFormat_PVRTC4"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC2\tkCCTexture2DPixelFormat_PVRTC2", "contents": "kCCTexture2DPixelFormat_PVRTC2"},
{ "trigger": "kCCTexture2DPixelFormat_Default\tkCCTexture2DPixelFormat_Default", "contents": "kCCTexture2DPixelFormat_Default"},
{ "trigger": "kTexture2DPixelFormat_RGBA8888\tkTexture2DPixelFormat_RGBA8888", "contents": "kTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kTexture2DPixelFormat_RGB888\tkTexture2DPixelFormat_RGB888", "contents": "kTexture2DPixelFormat_RGB888"},
{ "trigger": "kTexture2DPixelFormat_RGB565\tkTexture2DPixelFormat_RGB565", "contents": "kTexture2DPixelFormat_RGB565"},
{ "trigger": "kTexture2DPixelFormat_A8\tkTexture2DPixelFormat_A8", "contents": "kTexture2DPixelFormat_A8"},
{ "trigger": "kTexture2DPixelFormat_RGBA4444\tkTexture2DPixelFormat_RGBA4444", "contents": "kTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kTexture2DPixelFormat_RGB5A1\tkTexture2DPixelFormat_RGB5A1", "contents": "kTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kTexture2DPixelFormat_Default\tkTexture2DPixelFormat_Default", "contents": "kTexture2DPixelFormat_Default"},
{ "trigger": "kCCParticleDurationInfinity\tkCCParticleDurationInfinity", "contents": "kCCParticleDurationInfinity"},
{ "trigger": "kCCParticleStartSizeEqualToEndSize\tkCCParticleStartSizeEqualToEndSize", "contents": "kCCParticleStartSizeEqualToEndSize"},
{ "trigger": "kCCParticleStartRadiusEqualToEndRadius\tkCCParticleStartRadiusEqualToEndRadius", "contents": "kCCParticleStartRadiusEqualToEndRadius"},
{ "trigger": "kParticleStartSizeEqualToEndSize\tkParticleStartSizeEqualToEndSize", "contents": "kParticleStartSizeEqualToEndSize"},
{ "trigger": "kParticleDurationInfinity\tkParticleDurationInfinity", "contents": "kParticleDurationInfinity"},
{ "trigger": "kCCParticleModeGravity\tkCCParticleModeGravity", "contents": "kCCParticleModeGravity"},
{ "trigger": "kCCParticleModeRadius\tkCCParticleModeRadius", "contents": "kCCParticleModeRadius"},
{ "trigger": "kCCPositionTypeFree\tkCCPositionTypeFree", "contents": "kCCPositionTypeFree"},
{ "trigger": "kCCPositionTypeRelative\tkCCPositionTypeRelative", "contents": "kCCPositionTypeRelative"},
{ "trigger": "kCCPositionTypeGrouped\tkCCPositionTypeGrouped", "contents": "kCCPositionTypeGrouped"},
{ "trigger": "TMXLayerAttribNone\tTMXLayerAttribNone", "contents": "TMXLayerAttribNone"},
{ "trigger": "TMXLayerAttribBase64\tTMXLayerAttribBase64", "contents": "TMXLayerAttribBase64"},
{ "trigger": "TMXLayerAttribGzip\tTMXLayerAttribGzip", "contents": "TMXLayerAttribGzip"},
{ "trigger": "TMXLayerAttribZlib\tTMXLayerAttribZlib", "contents": "TMXLayerAttribZlib"},
{ "trigger": "TMXPropertyNone\tTMXPropertyNone", "contents": "TMXPropertyNone"},
{ "trigger": "TMXPropertyMap\tTMXPropertyMap", "contents": "TMXPropertyMap"},
{ "trigger": "TMXPropertyLayer\tTMXPropertyLayer", "contents": "TMXPropertyLayer"},
{ "trigger": "TMXPropertyObjectGroup\tTMXPropertyObjectGroup", "contents": "TMXPropertyObjectGroup"},
{ "trigger": "TMXPropertyObject\tTMXPropertyObject", "contents": "TMXPropertyObject"},
{ "trigger": "TMXPropertyTile\tTMXPropertyTile", "contents": "TMXPropertyTile"},
{ "trigger": "kCCTMXTileHorizontalFlag\tkCCTMXTileHorizontalFlag", "contents": "kCCTMXTileHorizontalFlag"},
{ "trigger": "kCCTMXTileVerticalFlag\tkCCTMXTileVerticalFlag", "contents": "kCCTMXTileVerticalFlag"},
{ "trigger": "kCCTMXTileDiagonalFlag\tkCCTMXTileDiagonalFlag", "contents": "kCCTMXTileDiagonalFlag"},
{ "trigger": "kCCFlipedAll\tkCCFlipedAll", "contents": "kCCFlipedAll"},
{ "trigger": "kCCFlippedMask\tkCCFlippedMask", "contents": "kCCFlippedMask"},
{ "trigger": "CCTMXOrientationOrtho\tCCTMXOrientationOrtho", "contents": "CCTMXOrientationOrtho"},
{ "trigger": "CCTMXOrientationHex\tCCTMXOrientationHex", "contents": "CCTMXOrientationHex"},
{ "trigger": "CCTMXOrientationIso\tCCTMXOrientationIso", "contents": "CCTMXOrientationIso"},
{ "trigger": "kCCProgressTimerTypeRadial\tkCCProgressTimerTypeRadial", "contents": "kCCProgressTimerTypeRadial"},
{ "trigger": "kCCProgressTimerTypeBar\tkCCProgressTimerTypeBar", "contents": "kCCProgressTimerTypeBar"},
{ "trigger": "kCCImageFormatJPEG\tkCCImageFormatJPEG", "contents": "kCCImageFormatJPEG"},
{ "trigger": "kCCImageFormatPNG\tkCCImageFormatPNG", "contents": "kCCImageFormatPNG"},
{ "trigger": "kCCTouchesAllAtOnce\tkCCTouchesAllAtOnce", "contents": "kCCTouchesAllAtOnce"},
{ "trigger": "kCCTouchesOneByOne\tkCCTouchesOneByOne", "contents": "kCCTouchesOneByOne"},
{ "trigger": "kCCTransitionOrientationLeftOver\tkCCTransitionOrientationLeftOver", "contents": "kCCTransitionOrientationLeftOver"},
{ "trigger": "kCCTransitionOrientationRightOver\tkCCTransitionOrientationRightOver", "contents": "kCCTransitionOrientationRightOver"},
{ "trigger": "kCCTransitionOrientationUpOver\tkCCTransitionOrientationUpOver", "contents": "kCCTransitionOrientationUpOver"},
{ "trigger": "kCCTransitionOrientationDownOver\tkCCTransitionOrientationDownOver", "contents": "kCCTransitionOrientationDownOver"},
{ "trigger": "kCCLabelAutomaticWidth\tkCCLabelAutomaticWidth", "contents": "kCCLabelAutomaticWidth"},
{ "trigger": "kCCMenuStateWaiting\tkCCMenuStateWaiting", "contents": "kCCMenuStateWaiting"},
{ "trigger": "kCCMenuStateTrackingTouch\tkCCMenuStateTrackingTouch", "contents": "kCCMenuStateTrackingTouch"},
{ "trigger": "kCCMenuHandlerPriority\tkCCMenuHandlerPriority", "contents": "kCCMenuHandlerPriority"},
{ "trigger": "kCCDirectorProjection2D\tkCCDirectorProjection2D", "contents": "kCCDirectorProjection2D"},
{ "trigger": "kCCDirectorProjection3D\tkCCDirectorProjection3D", "contents": "kCCDirectorProjection3D"},
{ "trigger": "kCCDirectorProjectionCustom\tkCCDirectorProjectionCustom", "contents": "kCCDirectorProjectionCustom"},
{ "trigger": "kCCDirectorProjectionDefault\tkCCDirectorProjectionDefault", "contents": "kCCDirectorProjectionDefault"},
{ "trigger": "CCControlEventTouchDown\tCCControlEventTouchDown", "contents": "CCControlEventTouchDown"},
{ "trigger": "CCControlEventTouchDragInside\tCCControlEventTouchDragInside", "contents": "CCControlEventTouchDragInside"},
{ "trigger": "CCControlEventTouchDragOutside\tCCControlEventTouchDragOutside", "contents": "CCControlEventTouchDragOutside"},
{ "trigger": "CCControlEventTouchDragEnter\tCCControlEventTouchDragEnter", "contents": "CCControlEventTouchDragEnter"},
{ "trigger": "CCControlEventTouchDragExit\tCCControlEventTouchDragExit", "contents": "CCControlEventTouchDragExit"},
{ "trigger": "CCControlEventTouchUpInside\tCCControlEventTouchUpInside", "contents": "CCControlEventTouchUpInside"},
{ "trigger": "CCControlEventTouchUpOutside\tCCControlEventTouchUpOutside", "contents": "CCControlEventTouchUpOutside"},
{ "trigger": "CCControlEventTouchCancel\tCCControlEventTouchCancel", "contents": "CCControlEventTouchCancel"},
{ "trigger": "CCControlEventValueChanged\tCCControlEventValueChanged", "contents": "CCControlEventValueChanged"},
{ "trigger": "CCControlStateNormal\tCCControlStateNormal", "contents": "CCControlStateNormal"},
{ "trigger": "CCControlStateHighlighted\tCCControlStateHighlighted", "contents": "CCControlStateHighlighted"},
{ "trigger": "CCControlStateDisabled\tCCControlStateDisabled", "contents": "CCControlStateDisabled"},
{ "trigger": "CCControlStateSelected\tCCControlStateSelected", "contents": "CCControlStateSelected"},
{ "trigger": "kKeyboardReturnTypeDefault\tkKeyboardReturnTypeDefault", "contents": "kKeyboardReturnTypeDefault"},
{ "trigger": "kKeyboardReturnTypeDone\tkKeyboardReturnTypeDone", "contents": "kKeyboardReturnTypeDone"},
{ "trigger": "kKeyboardReturnTypeSend\tkKeyboardReturnTypeSend", "contents": "kKeyboardReturnTypeSend"},
{ "trigger": "kKeyboardReturnTypeSearch\tkKeyboardReturnTypeSearch", "contents": "kKeyboardReturnTypeSearch"},
{ "trigger": "kKeyboardReturnTypeGo\tkKeyboardReturnTypeGo", "contents": "kKeyboardReturnTypeGo"},
{ "trigger": "kEditBoxInputModeAny\tkEditBoxInputModeAny", "contents": "kEditBoxInputModeAny"},
{ "trigger": "kEditBoxInputModeEmailAddr\tkEditBoxInputModeEmailAddr", "contents": "kEditBoxInputModeEmailAddr"},
{ "trigger": "kEditBoxInputModeNumeric\tkEditBoxInputModeNumeric", "contents": "kEditBoxInputModeNumeric"},
{ "trigger": "kEditBoxInputModePhoneNumber\tkEditBoxInputModePhoneNumber", "contents": "kEditBoxInputModePhoneNumber"},
{ "trigger": "kEditBoxInputModeUrl\tkEditBoxInputModeUrl", "contents": "kEditBoxInputModeUrl"},
{ "trigger": "kEditBoxInputModeDecimal\tkEditBoxInputModeDecimal", "contents": "kEditBoxInputModeDecimal"},
{ "trigger": "kEditBoxInputModeSingleLine\tkEditBoxInputModeSingleLine", "contents": "kEditBoxInputModeSingleLine"},
{ "trigger": "kEditBoxInputFlagPassword\tkEditBoxInputFlagPassword", "contents": "kEditBoxInputFlagPassword"},
{ "trigger": "kEditBoxInputFlagSensitive\tkEditBoxInputFlagSensitive", "contents": "kEditBoxInputFlagSensitive"},
{ "trigger": "kEditBoxInputFlagInitialCapsWord\tkEditBoxInputFlagInitialCapsWord", "contents": "kEditBoxInputFlagInitialCapsWord"},
{ "trigger": "kEditBoxInputFlagInitialCapsSentence\tkEditBoxInputFlagInitialCapsSentence", "contents": "kEditBoxInputFlagInitialCapsSentence"},
{ "trigger": "kEditBoxInputFlagInitialCapsAllCharacters\tkEditBoxInputFlagInitialCapsAllCharacters", "contents": "kEditBoxInputFlagInitialCapsAllCharacters"},
{ "trigger": "CCStoreReceiptVerifyModeNone\tCCStoreReceiptVerifyModeNone", "contents": "CCStoreReceiptVerifyModeNone"},
{ "trigger": "CCStoreReceiptVerifyModeDevice\tCCStoreReceiptVerifyModeDevice", "contents": "CCStoreReceiptVerifyModeDevice"},
{ "trigger": "CCStoreReceiptVerifyModeServer\tCCStoreReceiptVerifyModeServer", "contents": "CCStoreReceiptVerifyModeServer"},
{ "trigger": "CCStoreReceiptVerifyStatusUnknownError\tCCStoreReceiptVerifyStatusUnknownError", "contents": "CCStoreReceiptVerifyStatusUnknownError"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidReceipt\tCCStoreReceiptVerifyStatusInvalidReceipt", "contents": "CCStoreReceiptVerifyStatusInvalidReceipt"},
{ "trigger": "CCStoreReceiptVerifyStatusRequestFailed\tCCStoreReceiptVerifyStatusRequestFailed", "contents": "CCStoreReceiptVerifyStatusRequestFailed"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidResult\tCCStoreReceiptVerifyStatusInvalidResult", "contents": "CCStoreReceiptVerifyStatusInvalidResult"},
{ "trigger": "CCStoreReceiptVerifyStatusNone\tCCStoreReceiptVerifyStatusNone", "contents": "CCStoreReceiptVerifyStatusNone"},
{ "trigger": "CCStoreReceiptVerifyStatusOK\tCCStoreReceiptVerifyStatusOK", "contents": "CCStoreReceiptVerifyStatusOK"},
{ "trigger": "kCCHTTPRequestMethodGET\tkCCHTTPRequestMethodGET", "contents": "kCCHTTPRequestMethodGET"},
{ "trigger": "kCCHTTPRequestMethodPOST\tkCCHTTPRequestMethodPOST", "contents": "kCCHTTPRequestMethodPOST"},
{ "trigger": "kCCHTTPRequestAcceptEncodingIdentity\tkCCHTTPRequestAcceptEncodingIdentity", "contents": "kCCHTTPRequestAcceptEncodingIdentity"},
{ "trigger": "kCCHTTPRequestAcceptEncodingGzip\tkCCHTTPRequestAcceptEncodingGzip", "contents": "kCCHTTPRequestAcceptEncodingGzip"},
{ "trigger": "kCCHTTPRequestAcceptEncodingDeflate\tkCCHTTPRequestAcceptEncodingDeflate", "contents": "kCCHTTPRequestAcceptEncodingDeflate"},
{ "trigger": "kCCHTTPRequestStateIdle\tkCCHTTPRequestStateIdle", "contents": "kCCHTTPRequestStateIdle"},
{ "trigger": "kCCHTTPRequestStateInProgress\tkCCHTTPRequestStateInProgress", "contents": "kCCHTTPRequestStateInProgress"},
{ "trigger": "kCCHTTPRequestStateCompleted\tkCCHTTPRequestStateCompleted", "contents": "kCCHTTPRequestStateCompleted"},
{ "trigger": "kCCHTTPRequestStateCancelled\tkCCHTTPRequestStateCancelled", "contents": "kCCHTTPRequestStateCancelled"},
{ "trigger": "kCCHTTPRequestStateCleared\tkCCHTTPRequestStateCleared", "contents": "kCCHTTPRequestStateCleared"},
{ "trigger": "kCCNetworkStatusNotReachable\tkCCNetworkStatusNotReachable", "contents": "kCCNetworkStatusNotReachable"},
{ "trigger": "kCCNetworkStatusReachableViaWiFi\tkCCNetworkStatusReachableViaWiFi", "contents": "kCCNetworkStatusReachableViaWiFi"},
{ "trigger": "kCCNetworkStatusReachableViaWWAN\tkCCNetworkStatusReachableViaWWAN", "contents": "kCCNetworkStatusReachableViaWWAN"},
{ "trigger": "SINGLE_FRAME\tSINGLE_FRAME", "contents": "SINGLE_FRAME"},
{ "trigger": "ANIMATION_NO_LOOP\tANIMATION_NO_LOOP", "contents": "ANIMATION_NO_LOOP"},
{ "trigger": "ANIMATION_TO_LOOP_FRONT\tANIMATION_TO_LOOP_FRONT", "contents": "ANIMATION_TO_LOOP_FRONT"},
{ "trigger": "ANIMATION_TO_LOOP_BACK\tANIMATION_TO_LOOP_BACK", "contents": "ANIMATION_TO_LOOP_BACK"},
{ "trigger": "ANIMATION_LOOP_FRONT\tANIMATION_LOOP_FRONT", "contents": "ANIMATION_LOOP_FRONT"},
{ "trigger": "ANIMATION_LOOP_BACK\tANIMATION_LOOP_BACK", "contents": "ANIMATION_LOOP_BACK"},
{ "trigger": "ANIMATION_MAX\tANIMATION_MAX", "contents": "ANIMATION_MAX"},
{ "trigger": "TWEEN_EASING_MIN\tTWEEN_EASING_MIN", "contents": "TWEEN_EASING_MIN"},
{ "trigger": "Linear\tLinear", "contents": "Linear"},
{ "trigger": "Sine_EaseIn\tSine_EaseIn", "contents": "Sine_EaseIn"},
{ "trigger": "Sine_EaseInOut\tSine_EaseInOut", "contents": "Sine_EaseInOut"},
{ "trigger": "Sine_EaseOut\tSine_EaseOut", "contents": "Sine_EaseOut"},
{ "trigger": "Quad_EaseIn\tQuad_EaseIn", "contents": "Quad_EaseIn"},
{ "trigger": "Quad_EaseOut\tQuad_EaseOut", "contents": "Quad_EaseOut"},
{ "trigger": "Quad_EaseInOut\tQuad_EaseInOut", "contents": "Quad_EaseInOut"},
{ "trigger": "Cubic_EaseIn\tCubic_EaseIn", "contents": "Cubic_EaseIn"},
{ "trigger": "Cubic_EaseOut\tCubic_EaseOut", "contents": "Cubic_EaseOut"},
{ "trigger": "Cubic_EaseInOut\tCubic_EaseInOut", "contents": "Cubic_EaseInOut"},
{ "trigger": "Quart_EaseIn\tQuart_EaseIn", "contents": "Quart_EaseIn"},
{ "trigger": "Quart_EaseOut\tQuart_EaseOut", "contents": "Quart_EaseOut"},
{ "trigger": "Quart_EaseInOut\tQuart_EaseInOut", "contents": "Quart_EaseInOut"},
{ "trigger": "Quint_EaseIn\tQuint_EaseIn", "contents": "Quint_EaseIn"},
{ "trigger": "Quint_EaseOut\tQuint_EaseOut", "contents": "Quint_EaseOut"},
{ "trigger": "Quint_EaseInOut\tQuint_EaseInOut", "contents": "Quint_EaseInOut"},
{ "trigger": "Expo_EaseIn\tExpo_EaseIn", "contents": "Expo_EaseIn"},
{ "trigger": "Expo_EaseOut\tExpo_EaseOut", "contents": "Expo_EaseOut"},
{ "trigger": "Expo_EaseInOut\tExpo_EaseInOut", "contents": "Expo_EaseInOut"},
{ "trigger": "Circ_EaseIn\tCirc_EaseIn", "contents": "Circ_EaseIn"},
{ "trigger": "Circ_EaseOut\tCirc_EaseOut", "contents": "Circ_EaseOut"},
{ "trigger": "Circ_EaseInOut\tCirc_EaseInOut", "contents": "Circ_EaseInOut"},
{ "trigger": "Elastic_EaseIn\tElastic_EaseIn", "contents": "Elastic_EaseIn"},
{ "trigger": "Elastic_EaseOut\tElastic_EaseOut", "contents": "Elastic_EaseOut"},
{ "trigger": "Elastic_EaseInOut\tElastic_EaseInOut", "contents": "Elastic_EaseInOut"},
{ "trigger": "Back_EaseIn\tBack_EaseIn", "contents": "Back_EaseIn"},
{ "trigger": "Back_EaseOut\tBack_EaseOut", "contents": "Back_EaseOut"},
{ "trigger": "Back_EaseInOut\tBack_EaseInOut", "contents": "Back_EaseInOut"},
{ "trigger": "Bounce_EaseIn\tBounce_EaseIn", "contents": "Bounce_EaseIn"},
{ "trigger": "Bounce_EaseOut\tBounce_EaseOut", "contents": "Bounce_EaseOut"},
{ "trigger": "Bounce_EaseInOut\tBounce_EaseInOut", "contents": "Bounce_EaseInOut"},
{ "trigger": "TWEEN_EASING_MAX\tTWEEN_EASING_MAX", "contents": "TWEEN_EASING_MAX"},
{ "trigger": "CCRect\t", "contents": "CCRect"},
{ "trigger": "CCRect_setRect\tCCRect:setRect(_num,_num,_num,_num)", "contents": "CCRect:setRect(_num,_num,_num,_num)"},
{ "trigger": ":setRect\tCCRect:setRect(_num,_num,_num,_num)", "contents": "setRect(_num,_num,_num,_num)"},
{ "trigger": "CCRect_call\tCCRect:call()", "contents": "CCRect:call()"},
{ "trigger": ":call\tCCRect:call()", "contents": "call()"},
{ "trigger": "CCRect_getMaxY\tCCRect:getMaxY()", "contents": "CCRect:getMaxY()"},
{ "trigger": ":getMaxY\tCCRect:getMaxY()", "contents": "getMaxY()"},
{ "trigger": "CCRect_getMaxX\tCCRect:getMaxX()", "contents": "CCRect:getMaxX()"},
{ "trigger": ":getMaxX\tCCRect:getMaxX()", "contents": "getMaxX()"},
{ "trigger": "CCRect_equals\tCCRect:equals(_CCRect)", "contents": "CCRect:equals(_CCRect)"},
{ "trigger": ":equals\tCCRect:equals(_CCRect)", "contents": "equals(_CCRect)"},
{ "trigger": "CCRect_getMinX\tCCRect:getMinX()", "contents": "CCRect:getMinX()"},
{ "trigger": ":getMinX\tCCRect:getMinX()", "contents": "getMinX()"},
{ "trigger": "CCRect_getMinY\tCCRect:getMinY()", "contents": "CCRect:getMinY()"},
{ "trigger": ":getMinY\tCCRect:getMinY()", "contents": "getMinY()"},
{ "trigger": "CCRect_intersectsRect\tCCRect:intersectsRect(_CCRect)", "contents": "CCRect:intersectsRect(_CCRect)"},
{ "trigger": ":intersectsRect\tCCRect:intersectsRect(_CCRect)", "contents": "intersectsRect(_CCRect)"},
{ "trigger": "CCRect_getMidY\tCCRect:getMidY()", "contents": "CCRect:getMidY()"},
{ "trigger": ":getMidY\tCCRect:getMidY()", "contents": "getMidY()"},
{ "trigger": "CCRect_getMidX\tCCRect:getMidX()", "contents": "CCRect:getMidX()"},
{ "trigger": ":getMidX\tCCRect:getMidX()", "contents": "getMidX()"},
{ "trigger": "CCRect_new\tCCRect:new()", "contents": "CCRect:new()"},
{ "trigger": ":new\tCCRect:new()", "contents": "new()"},
{ "trigger": "CCRect_new_local\tCCRect:new_local()", "contents": "CCRect:new_local()"},
{ "trigger": ":new_local\tCCRect:new_local()", "contents": "new_local()"},
{ "trigger": "CCRect_containsPoint\tCCRect:containsPoint(_CCPoint)", "contents": "CCRect:containsPoint(_CCPoint)"},
{ "trigger": ":containsPoint\tCCRect:containsPoint(_CCPoint)", "contents": "containsPoint(_CCPoint)"},
{ "trigger": "\t", "contents": ""},
{ "trigger": "ccpUnrotate\tccpUnrotate(_CCPoint,_CCPoint)", "contents": "ccpUnrotate(_CCPoint,_CCPoint)"},
{ "trigger": "ccpNeg\tccpNeg(_CCPoint)", "contents": "ccpNeg(_CCPoint)"},
{ "trigger": "CCPointFromString\tCCPointFromString(_str)", "contents": "CCPointFromString(_str)"},
{ "trigger": "ccp\tccp(_num,_num)", "contents": "ccp(_num,_num)"},
{ "trigger": "ccpIntersectPoint\tccpIntersectPoint(_CCPoint,_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpIntersectPoint(_CCPoint,_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "ccpCompMult\tccpCompMult(_CCPoint,_CCPoint)", "contents": "ccpCompMult(_CCPoint,_CCPoint)"},
{ "trigger": "ccpDistance\tccpDistance(_CCPoint,_CCPoint)", "contents": "ccpDistance(_CCPoint,_CCPoint)"},
{ "trigger": "CCSizeMake\tCCSizeMake(_num,_num)", "contents": "CCSizeMake(_num,_num)"},
{ "trigger": "ccPointSize\tccPointSize(_num)", "contents": "ccPointSize(_num)"},
{ "trigger": "CCLuaLog\tCCLuaLog(_str)", "contents": "CCLuaLog(_str)"},
{ "trigger": "kmGLTranslatef\tkmGLTranslatef(_num,_num,_num)", "contents": "kmGLTranslatef(_num,_num,_num)"},
{ "trigger": "ccc4f\tccc4f(_num,_num,_num,_num)", "contents": "ccc4f(_num,_num,_num,_num)"},
{ "trigger": "CCSizeFromString\tCCSizeFromString(_str)", "contents": "CCSizeFromString(_str)"},
{ "trigger": "ccpMult\tccpMult(_CCPoint,_num)", "contents": "ccpMult(_CCPoint,_num)"},
{ "trigger": "ccDrawQuadBezier\tccDrawQuadBezier(_CCPoint,_CCPoint,_CCPoint,_num)", "contents": "ccDrawQuadBezier(_CCPoint,_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccc3BEqual\tccc3BEqual(_ccColor3B,_ccColor3B)", "contents": "ccc3BEqual(_ccColor3B,_ccColor3B)"},
{ "trigger": "ccpDistanceSQ\tccpDistanceSQ(_CCPoint,_CCPoint)", "contents": "ccpDistanceSQ(_CCPoint,_CCPoint)"},
{ "trigger": "kmGLMatrixMode\tkmGLMatrixMode(_num)", "contents": "kmGLMatrixMode(_num)"},
{ "trigger": "ccDrawPoint\tccDrawPoint(_CCPoint)", "contents": "ccDrawPoint(_CCPoint)"},
{ "trigger": "ccpLineIntersect\tccpLineIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num,_num)", "contents": "ccpLineIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num,_num)"},
{ "trigger": "ccDrawColor4B\tccDrawColor4B(_num,_num,_num,_num)", "contents": "ccDrawColor4B(_num,_num,_num,_num)"},
{ "trigger": "CCPointMake\tCCPointMake(_num,_num)", "contents": "CCPointMake(_num,_num)"},
{ "trigger": "kmGLRotatef\tkmGLRotatef(_num,_num,_num,_num)", "contents": "kmGLRotatef(_num,_num,_num,_num)"},
{ "trigger": "ccpRPerp\tccpRPerp(_CCPoint)", "contents": "ccpRPerp(_CCPoint)"},
{ "trigger": "ccpNormalize\tccpNormalize(_CCPoint)", "contents": "ccpNormalize(_CCPoint)"},
{ "trigger": "kmGLPopMatrix\tkmGLPopMatrix()", "contents": "kmGLPopMatrix()"},
{ "trigger": "ccpSub\tccpSub(_CCPoint,_CCPoint)", "contents": "ccpSub(_CCPoint,_CCPoint)"},
{ "trigger": "ccc4FFromccc3B\tccc4FFromccc3B(_ccColor3B)", "contents": "ccc4FFromccc3B(_ccColor3B)"},
{ "trigger": "ccpForAngle\tccpForAngle(_num)", "contents": "ccpForAngle(_num)"},
{ "trigger": "ccpRotateByAngle\tccpRotateByAngle(_CCPoint,_CCPoint,_num)", "contents": "ccpRotateByAngle(_CCPoint,_CCPoint,_num)"},
{ "trigger": "kmGLLoadIdentity\tkmGLLoadIdentity()", "contents": "kmGLLoadIdentity()"},
{ "trigger": "ccpLengthSQ\tccpLengthSQ(_CCPoint)", "contents": "ccpLengthSQ(_CCPoint)"},
{ "trigger": "ccDrawCubicBezier\tccDrawCubicBezier(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num)", "contents": "ccDrawCubicBezier(_CCPoint,_CCPoint,_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpLength\tccpLength(_CCPoint)", "contents": "ccpLength(_CCPoint)"},
{ "trigger": "ccc4FEqual\tccc4FEqual(_ccColor4F,_ccColor4F)", "contents": "ccc4FEqual(_ccColor4F,_ccColor4F)"},
{ "trigger": "ccpLerp\tccpLerp(_CCPoint,_CCPoint,_num)", "contents": "ccpLerp(_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpAngle\tccpAngle(_CCPoint,_CCPoint)", "contents": "ccpAngle(_CCPoint,_CCPoint)"},
{ "trigger": "ccpAngleSigned\tccpAngleSigned(_CCPoint,_CCPoint)", "contents": "ccpAngleSigned(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawColor4F\tccDrawColor4F(_num,_num,_num,_num)", "contents": "ccDrawColor4F(_num,_num,_num,_num)"},
{ "trigger": "ccpCross\tccpCross(_CCPoint,_CCPoint)", "contents": "ccpCross(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawSolidRect\tccDrawSolidRect(_CCPoint,_CCPoint,_ccColor4F)", "contents": "ccDrawSolidRect(_CCPoint,_CCPoint,_ccColor4F)"},
{ "trigger": "kmGLScalef\tkmGLScalef(_num,_num,_num)", "contents": "kmGLScalef(_num,_num,_num)"},
{ "trigger": "ccpFuzzyEqual\tccpFuzzyEqual(_CCPoint,_CCPoint,_num)", "contents": "ccpFuzzyEqual(_CCPoint,_CCPoint,_num)"},
{ "trigger": "ccpToAngle\tccpToAngle(_CCPoint)", "contents": "ccpToAngle(_CCPoint)"},
{ "trigger": "const char* nam\tconst char* nam()", "contents": "const char* nam()"},
{ "trigger": "ccpPerp\tccpPerp(_CCPoint)", "contents": "ccpPerp(_CCPoint)"},
{ "trigger": "CCRectMake\tCCRectMake(_num,_num,_num,_num)", "contents": "CCRectMake(_num,_num,_num,_num)"},
{ "trigger": "ccDrawLine\tccDrawLine(_CCPoint,_CCPoint)", "contents": "ccDrawLine(_CCPoint,_CCPoint)"},
{ "trigger": "ccpFromSize\tccpFromSize(_CCSize)", "contents": "ccpFromSize(_CCSize)"},
{ "trigger": "ccDrawFree\tccDrawFree()", "contents": "ccDrawFree()"},
{ "trigger": "ccc4BFromccc4F\tccc4BFromccc4F(_ccColor4F)", "contents": "ccc4BFromccc4F(_ccColor4F)"},
{ "trigger": "ccc4\tccc4(_num,_num,_num,_num)", "contents": "ccc4(_num,_num,_num,_num)"},
{ "trigger": "CCMessageBox\tCCMessageBox(_str,_str)", "contents": "CCMessageBox(_str,_str)"},
{ "trigger": "ccc3\tccc3(_num,_num,_num)", "contents": "ccc3(_num,_num,_num)"},
{ "trigger": "ccpSegmentIntersect\tccpSegmentIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpSegmentIntersect(_CCPoint,_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "ccpAdd\tccpAdd(_CCPoint,_CCPoint)", "contents": "ccpAdd(_CCPoint,_CCPoint)"},
{ "trigger": "kmGLFreeAll\tkmGLFreeAll()", "contents": "kmGLFreeAll()"},
{ "trigger": "ccpMidpoint\tccpMidpoint(_CCPoint,_CCPoint)", "contents": "ccpMidpoint(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawInit\tccDrawInit()", "contents": "ccDrawInit()"},
{ "trigger": "ccpProject\tccpProject(_CCPoint,_CCPoint)", "contents": "ccpProject(_CCPoint,_CCPoint)"},
{ "trigger": "CCRectFromString\tCCRectFromString(_str)", "contents": "CCRectFromString(_str)"},
{ "trigger": "ccDrawCatmullRom\tccDrawCatmullRom(_CCPointArray,_num)", "contents": "ccDrawCatmullRom(_CCPointArray,_num)"},
{ "trigger": "kmGLPushMatrix\tkmGLPushMatrix()", "contents": "kmGLPushMatrix()"},
{ "trigger": "ccDrawCardinalSpline\tccDrawCardinalSpline(_CCPointArray,_num,_num)", "contents": "ccDrawCardinalSpline(_CCPointArray,_num,_num)"},
{ "trigger": "ccpDot\tccpDot(_CCPoint,_CCPoint)", "contents": "ccpDot(_CCPoint,_CCPoint)"},
{ "trigger": "ccpRotate\tccpRotate(_CCPoint,_CCPoint)", "contents": "ccpRotate(_CCPoint,_CCPoint)"},
{ "trigger": "ccDrawCircle\tccDrawCircle(_CCPoint,_num,_num,_num,_boo)", "contents": "ccDrawCircle(_CCPoint,_num,_num,_num,_boo)"},
{ "trigger": "ccc4FFromccc4B\tccc4FFromccc4B(_ccColor4B)", "contents": "ccc4FFromccc4B(_ccColor4B)"},
{ "trigger": "clampf\tclampf(_num,_num,_num)", "contents": "clampf(_num,_num,_num)"},
{ "trigger": "ccDrawRect\tccDrawRect(_CCPoint,_CCPoint)", "contents": "ccDrawRect(_CCPoint,_CCPoint)"},
{ "trigger": "ccpClamp\tccpClamp(_CCPoint,_CCPoint,_CCPoint)", "contents": "ccpClamp(_CCPoint,_CCPoint,_CCPoint)"},
{ "trigger": "CCTintTo\t", "contents": "CCTintTo"},
{ "trigger": "CCTintTo_create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "CCTintTo:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintTo:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "SimpleAudioEngine\t", "contents": "SimpleAudioEngine"},
{ "trigger": "SimpleAudioEngine_pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "SimpleAudioEngine:pauseBackgroundMusic()"},
{ "trigger": ":pauseBackgroundMusic\tSimpleAudioEngine:pauseBackgroundMusic()", "contents": "pauseBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "SimpleAudioEngine:willPlayBackgroundMusic()"},
{ "trigger": ":willPlayBackgroundMusic\tSimpleAudioEngine:willPlayBackgroundMusic()", "contents": "willPlayBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "SimpleAudioEngine:setBackgroundMusicVolume(_num)"},
{ "trigger": ":setBackgroundMusicVolume\tSimpleAudioEngine:setBackgroundMusicVolume(_num)", "contents": "setBackgroundMusicVolume(_num)"},
{ "trigger": "SimpleAudioEngine_getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "SimpleAudioEngine:getEffectsVolume()"},
{ "trigger": ":getEffectsVolume\tSimpleAudioEngine:getEffectsVolume()", "contents": "getEffectsVolume()"},
{ "trigger": "SimpleAudioEngine_pauseEffect\tSimpleAudioEngine:pauseEffect(_num)", "contents": "SimpleAudioEngine:pauseEffect(_num)"},
{ "trigger": ":pauseEffect\tSimpleAudioEngine:pauseEffect(_num)", "contents": "pauseEffect(_num)"},
{ "trigger": "SimpleAudioEngine_preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "SimpleAudioEngine:preloadEffect(_str)"},
{ "trigger": ":preloadEffect\tSimpleAudioEngine:preloadEffect(_str)", "contents": "preloadEffect(_str)"},
{ "trigger": "SimpleAudioEngine_stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "SimpleAudioEngine:stopEffect(_num)"},
{ "trigger": ":stopEffect\tSimpleAudioEngine:stopEffect(_num)", "contents": "stopEffect(_num)"},
{ "trigger": "SimpleAudioEngine_stopAllEffects\tSimpleAudioEngine:stopAllEffects()", "contents": "SimpleAudioEngine:stopAllEffects()"},
{ "trigger": ":stopAllEffects\tSimpleAudioEngine:stopAllEffects()", "contents": "stopAllEffects()"},
{ "trigger": "SimpleAudioEngine_stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "SimpleAudioEngine:stopBackgroundMusic(_boo)"},
{ "trigger": ":stopBackgroundMusic\tSimpleAudioEngine:stopBackgroundMusic(_boo)", "contents": "stopBackgroundMusic(_boo)"},
{ "trigger": "SimpleAudioEngine_getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "SimpleAudioEngine:getBackgroundMusicVolume()"},
{ "trigger": ":getBackgroundMusicVolume\tSimpleAudioEngine:getBackgroundMusicVolume()", "contents": "getBackgroundMusicVolume()"},
{ "trigger": "SimpleAudioEngine_setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "SimpleAudioEngine:setEffectsVolume(_num)"},
{ "trigger": ":setEffectsVolume\tSimpleAudioEngine:setEffectsVolume(_num)", "contents": "setEffectsVolume(_num)"},
{ "trigger": "SimpleAudioEngine_preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "SimpleAudioEngine:preloadBackgroundMusic(_str)"},
{ "trigger": ":preloadBackgroundMusic\tSimpleAudioEngine:preloadBackgroundMusic(_str)", "contents": "preloadBackgroundMusic(_str)"},
{ "trigger": "SimpleAudioEngine_resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "SimpleAudioEngine:resumeBackgroundMusic()"},
{ "trigger": ":resumeBackgroundMusic\tSimpleAudioEngine:resumeBackgroundMusic()", "contents": "resumeBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "SimpleAudioEngine:rewindBackgroundMusic()"},
{ "trigger": ":rewindBackgroundMusic\tSimpleAudioEngine:rewindBackgroundMusic()", "contents": "rewindBackgroundMusic()"},
{ "trigger": "SimpleAudioEngine_sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "SimpleAudioEngine:sharedEngine()"},
{ "trigger": ":sharedEngine\tSimpleAudioEngine:sharedEngine()", "contents": "sharedEngine()"},
{ "trigger": "SimpleAudioEngine_isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "SimpleAudioEngine:isBackgroundMusicPlaying()"},
{ "trigger": ":isBackgroundMusicPlaying\tSimpleAudioEngine:isBackgroundMusicPlaying()", "contents": "isBackgroundMusicPlaying()"},
{ "trigger": "SimpleAudioEngine_resumeAllEffects\tSimpleAudioEngine:resumeAllEffects()", "contents": "SimpleAudioEngine:resumeAllEffects()"},
{ "trigger": ":resumeAllEffects\tSimpleAudioEngine:resumeAllEffects()", "contents": "resumeAllEffects()"},
{ "trigger": "SimpleAudioEngine_resumeEffect\tSimpleAudioEngine:resumeEffect(_num)", "contents": "SimpleAudioEngine:resumeEffect(_num)"},
{ "trigger": ":resumeEffect\tSimpleAudioEngine:resumeEffect(_num)", "contents": "resumeEffect(_num)"},
{ "trigger": "SimpleAudioEngine_playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "SimpleAudioEngine:playBackgroundMusic(_str,_boo)"},
{ "trigger": ":playBackgroundMusic\tSimpleAudioEngine:playBackgroundMusic(_str,_boo)", "contents": "playBackgroundMusic(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_pauseAllEffects\tSimpleAudioEngine:pauseAllEffects()", "contents": "SimpleAudioEngine:pauseAllEffects()"},
{ "trigger": ":pauseAllEffects\tSimpleAudioEngine:pauseAllEffects()", "contents": "pauseAllEffects()"},
{ "trigger": "SimpleAudioEngine_playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "SimpleAudioEngine:playEffect(_str,_boo)"},
{ "trigger": ":playEffect\tSimpleAudioEngine:playEffect(_str,_boo)", "contents": "playEffect(_str,_boo)"},
{ "trigger": "SimpleAudioEngine_unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "SimpleAudioEngine:unloadEffect(_str)"},
{ "trigger": ":unloadEffect\tSimpleAudioEngine:unloadEffect(_str)", "contents": "unloadEffect(_str)"},
{ "trigger": "CCEaseExponentialInOut\t", "contents": "CCEaseExponentialInOut"},
{ "trigger": "CCEaseExponentialInOut_create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "CCEaseExponentialInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseRateAction\t", "contents": "CCEaseRateAction"},
{ "trigger": "CCEaseRateAction_create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "CCEaseRateAction:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseRateAction:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCParticleSun\t", "contents": "CCParticleSun"},
{ "trigger": "CCParticleSun_createWithTotalParticles\tCCParticleSun:createWithTotalParticles(_num)", "contents": "CCParticleSun:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSun:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSun_create\tCCParticleSun:create()", "contents": "CCParticleSun:create()"},
{ "trigger": ":create\tCCParticleSun:create()", "contents": "create()"},
{ "trigger": "ccColor4B\t", "contents": "ccColor4B"},
{ "trigger": "ccColor4B_call\tccColor4B:call()", "contents": "ccColor4B:call()"},
{ "trigger": ":call\tccColor4B:call()", "contents": "call()"},
{ "trigger": "ccColor4B_new\tccColor4B:new()", "contents": "ccColor4B:new()"},
{ "trigger": ":new\tccColor4B:new()", "contents": "new()"},
{ "trigger": "ccColor4B_new_local\tccColor4B:new_local()", "contents": "ccColor4B:new_local()"},
{ "trigger": ":new_local\tccColor4B:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor4B_delete\tccColor4B:delete()", "contents": "ccColor4B:delete()"},
{ "trigger": ":delete\tccColor4B:delete()", "contents": "delete()"},
{ "trigger": "CCHTTPRequest\t", "contents": "CCHTTPRequest"},
{ "trigger": "CCHTTPRequest_getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "CCHTTPRequest:getErrorCode()"},
{ "trigger": ":getErrorCode\tCCHTTPRequest:getErrorCode()", "contents": "getErrorCode()"},
{ "trigger": "CCHTTPRequest_getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "CCHTTPRequest:getResponseDataLua()"},
{ "trigger": ":getResponseDataLua\tCCHTTPRequest:getResponseDataLua()", "contents": "getResponseDataLua()"},
{ "trigger": "CCHTTPRequest_getState\tCCHTTPRequest:getState()", "contents": "CCHTTPRequest:getState()"},
{ "trigger": ":getState\tCCHTTPRequest:getState()", "contents": "getState()"},
{ "trigger": "CCHTTPRequest_setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "CCHTTPRequest:setAcceptEncoding(_num)"},
{ "trigger": ":setAcceptEncoding\tCCHTTPRequest:setAcceptEncoding(_num)", "contents": "setAcceptEncoding(_num)"},
{ "trigger": "CCHTTPRequest_cancel\tCCHTTPRequest:cancel()", "contents": "CCHTTPRequest:cancel()"},
{ "trigger": ":cancel\tCCHTTPRequest:cancel()", "contents": "cancel()"},
{ "trigger": "CCHTTPRequest_getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "CCHTTPRequest:getResponseDataLength()"},
{ "trigger": ":getResponseDataLength\tCCHTTPRequest:getResponseDataLength()", "contents": "getResponseDataLength()"},
{ "trigger": "CCHTTPRequest_setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "CCHTTPRequest:setRequestUrl(_str)"},
{ "trigger": ":setRequestUrl\tCCHTTPRequest:setRequestUrl(_str)", "contents": "setRequestUrl(_str)"},
{ "trigger": "CCHTTPRequest_saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "CCHTTPRequest:saveResponseData(_str)"},
{ "trigger": ":saveResponseData\tCCHTTPRequest:saveResponseData(_str)", "contents": "saveResponseData(_str)"},
{ "trigger": "CCHTTPRequest_createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "CCHTTPRequest:createWithUrlLua(_listener,_str,_num)"},
{ "trigger": ":createWithUrlLua\tCCHTTPRequest:createWithUrlLua(_listener,_str,_num)", "contents": "createWithUrlLua(_listener,_str,_num)"},
{ "trigger": "CCHTTPRequest_getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "CCHTTPRequest:getErrorMessage()"},
{ "trigger": ":getErrorMessage\tCCHTTPRequest:getErrorMessage()", "contents": "getErrorMessage()"},
{ "trigger": "CCHTTPRequest_getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "CCHTTPRequest:getResponseStatusCode()"},
{ "trigger": ":getResponseStatusCode\tCCHTTPRequest:getResponseStatusCode()", "contents": "getResponseStatusCode()"},
{ "trigger": "CCHTTPRequest_addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "CCHTTPRequest:addRequestHeader(_str)"},
{ "trigger": ":addRequestHeader\tCCHTTPRequest:addRequestHeader(_str)", "contents": "addRequestHeader(_str)"},
{ "trigger": "CCHTTPRequest_start\tCCHTTPRequest:start()", "contents": "CCHTTPRequest:start()"},
{ "trigger": ":start\tCCHTTPRequest:start()", "contents": "start()"},
{ "trigger": "CCHTTPRequest_addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "CCHTTPRequest:addPOSTValue(_str,_str)"},
{ "trigger": ":addPOSTValue\tCCHTTPRequest:addPOSTValue(_str,_str)", "contents": "addPOSTValue(_str,_str)"},
{ "trigger": "CCHTTPRequest_setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "CCHTTPRequest:setTimeout(_num)"},
{ "trigger": ":setTimeout\tCCHTTPRequest:setTimeout(_num)", "contents": "setTimeout(_num)"},
{ "trigger": "CCHTTPRequest_setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "CCHTTPRequest:setPOSTData(_str)"},
{ "trigger": ":setPOSTData\tCCHTTPRequest:setPOSTData(_str)", "contents": "setPOSTData(_str)"},
{ "trigger": "CCHTTPRequest_getResponseString\tCCHTTPRequest:getResponseString()", "contents": "CCHTTPRequest:getResponseString()"},
{ "trigger": ":getResponseString\tCCHTTPRequest:getResponseString()", "contents": "getResponseString()"},
{ "trigger": "CCEaseSineIn\t", "contents": "CCEaseSineIn"},
{ "trigger": "CCEaseSineIn_create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "CCEaseSineIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "ccColor4F\t", "contents": "ccColor4F"},
{ "trigger": "ccColor4F_call\tccColor4F:call()", "contents": "ccColor4F:call()"},
{ "trigger": ":call\tccColor4F:call()", "contents": "call()"},
{ "trigger": "ccColor4F_new\tccColor4F:new()", "contents": "ccColor4F:new()"},
{ "trigger": ":new\tccColor4F:new()", "contents": "new()"},
{ "trigger": "ccColor4F_new_local\tccColor4F:new_local()", "contents": "ccColor4F:new_local()"},
{ "trigger": ":new_local\tccColor4F:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor4F_delete\tccColor4F:delete()", "contents": "ccColor4F:delete()"},
{ "trigger": ":delete\tccColor4F:delete()", "contents": "delete()"},
{ "trigger": "CCParticleExplosion\t", "contents": "CCParticleExplosion"},
{ "trigger": "CCParticleExplosion_createWithTotalParticles\tCCParticleExplosion:createWithTotalParticles(_num)", "contents": "CCParticleExplosion:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleExplosion:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleExplosion_create\tCCParticleExplosion:create()", "contents": "CCParticleExplosion:create()"},
{ "trigger": ":create\tCCParticleExplosion:create()", "contents": "create()"},
{ "trigger": "CCJumpBy\t", "contents": "CCJumpBy"},
{ "trigger": "CCJumpBy_create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpBy:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpBy:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCPhysicsDebugNode\t", "contents": "CCPhysicsDebugNode"},
{ "trigger": "CCEditBox\t", "contents": "CCEditBox"},
{ "trigger": "CCEditBox_registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "CCEditBox:registerScriptEditBoxHandler(_listener)"},
{ "trigger": ":registerScriptEditBoxHandler\tCCEditBox:registerScriptEditBoxHandler(_listener)", "contents": "registerScriptEditBoxHandler(_listener)"},
{ "trigger": "CCEditBox_setFontSize\tCCEditBox:setFontSize(_num)", "contents": "CCEditBox:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCEditBox:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCEditBox_getMaxLength\tCCEditBox:getMaxLength()", "contents": "CCEditBox:getMaxLength()"},
{ "trigger": ":getMaxLength\tCCEditBox:getMaxLength()", "contents": "getMaxLength()"},
{ "trigger": "CCEditBox_setFont\tCCEditBox:setFont(_str,_num)", "contents": "CCEditBox:setFont(_str,_num)"},
{ "trigger": ":setFont\tCCEditBox:setFont(_str,_num)", "contents": "setFont(_str,_num)"},
{ "trigger": "CCEditBox_setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "CCEditBox:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCEditBox:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCEditBox_setText\tCCEditBox:setText(_str)", "contents": "CCEditBox:setText(_str)"},
{ "trigger": ":setText\tCCEditBox:setText(_str)", "contents": "setText(_str)"},
{ "trigger": "CCEditBox_setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "CCEditBox:setInputFlag(_num)"},
{ "trigger": ":setInputFlag\tCCEditBox:setInputFlag(_num)", "contents": "setInputFlag(_num)"},
{ "trigger": "CCEditBox_setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "CCEditBox:setMaxLength(_num)"},
{ "trigger": ":setMaxLength\tCCEditBox:setMaxLength(_num)", "contents": "setMaxLength(_num)"},
{ "trigger": "CCEditBox_create\tCCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "CCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": ":create\tCCEditBox:create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)", "contents": "create(_CCSize,_CCScale9Sprite,_CCScale9Sprite,_CCScale9Sprite)"},
{ "trigger": "CCEditBox_setPlaceholderFontName\tCCEditBox:setPlaceholderFontName(_str)", "contents": "CCEditBox:setPlaceholderFontName(_str)"},
{ "trigger": ":setPlaceholderFontName\tCCEditBox:setPlaceholderFontName(_str)", "contents": "setPlaceholderFontName(_str)"},
{ "trigger": "CCEditBox_unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "CCEditBox:unregisterScriptEditBoxHandler()"},
{ "trigger": ":unregisterScriptEditBoxHandler\tCCEditBox:unregisterScriptEditBoxHandler()", "contents": "unregisterScriptEditBoxHandler()"},
{ "trigger": "CCEditBox_setReturnType\tCCEditBox:setReturnType(_num)", "contents": "CCEditBox:setReturnType(_num)"},
{ "trigger": ":setReturnType\tCCEditBox:setReturnType(_num)", "contents": "setReturnType(_num)"},
{ "trigger": "CCEditBox_getText\tCCEditBox:getText()", "contents": "CCEditBox:getText()"},
{ "trigger": ":getText\tCCEditBox:getText()", "contents": "getText()"},
{ "trigger": "CCEditBox_setInputMode\tCCEditBox:setInputMode(_num)", "contents": "CCEditBox:setInputMode(_num)"},
{ "trigger": ":setInputMode\tCCEditBox:setInputMode(_num)", "contents": "setInputMode(_num)"},
{ "trigger": "CCEditBox_setFontName\tCCEditBox:setFontName(_str)", "contents": "CCEditBox:setFontName(_str)"},
{ "trigger": ":setFontName\tCCEditBox:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCEditBox_setPlaceholderFont\tCCEditBox:setPlaceholderFont(_str,_num)", "contents": "CCEditBox:setPlaceholderFont(_str,_num)"},
{ "trigger": ":setPlaceholderFont\tCCEditBox:setPlaceholderFont(_str,_num)", "contents": "setPlaceholderFont(_str,_num)"},
{ "trigger": "CCEditBox_setFontColor\tCCEditBox:setFontColor(_ccColor3B)", "contents": "CCEditBox:setFontColor(_ccColor3B)"},
{ "trigger": ":setFontColor\tCCEditBox:setFontColor(_ccColor3B)", "contents": "setFontColor(_ccColor3B)"},
{ "trigger": "CCEditBox_setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_ccColor3B)", "contents": "CCEditBox:setPlaceholderFontColor(_ccColor3B)"},
{ "trigger": ":setPlaceholderFontColor\tCCEditBox:setPlaceholderFontColor(_ccColor3B)", "contents": "setPlaceholderFontColor(_ccColor3B)"},
{ "trigger": "CCEditBox_getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "CCEditBox:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCEditBox:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCEditBox_setPlaceholderFontSize\tCCEditBox:setPlaceholderFontSize(_num)", "contents": "CCEditBox:setPlaceholderFontSize(_num)"},
{ "trigger": ":setPlaceholderFontSize\tCCEditBox:setPlaceholderFontSize(_num)", "contents": "setPlaceholderFontSize(_num)"},
{ "trigger": "CCFileUtils\t", "contents": "CCFileUtils"},
{ "trigger": "CCFileUtils_fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "CCFileUtils:fullPathFromRelativeFile(_str,_str)"},
{ "trigger": ":fullPathFromRelativeFile\tCCFileUtils:fullPathFromRelativeFile(_str,_str)", "contents": "fullPathFromRelativeFile(_str,_str)"},
{ "trigger": "CCFileUtils_getCachePath\tCCFileUtils:getCachePath()", "contents": "CCFileUtils:getCachePath()"},
{ "trigger": ":getCachePath\tCCFileUtils:getCachePath()", "contents": "getCachePath()"},
{ "trigger": "CCFileUtils_setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "CCFileUtils:setPopupNotify(_boo)"},
{ "trigger": ":setPopupNotify\tCCFileUtils:setPopupNotify(_boo)", "contents": "setPopupNotify(_boo)"},
{ "trigger": "CCFileUtils_sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "CCFileUtils:sharedFileUtils()"},
{ "trigger": ":sharedFileUtils\tCCFileUtils:sharedFileUtils()", "contents": "sharedFileUtils()"},
{ "trigger": "CCFileUtils_isAbsolutePath\tCCFileUtils:isAbsolutePath(_str)", "contents": "CCFileUtils:isAbsolutePath(_str)"},
{ "trigger": ":isAbsolutePath\tCCFileUtils:isAbsolutePath(_str)", "contents": "isAbsolutePath(_str)"},
{ "trigger": "CCFileUtils_loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "CCFileUtils:loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": ":loadFilenameLookupDictionaryFromFile\tCCFileUtils:loadFilenameLookupDictionaryFromFile(_str)", "contents": "loadFilenameLookupDictionaryFromFile(_str)"},
{ "trigger": "CCFileUtils_addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "CCFileUtils:addSearchPath(_str)"},
{ "trigger": ":addSearchPath\tCCFileUtils:addSearchPath(_str)", "contents": "addSearchPath(_str)"},
{ "trigger": "CCFileUtils_addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "CCFileUtils:addSearchResolutionsOrder(_str)"},
{ "trigger": ":addSearchResolutionsOrder\tCCFileUtils:addSearchResolutionsOrder(_str)", "contents": "addSearchResolutionsOrder(_str)"},
{ "trigger": "CCFileUtils_setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "CCFileUtils:setSearchRootPath(_str)"},
{ "trigger": ":setSearchRootPath\tCCFileUtils:setSearchRootPath(_str)", "contents": "setSearchRootPath(_str)"},
{ "trigger": "CCFileUtils_isFileExist\tCCFileUtils:isFileExist(_str)", "contents": "CCFileUtils:isFileExist(_str)"},
{ "trigger": ":isFileExist\tCCFileUtils:isFileExist(_str)", "contents": "isFileExist(_str)"},
{ "trigger": "CCFileUtils_setFilenameLookupDictionary\tCCFileUtils:setFilenameLookupDictionary(_CCDictionary)", "contents": "CCFileUtils:setFilenameLookupDictionary(_CCDictionary)"},
{ "trigger": ":setFilenameLookupDictionary\tCCFileUtils:setFilenameLookupDictionary(_CCDictionary)", "contents": "setFilenameLookupDictionary(_CCDictionary)"},
{ "trigger": "CCFileUtils_setWritablePath\tCCFileUtils:setWritablePath(_str)", "contents": "CCFileUtils:setWritablePath(_str)"},
{ "trigger": ":setWritablePath\tCCFileUtils:setWritablePath(_str)", "contents": "setWritablePath(_str)"},
{ "trigger": "CCFileUtils_setCachePath\tCCFileUtils:setCachePath(_str)", "contents": "CCFileUtils:setCachePath(_str)"},
{ "trigger": ":setCachePath\tCCFileUtils:setCachePath(_str)", "contents": "setCachePath(_str)"},
{ "trigger": "CCFileUtils_purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "CCFileUtils:purgeCachedEntries()"},
{ "trigger": ":purgeCachedEntries\tCCFileUtils:purgeCachedEntries()", "contents": "purgeCachedEntries()"},
{ "trigger": "CCFileUtils_getWritablePath\tCCFileUtils:getWritablePath()", "contents": "CCFileUtils:getWritablePath()"},
{ "trigger": ":getWritablePath\tCCFileUtils:getWritablePath()", "contents": "getWritablePath()"},
{ "trigger": "CCFileUtils_isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "CCFileUtils:isPopupNotify()"},
{ "trigger": ":isPopupNotify\tCCFileUtils:isPopupNotify()", "contents": "isPopupNotify()"},
{ "trigger": "CCFileUtils_fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "CCFileUtils:fullPathForFilename(_str)"},
{ "trigger": ":fullPathForFilename\tCCFileUtils:fullPathForFilename(_str)", "contents": "fullPathForFilename(_str)"},
{ "trigger": "CCLabelAtlas\t", "contents": "CCLabelAtlas"},
{ "trigger": "CCLabelAtlas_setString\tCCLabelAtlas:setString(_str)", "contents": "CCLabelAtlas:setString(_str)"},
{ "trigger": ":setString\tCCLabelAtlas:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelAtlas_getString\tCCLabelAtlas:getString()", "contents": "CCLabelAtlas:getString()"},
{ "trigger": ":getString\tCCLabelAtlas:getString()", "contents": "getString()"},
{ "trigger": "CCLabelAtlas_create\tCCLabelAtlas:create(_str,_str)", "contents": "CCLabelAtlas:create(_str,_str)"},
{ "trigger": ":create\tCCLabelAtlas:create(_str,_str)", "contents": "create(_str,_str)"},
{ "trigger": "CCPlace\t", "contents": "CCPlace"},
{ "trigger": "CCPlace_create\tCCPlace:create(_CCPoint)", "contents": "CCPlace:create(_CCPoint)"},
{ "trigger": ":create\tCCPlace:create(_CCPoint)", "contents": "create(_CCPoint)"},
{ "trigger": "CCShuffleTiles\t", "contents": "CCShuffleTiles"},
{ "trigger": "CCShuffleTiles_create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "CCShuffleTiles:create(_num,_CCSize,_num)"},
{ "trigger": ":create\tCCShuffleTiles:create(_num,_CCSize,_num)", "contents": "create(_num,_CCSize,_num)"},
{ "trigger": "CCDevice\t", "contents": "CCDevice"},
{ "trigger": "CCDevice_getDPI\tCCDevice:getDPI()", "contents": "CCDevice:getDPI()"},
{ "trigger": ":getDPI\tCCDevice:getDPI()", "contents": "getDPI()"},
{ "trigger": "CCMenuItem\t", "contents": "CCMenuItem"},
{ "trigger": "CCMenuItem_activate\tCCMenuItem:activate()", "contents": "CCMenuItem:activate()"},
{ "trigger": ":activate\tCCMenuItem:activate()", "contents": "activate()"},
{ "trigger": "CCMenuItem_selected\tCCMenuItem:selected()", "contents": "CCMenuItem:selected()"},
{ "trigger": ":selected\tCCMenuItem:selected()", "contents": "selected()"},
{ "trigger": "CCMenuItem_isSelected\tCCMenuItem:isSelected()", "contents": "CCMenuItem:isSelected()"},
{ "trigger": ":isSelected\tCCMenuItem:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCMenuItem_setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "CCMenuItem:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenuItem:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenuItem_unselected\tCCMenuItem:unselected()", "contents": "CCMenuItem:unselected()"},
{ "trigger": ":unselected\tCCMenuItem:unselected()", "contents": "unselected()"},
{ "trigger": "CCMenuItem_registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "CCMenuItem:registerScriptTapHandler(_listener)"},
{ "trigger": ":registerScriptTapHandler\tCCMenuItem:registerScriptTapHandler(_listener)", "contents": "registerScriptTapHandler(_listener)"},
{ "trigger": "CCMenuItem_rect\tCCMenuItem:rect()", "contents": "CCMenuItem:rect()"},
{ "trigger": ":rect\tCCMenuItem:rect()", "contents": "rect()"},
{ "trigger": "CCMenuItem_create\tCCMenuItem:create()", "contents": "CCMenuItem:create()"},
{ "trigger": ":create\tCCMenuItem:create()", "contents": "create()"},
{ "trigger": "CCMenuItem_isEnabled\tCCMenuItem:isEnabled()", "contents": "CCMenuItem:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenuItem:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenuItem_unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "CCMenuItem:unregisterScriptTapHandler()"},
{ "trigger": ":unregisterScriptTapHandler\tCCMenuItem:unregisterScriptTapHandler()", "contents": "unregisterScriptTapHandler()"},
{ "trigger": "CCEaseElasticIn\t", "contents": "CCEaseElasticIn"},
{ "trigger": "CCEaseElasticIn_create\tCCEaseElasticIn:create(_CCActionInterval)", "contents": "CCEaseElasticIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionZoomFlipY\t", "contents": "CCTransitionZoomFlipY"},
{ "trigger": "CCTransitionZoomFlipY_create\tCCTransitionZoomFlipY:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipY:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipY:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionZoomFlipX\t", "contents": "CCTransitionZoomFlipX"},
{ "trigger": "CCTransitionZoomFlipX_create\tCCTransitionZoomFlipX:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipX:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipX:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCFadeTo\t", "contents": "CCFadeTo"},
{ "trigger": "CCFadeTo_create\tCCFadeTo:create(_num,_num)", "contents": "CCFadeTo:create(_num,_num)"},
{ "trigger": ":create\tCCFadeTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCScene\t", "contents": "CCScene"},
{ "trigger": "CCScene_create\tCCScene:create()", "contents": "CCScene:create()"},
{ "trigger": ":create\tCCScene:create()", "contents": "create()"},
{ "trigger": "CCEaseBackIn\t", "contents": "CCEaseBackIn"},
{ "trigger": "CCEaseBackIn_create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "CCEaseBackIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "Armature\t", "contents": "Armature"},
{ "trigger": "Armature_getParentBone\tArmature:getParentBone()", "contents": "Armature:getParentBone()"},
{ "trigger": ":getParentBone\tArmature:getParentBone()", "contents": "getParentBone()"},
{ "trigger": "Armature_setAnimation\tArmature:setAnimation(_Animation)", "contents": "Armature:setAnimation(_Animation)"},
{ "trigger": ":setAnimation\tArmature:setAnimation(_Animation)", "contents": "setAnimation(_Animation)"},
{ "trigger": "Armature_getAnimation\tArmature:getAnimation()", "contents": "Armature:getAnimation()"},
{ "trigger": ":getAnimation\tArmature:getAnimation()", "contents": "getAnimation()"},
{ "trigger": "Armature_getBlendFunc\tArmature:getBlendFunc()", "contents": "Armature:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tArmature:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "Armature_create\tArmature:create()", "contents": "Armature:create()"},
{ "trigger": ":create\tArmature:create()", "contents": "create()"},
{ "trigger": "Armature_addBone\tArmature:addBone(_Bone,_str)", "contents": "Armature:addBone(_Bone,_str)"},
{ "trigger": ":addBone\tArmature:addBone(_Bone,_str)", "contents": "addBone(_Bone,_str)"},
{ "trigger": "Armature_changeBoneParent\tArmature:changeBoneParent(_Bone,_str)", "contents": "Armature:changeBoneParent(_Bone,_str)"},
{ "trigger": ":changeBoneParent\tArmature:changeBoneParent(_Bone,_str)", "contents": "changeBoneParent(_Bone,_str)"},
{ "trigger": "Armature_getBone\tArmature:getBone(_str)", "contents": "Armature:getBone(_str)"},
{ "trigger": ":getBone\tArmature:getBone(_str)", "contents": "getBone(_str)"},
{ "trigger": "Armature_setBlendFunc\tArmature:setBlendFunc(_ccBlendFunc)", "contents": "Armature:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tArmature:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "Armature_getName\tArmature:getName()", "contents": "Armature:getName()"},
{ "trigger": ":getName\tArmature:getName()", "contents": "getName()"},
{ "trigger": "Armature_removeBone\tArmature:removeBone(_Bone,_boo)", "contents": "Armature:removeBone(_Bone,_boo)"},
{ "trigger": ":removeBone\tArmature:removeBone(_Bone,_boo)", "contents": "removeBone(_Bone,_boo)"},
{ "trigger": "Armature_setName\tArmature:setName(_cpp)", "contents": "Armature:setName(_cpp)"},
{ "trigger": ":setName\tArmature:setName(_cpp)", "contents": "setName(_cpp)"},
{ "trigger": "Armature_getBoneDic\tArmature:getBoneDic()", "contents": "Armature:getBoneDic()"},
{ "trigger": ":getBoneDic\tArmature:getBoneDic()", "contents": "getBoneDic()"},
{ "trigger": "ccColor3B\t", "contents": "ccColor3B"},
{ "trigger": "ccColor3B_call\tccColor3B:call()", "contents": "ccColor3B:call()"},
{ "trigger": ":call\tccColor3B:call()", "contents": "call()"},
{ "trigger": "ccColor3B_new\tccColor3B:new()", "contents": "ccColor3B:new()"},
{ "trigger": ":new\tccColor3B:new()", "contents": "new()"},
{ "trigger": "ccColor3B_new_local\tccColor3B:new_local()", "contents": "ccColor3B:new_local()"},
{ "trigger": ":new_local\tccColor3B:new_local()", "contents": "new_local()"},
{ "trigger": "ccColor3B_delete\tccColor3B:delete()", "contents": "ccColor3B:delete()"},
{ "trigger": ":delete\tccColor3B:delete()", "contents": "delete()"},
{ "trigger": "CCProfiler\t", "contents": "CCProfiler"},
{ "trigger": "CCProfiler_releaseAllTimers\tCCProfiler:releaseAllTimers()", "contents": "CCProfiler:releaseAllTimers()"},
{ "trigger": ":releaseAllTimers\tCCProfiler:releaseAllTimers()", "contents": "releaseAllTimers()"},
{ "trigger": "CCProfiler_releaseTimer\tCCProfiler:releaseTimer(_str)", "contents": "CCProfiler:releaseTimer(_str)"},
{ "trigger": ":releaseTimer\tCCProfiler:releaseTimer(_str)", "contents": "releaseTimer(_str)"},
{ "trigger": "CCProfiler_displayTimers\tCCProfiler:displayTimers()", "contents": "CCProfiler:displayTimers()"},
{ "trigger": ":displayTimers\tCCProfiler:displayTimers()", "contents": "displayTimers()"},
{ "trigger": "CCProfiler_createAndAddTimerWithName\tCCProfiler:createAndAddTimerWithName(_str)", "contents": "CCProfiler:createAndAddTimerWithName(_str)"},
{ "trigger": ":createAndAddTimerWithName\tCCProfiler:createAndAddTimerWithName(_str)", "contents": "createAndAddTimerWithName(_str)"},
{ "trigger": "CCProfiler_sharedProfiler\tCCProfiler:sharedProfiler()", "contents": "CCProfiler:sharedProfiler()"},
{ "trigger": ":sharedProfiler\tCCProfiler:sharedProfiler()", "contents": "sharedProfiler()"},
{ "trigger": "CCTransitionSlideInR\t", "contents": "CCTransitionSlideInR"},
{ "trigger": "CCTransitionSlideInR_create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "CCTransitionSlideInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCParticleSystem\t", "contents": "CCParticleSystem"},
{ "trigger": "CCParticleSystem_getGravity\tCCParticleSystem:getGravity()", "contents": "CCParticleSystem:getGravity()"},
{ "trigger": ":getGravity\tCCParticleSystem:getGravity()", "contents": "getGravity()"},
{ "trigger": "CCParticleSystem_getBatchNode\tCCParticleSystem:getBatchNode()", "contents": "CCParticleSystem:getBatchNode()"},
{ "trigger": ":getBatchNode\tCCParticleSystem:getBatchNode()", "contents": "getBatchNode()"},
{ "trigger": "CCParticleSystem_setRadialAccel\tCCParticleSystem:setRadialAccel(_num)", "contents": "CCParticleSystem:setRadialAccel(_num)"},
{ "trigger": ":setRadialAccel\tCCParticleSystem:setRadialAccel(_num)", "contents": "setRadialAccel(_num)"},
{ "trigger": "CCParticleSystem_getSpeedVar\tCCParticleSystem:getSpeedVar()", "contents": "CCParticleSystem:getSpeedVar()"},
{ "trigger": ":getSpeedVar\tCCParticleSystem:getSpeedVar()", "contents": "getSpeedVar()"},
{ "trigger": "CCParticleSystem_setBlendFunc\tCCParticleSystem:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleSystem:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleSystem:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleSystem_setEndRadiusVar\tCCParticleSystem:setEndRadiusVar(_num)", "contents": "CCParticleSystem:setEndRadiusVar(_num)"},
{ "trigger": ":setEndRadiusVar\tCCParticleSystem:setEndRadiusVar(_num)", "contents": "setEndRadiusVar(_num)"},
{ "trigger": "CCParticleSystem_stopSystem\tCCParticleSystem:stopSystem()", "contents": "CCParticleSystem:stopSystem()"},
{ "trigger": ":stopSystem\tCCParticleSystem:stopSystem()", "contents": "stopSystem()"},
{ "trigger": "CCParticleSystem_getRotatePerSecondVar\tCCParticleSystem:getRotatePerSecondVar()", "contents": "CCParticleSystem:getRotatePerSecondVar()"},
{ "trigger": ":getRotatePerSecondVar\tCCParticleSystem:getRotatePerSecondVar()", "contents": "getRotatePerSecondVar()"},
{ "trigger": "CCParticleSystem_isAutoRemoveOnFinish\tCCParticleSystem:isAutoRemoveOnFinish()", "contents": "CCParticleSystem:isAutoRemoveOnFinish()"},
{ "trigger": ":isAutoRemoveOnFinish\tCCParticleSystem:isAutoRemoveOnFinish()", "contents": "isAutoRemoveOnFinish()"},
{ "trigger": "CCParticleSystem_getStartRadiusVar\tCCParticleSystem:getStartRadiusVar()", "contents": "CCParticleSystem:getStartRadiusVar()"},
{ "trigger": ":getStartRadiusVar\tCCParticleSystem:getStartRadiusVar()", "contents": "getStartRadiusVar()"},
{ "trigger": "CCParticleSystem_resetSystem\tCCParticleSystem:resetSystem()", "contents": "CCParticleSystem:resetSystem()"},
{ "trigger": ":resetSystem\tCCParticleSystem:resetSystem()", "contents": "resetSystem()"},
{ "trigger": "CCParticleSystem_getStartRadius\tCCParticleSystem:getStartRadius()", "contents": "CCParticleSystem:getStartRadius()"},
{ "trigger": ":getStartRadius\tCCParticleSystem:getStartRadius()", "contents": "getStartRadius()"},
{ "trigger": "CCParticleSystem_setEndRadius\tCCParticleSystem:setEndRadius(_num)", "contents": "CCParticleSystem:setEndRadius(_num)"},
{ "trigger": ":setEndRadius\tCCParticleSystem:setEndRadius(_num)", "contents": "setEndRadius(_num)"},
{ "trigger": "CCParticleSystem_getRadialAccelVar\tCCParticleSystem:getRadialAccelVar()", "contents": "CCParticleSystem:getRadialAccelVar()"},
{ "trigger": ":getRadialAccelVar\tCCParticleSystem:getRadialAccelVar()", "contents": "getRadialAccelVar()"},
{ "trigger": "CCParticleSystem_getAngleVar\tCCParticleSystem:getAngleVar()", "contents": "CCParticleSystem:getAngleVar()"},
{ "trigger": ":getAngleVar\tCCParticleSystem:getAngleVar()", "contents": "getAngleVar()"},
{ "trigger": "CCParticleSystem_getEndColorVar\tCCParticleSystem:getEndColorVar()", "contents": "CCParticleSystem:getEndColorVar()"},
{ "trigger": ":getEndColorVar\tCCParticleSystem:getEndColorVar()", "contents": "getEndColorVar()"},
{ "trigger": "CCParticleSystem_setRotatePerSecond\tCCParticleSystem:setRotatePerSecond(_num)", "contents": "CCParticleSystem:setRotatePerSecond(_num)"},
{ "trigger": ":setRotatePerSecond\tCCParticleSystem:setRotatePerSecond(_num)", "contents": "setRotatePerSecond(_num)"},
{ "trigger": "CCParticleSystem_setStartSpinVar\tCCParticleSystem:setStartSpinVar(_num)", "contents": "CCParticleSystem:setStartSpinVar(_num)"},
{ "trigger": ":setStartSpinVar\tCCParticleSystem:setStartSpinVar(_num)", "contents": "setStartSpinVar(_num)"},
{ "trigger": "CCParticleSystem_isActive\tCCParticleSystem:isActive()", "contents": "CCParticleSystem:isActive()"},
{ "trigger": ":isActive\tCCParticleSystem:isActive()", "contents": "isActive()"},
{ "trigger": "CCParticleSystem_getRotatePerSecond\tCCParticleSystem:getRotatePerSecond()", "contents": "CCParticleSystem:getRotatePerSecond()"},
{ "trigger": ":getRotatePerSecond\tCCParticleSystem:getRotatePerSecond()", "contents": "getRotatePerSecond()"},
{ "trigger": "CCParticleSystem_getEndRadius\tCCParticleSystem:getEndRadius()", "contents": "CCParticleSystem:getEndRadius()"},
{ "trigger": ":getEndRadius\tCCParticleSystem:getEndRadius()", "contents": "getEndRadius()"},
{ "trigger": "CCParticleSystem_getOpacityModifyRGB\tCCParticleSystem:getOpacityModifyRGB()", "contents": "CCParticleSystem:getOpacityModifyRGB()"},
{ "trigger": ":getOpacityModifyRGB\tCCParticleSystem:getOpacityModifyRGB()", "contents": "getOpacityModifyRGB()"},
{ "trigger": "CCParticleSystem_getSourcePosition\tCCParticleSystem:getSourcePosition()", "contents": "CCParticleSystem:getSourcePosition()"},
{ "trigger": ":getSourcePosition\tCCParticleSystem:getSourcePosition()", "contents": "getSourcePosition()"},
{ "trigger": "CCParticleSystem_getRotationIsDir\tCCParticleSystem:getRotationIsDir()", "contents": "CCParticleSystem:getRotationIsDir()"},
{ "trigger": ":getRotationIsDir\tCCParticleSystem:getRotationIsDir()", "contents": "getRotationIsDir()"},
{ "trigger": "CCParticleSystem_setAngleVar\tCCParticleSystem:setAngleVar(_num)", "contents": "CCParticleSystem:setAngleVar(_num)"},
{ "trigger": ":setAngleVar\tCCParticleSystem:setAngleVar(_num)", "contents": "setAngleVar(_num)"},
{ "trigger": "CCParticleSystem_isFull\tCCParticleSystem:isFull()", "contents": "CCParticleSystem:isFull()"},
{ "trigger": ":isFull\tCCParticleSystem:isFull()", "contents": "isFull()"},
{ "trigger": "CCParticleSystem_getBlendFunc\tCCParticleSystem:getBlendFunc()", "contents": "CCParticleSystem:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleSystem:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleSystem_getEndSpin\tCCParticleSystem:getEndSpin()", "contents": "CCParticleSystem:getEndSpin()"},
{ "trigger": ":getEndSpin\tCCParticleSystem:getEndSpin()", "contents": "getEndSpin()"},
{ "trigger": "CCParticleSystem_setOpacityModifyRGB\tCCParticleSystem:setOpacityModifyRGB(_boo)", "contents": "CCParticleSystem:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCParticleSystem:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCParticleSystem_setStartColorVar\tCCParticleSystem:setStartColorVar(_ccColor4F)", "contents": "CCParticleSystem:setStartColorVar(_ccColor4F)"},
{ "trigger": ":setStartColorVar\tCCParticleSystem:setStartColorVar(_ccColor4F)", "contents": "setStartColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setEndSpin\tCCParticleSystem:setEndSpin(_num)", "contents": "CCParticleSystem:setEndSpin(_num)"},
{ "trigger": ":setEndSpin\tCCParticleSystem:setEndSpin(_num)", "contents": "setEndSpin(_num)"},
{ "trigger": "CCParticleSystem_getEmissionRate\tCCParticleSystem:getEmissionRate()", "contents": "CCParticleSystem:getEmissionRate()"},
{ "trigger": ":getEmissionRate\tCCParticleSystem:getEmissionRate()", "contents": "getEmissionRate()"},
{ "trigger": "CCParticleSystem_setDuration\tCCParticleSystem:setDuration(_num)", "contents": "CCParticleSystem:setDuration(_num)"},
{ "trigger": ":setDuration\tCCParticleSystem:setDuration(_num)", "contents": "setDuration(_num)"},
{ "trigger": "CCParticleSystem_getTangentialAccel\tCCParticleSystem:getTangentialAccel()", "contents": "CCParticleSystem:getTangentialAccel()"},
{ "trigger": ":getTangentialAccel\tCCParticleSystem:getTangentialAccel()", "contents": "getTangentialAccel()"},
{ "trigger": "CCParticleSystem_initWithDictionary\tCCParticleSystem:initWithDictionary(_CCDictionary,_str)", "contents": "CCParticleSystem:initWithDictionary(_CCDictionary,_str)"},
{ "trigger": ":initWithDictionary\tCCParticleSystem:initWithDictionary(_CCDictionary,_str)", "contents": "initWithDictionary(_CCDictionary,_str)"},
{ "trigger": "CCParticleSystem_updateWithNoTime\tCCParticleSystem:updateWithNoTime()", "contents": "CCParticleSystem:updateWithNoTime()"},
{ "trigger": ":updateWithNoTime\tCCParticleSystem:updateWithNoTime()", "contents": "updateWithNoTime()"},
{ "trigger": "CCParticleSystem_setRadialAccelVar\tCCParticleSystem:setRadialAccelVar(_num)", "contents": "CCParticleSystem:setRadialAccelVar(_num)"},
{ "trigger": ":setRadialAccelVar\tCCParticleSystem:setRadialAccelVar(_num)", "contents": "setRadialAccelVar(_num)"},
{ "trigger": "CCParticleSystem_getAtlasIndex\tCCParticleSystem:getAtlasIndex()", "contents": "CCParticleSystem:getAtlasIndex()"},
{ "trigger": ":getAtlasIndex\tCCParticleSystem:getAtlasIndex()", "contents": "getAtlasIndex()"},
{ "trigger": "CCParticleSystem_getStartSizeVar\tCCParticleSystem:getStartSizeVar()", "contents": "CCParticleSystem:getStartSizeVar()"},
{ "trigger": ":getStartSizeVar\tCCParticleSystem:getStartSizeVar()", "contents": "getStartSizeVar()"},
{ "trigger": "CCParticleSystem_getEndSpinVar\tCCParticleSystem:getEndSpinVar()", "contents": "CCParticleSystem:getEndSpinVar()"},
{ "trigger": ":getEndSpinVar\tCCParticleSystem:getEndSpinVar()", "contents": "getEndSpinVar()"},
{ "trigger": "CCParticleSystem_getEndSizeVar\tCCParticleSystem:getEndSizeVar()", "contents": "CCParticleSystem:getEndSizeVar()"},
{ "trigger": ":getEndSizeVar\tCCParticleSystem:getEndSizeVar()", "contents": "getEndSizeVar()"},
{ "trigger": "CCParticleSystem_setStartSize\tCCParticleSystem:setStartSize(_num)", "contents": "CCParticleSystem:setStartSize(_num)"},
{ "trigger": ":setStartSize\tCCParticleSystem:setStartSize(_num)", "contents": "setStartSize(_num)"},
{ "trigger": "CCParticleSystem_getRadialAccel\tCCParticleSystem:getRadialAccel()", "contents": "CCParticleSystem:getRadialAccel()"},
{ "trigger": ":getRadialAccel\tCCParticleSystem:getRadialAccel()", "contents": "getRadialAccel()"},
{ "trigger": "CCParticleSystem_setRotatePerSecondVar\tCCParticleSystem:setRotatePerSecondVar(_num)", "contents": "CCParticleSystem:setRotatePerSecondVar(_num)"},
{ "trigger": ":setRotatePerSecondVar\tCCParticleSystem:setRotatePerSecondVar(_num)", "contents": "setRotatePerSecondVar(_num)"},
{ "trigger": "CCParticleSystem_getTangentialAccelVar\tCCParticleSystem:getTangentialAccelVar()", "contents": "CCParticleSystem:getTangentialAccelVar()"},
{ "trigger": ":getTangentialAccelVar\tCCParticleSystem:getTangentialAccelVar()", "contents": "getTangentialAccelVar()"},
{ "trigger": "CCParticleSystem_setEmitterMode\tCCParticleSystem:setEmitterMode(_num)", "contents": "CCParticleSystem:setEmitterMode(_num)"},
{ "trigger": ":setEmitterMode\tCCParticleSystem:setEmitterMode(_num)", "contents": "setEmitterMode(_num)"},
{ "trigger": "CCParticleSystem_setEndSizeVar\tCCParticleSystem:setEndSizeVar(_num)", "contents": "CCParticleSystem:setEndSizeVar(_num)"},
{ "trigger": ":setEndSizeVar\tCCParticleSystem:setEndSizeVar(_num)", "contents": "setEndSizeVar(_num)"},
{ "trigger": "CCParticleSystem_setLife\tCCParticleSystem:setLife(_num)", "contents": "CCParticleSystem:setLife(_num)"},
{ "trigger": ":setLife\tCCParticleSystem:setLife(_num)", "contents": "setLife(_num)"},
{ "trigger": "CCParticleSystem_getStartSize\tCCParticleSystem:getStartSize()", "contents": "CCParticleSystem:getStartSize()"},
{ "trigger": ":getStartSize\tCCParticleSystem:getStartSize()", "contents": "getStartSize()"},
{ "trigger": "CCParticleSystem_setTexture\tCCParticleSystem:setTexture(_CCTexture2D)", "contents": "CCParticleSystem:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleSystem:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleSystem_getSpeed\tCCParticleSystem:getSpeed()", "contents": "CCParticleSystem:getSpeed()"},
{ "trigger": ":getSpeed\tCCParticleSystem:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCParticleSystem_setStartSizeVar\tCCParticleSystem:setStartSizeVar(_num)", "contents": "CCParticleSystem:setStartSizeVar(_num)"},
{ "trigger": ":setStartSizeVar\tCCParticleSystem:setStartSizeVar(_num)", "contents": "setStartSizeVar(_num)"},
{ "trigger": "CCParticleSystem_setStartSpin\tCCParticleSystem:setStartSpin(_num)", "contents": "CCParticleSystem:setStartSpin(_num)"},
{ "trigger": ":setStartSpin\tCCParticleSystem:setStartSpin(_num)", "contents": "setStartSpin(_num)"},
{ "trigger": "CCParticleSystem_getTexture\tCCParticleSystem:getTexture()", "contents": "CCParticleSystem:getTexture()"},
{ "trigger": ":getTexture\tCCParticleSystem:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCParticleSystem_getEndRadiusVar\tCCParticleSystem:getEndRadiusVar()", "contents": "CCParticleSystem:getEndRadiusVar()"},
{ "trigger": ":getEndRadiusVar\tCCParticleSystem:getEndRadiusVar()", "contents": "getEndRadiusVar()"},
{ "trigger": "CCParticleSystem_setSpeed\tCCParticleSystem:setSpeed(_num)", "contents": "CCParticleSystem:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCParticleSystem:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCParticleSystem_getStartSpin\tCCParticleSystem:getStartSpin()", "contents": "CCParticleSystem:getStartSpin()"},
{ "trigger": ":getStartSpin\tCCParticleSystem:getStartSpin()", "contents": "getStartSpin()"},
{ "trigger": "CCParticleSystem_getStartColorVar\tCCParticleSystem:getStartColorVar()", "contents": "CCParticleSystem:getStartColorVar()"},
{ "trigger": ":getStartColorVar\tCCParticleSystem:getStartColorVar()", "contents": "getStartColorVar()"},
{ "trigger": "CCParticleSystem_setEndColorVar\tCCParticleSystem:setEndColorVar(_ccColor4F)", "contents": "CCParticleSystem:setEndColorVar(_ccColor4F)"},
{ "trigger": ":setEndColorVar\tCCParticleSystem:setEndColorVar(_ccColor4F)", "contents": "setEndColorVar(_ccColor4F)"},
{ "trigger": "CCParticleSystem_getParticleCount\tCCParticleSystem:getParticleCount()", "contents": "CCParticleSystem:getParticleCount()"},
{ "trigger": ":getParticleCount\tCCParticleSystem:getParticleCount()", "contents": "getParticleCount()"},
{ "trigger": "CCParticleSystem_setAngle\tCCParticleSystem:setAngle(_num)", "contents": "CCParticleSystem:setAngle(_num)"},
{ "trigger": ":setAngle\tCCParticleSystem:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCParticleSystem_initWithTotalParticles\tCCParticleSystem:initWithTotalParticles(_num)", "contents": "CCParticleSystem:initWithTotalParticles(_num)"},
{ "trigger": ":initWithTotalParticles\tCCParticleSystem:initWithTotalParticles(_num)", "contents": "initWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystem_setEndSpinVar\tCCParticleSystem:setEndSpinVar(_num)", "contents": "CCParticleSystem:setEndSpinVar(_num)"},
{ "trigger": ":setEndSpinVar\tCCParticleSystem:setEndSpinVar(_num)", "contents": "setEndSpinVar(_num)"},
{ "trigger": "CCParticleSystem_initWithFile\tCCParticleSystem:initWithFile(_str)", "contents": "CCParticleSystem:initWithFile(_str)"},
{ "trigger": ":initWithFile\tCCParticleSystem:initWithFile(_str)", "contents": "initWithFile(_str)"},
{ "trigger": "CCParticleSystem_setGravity\tCCParticleSystem:setGravity(_CCPoint)", "contents": "CCParticleSystem:setGravity(_CCPoint)"},
{ "trigger": ":setGravity\tCCParticleSystem:setGravity(_CCPoint)", "contents": "setGravity(_CCPoint)"},
{ "trigger": "CCParticleSystem_getEmitterMode\tCCParticleSystem:getEmitterMode()", "contents": "CCParticleSystem:getEmitterMode()"},
{ "trigger": ":getEmitterMode\tCCParticleSystem:getEmitterMode()", "contents": "getEmitterMode()"},
{ "trigger": "CCParticleSystem_getLife\tCCParticleSystem:getLife()", "contents": "CCParticleSystem:getLife()"},
{ "trigger": ":getLife\tCCParticleSystem:getLife()", "contents": "getLife()"},
{ "trigger": "CCParticleSystem_init\tCCParticleSystem:init()", "contents": "CCParticleSystem:init()"},
{ "trigger": ":init\tCCParticleSystem:init()", "contents": "init()"},
{ "trigger": "CCParticleSystem_isBlendAdditive\tCCParticleSystem:isBlendAdditive()", "contents": "CCParticleSystem:isBlendAdditive()"},
{ "trigger": ":isBlendAdditive\tCCParticleSystem:isBlendAdditive()", "contents": "isBlendAdditive()"},
{ "trigger": "CCParticleSystem_getDuration\tCCParticleSystem:getDuration()", "contents": "CCParticleSystem:getDuration()"},
{ "trigger": ":getDuration\tCCParticleSystem:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCParticleSystem_getPosVar\tCCParticleSystem:getPosVar()", "contents": "CCParticleSystem:getPosVar()"},
{ "trigger": ":getPosVar\tCCParticleSystem:getPosVar()", "contents": "getPosVar()"},
{ "trigger": "CCParticleSystem_setRotationIsDir\tCCParticleSystem:setRotationIsDir(_boo)", "contents": "CCParticleSystem:setRotationIsDir(_boo)"},
{ "trigger": ":setRotationIsDir\tCCParticleSystem:setRotationIsDir(_boo)", "contents": "setRotationIsDir(_boo)"},
{ "trigger": "CCParticleSystem_setEndSize\tCCParticleSystem:setEndSize(_num)", "contents": "CCParticleSystem:setEndSize(_num)"},
{ "trigger": ":setEndSize\tCCParticleSystem:setEndSize(_num)", "contents": "setEndSize(_num)"},
{ "trigger": "CCParticleSystem_getStartSpinVar\tCCParticleSystem:getStartSpinVar()", "contents": "CCParticleSystem:getStartSpinVar()"},
{ "trigger": ":getStartSpinVar\tCCParticleSystem:getStartSpinVar()", "contents": "getStartSpinVar()"},
{ "trigger": "CCParticleSystem_setEmissionRate\tCCParticleSystem:setEmissionRate(_num)", "contents": "CCParticleSystem:setEmissionRate(_num)"},
{ "trigger": ":setEmissionRate\tCCParticleSystem:setEmissionRate(_num)", "contents": "setEmissionRate(_num)"},
{ "trigger": "CCParticleSystem_setPosVar\tCCParticleSystem:setPosVar(_CCPoint)", "contents": "CCParticleSystem:setPosVar(_CCPoint)"},
{ "trigger": ":setPosVar\tCCParticleSystem:setPosVar(_CCPoint)", "contents": "setPosVar(_CCPoint)"},
{ "trigger": "CCParticleSystem_setSourcePosition\tCCParticleSystem:setSourcePosition(_CCPoint)", "contents": "CCParticleSystem:setSourcePosition(_CCPoint)"},
{ "trigger": ":setSourcePosition\tCCParticleSystem:setSourcePosition(_CCPoint)", "contents": "setSourcePosition(_CCPoint)"},
{ "trigger": "CCParticleSystem_setPositionType\tCCParticleSystem:setPositionType(_num)", "contents": "CCParticleSystem:setPositionType(_num)"},
{ "trigger": ":setPositionType\tCCParticleSystem:setPositionType(_num)", "contents": "setPositionType(_num)"},
{ "trigger": "CCParticleSystem_getAngle\tCCParticleSystem:getAngle()", "contents": "CCParticleSystem:getAngle()"},
{ "trigger": ":getAngle\tCCParticleSystem:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCParticleSystem_setAutoRemoveOnFinish\tCCParticleSystem:setAutoRemoveOnFinish(_boo)", "contents": "CCParticleSystem:setAutoRemoveOnFinish(_boo)"},
{ "trigger": ":setAutoRemoveOnFinish\tCCParticleSystem:setAutoRemoveOnFinish(_boo)", "contents": "setAutoRemoveOnFinish(_boo)"},
{ "trigger": "CCParticleSystem_setBlendAdditive\tCCParticleSystem:setBlendAdditive(_boo)", "contents": "CCParticleSystem:setBlendAdditive(_boo)"},
{ "trigger": ":setBlendAdditive\tCCParticleSystem:setBlendAdditive(_boo)", "contents": "setBlendAdditive(_boo)"},
{ "trigger": "CCParticleSystem_setStartRadius\tCCParticleSystem:setStartRadius(_num)", "contents": "CCParticleSystem:setStartRadius(_num)"},
{ "trigger": ":setStartRadius\tCCParticleSystem:setStartRadius(_num)", "contents": "setStartRadius(_num)"},
{ "trigger": "CCParticleSystem_setSpeedVar\tCCParticleSystem:setSpeedVar(_num)", "contents": "CCParticleSystem:setSpeedVar(_num)"},
{ "trigger": ":setSpeedVar\tCCParticleSystem:setSpeedVar(_num)", "contents": "setSpeedVar(_num)"},
{ "trigger": "CCParticleSystem_setTangentialAccel\tCCParticleSystem:setTangentialAccel(_num)", "contents": "CCParticleSystem:setTangentialAccel(_num)"},
{ "trigger": ":setTangentialAccel\tCCParticleSystem:setTangentialAccel(_num)", "contents": "setTangentialAccel(_num)"},
{ "trigger": "CCParticleSystem_getEndColor\tCCParticleSystem:getEndColor()", "contents": "CCParticleSystem:getEndColor()"},
{ "trigger": ":getEndColor\tCCParticleSystem:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCParticleSystem_addParticle\tCCParticleSystem:addParticle()", "contents": "CCParticleSystem:addParticle()"},
{ "trigger": ":addParticle\tCCParticleSystem:addParticle()", "contents": "addParticle()"},
{ "trigger": "CCParticleSystem_setStartColor\tCCParticleSystem:setStartColor(_ccColor4F)", "contents": "CCParticleSystem:setStartColor(_ccColor4F)"},
{ "trigger": ":setStartColor\tCCParticleSystem:setStartColor(_ccColor4F)", "contents": "setStartColor(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setTangentialAccelVar\tCCParticleSystem:setTangentialAccelVar(_num)", "contents": "CCParticleSystem:setTangentialAccelVar(_num)"},
{ "trigger": ":setTangentialAccelVar\tCCParticleSystem:setTangentialAccelVar(_num)", "contents": "setTangentialAccelVar(_num)"},
{ "trigger": "CCParticleSystem_getStartColor\tCCParticleSystem:getStartColor()", "contents": "CCParticleSystem:getStartColor()"},
{ "trigger": ":getStartColor\tCCParticleSystem:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCParticleSystem_setStartRadiusVar\tCCParticleSystem:setStartRadiusVar(_num)", "contents": "CCParticleSystem:setStartRadiusVar(_num)"},
{ "trigger": ":setStartRadiusVar\tCCParticleSystem:setStartRadiusVar(_num)", "contents": "setStartRadiusVar(_num)"},
{ "trigger": "CCParticleSystem_getEndSize\tCCParticleSystem:getEndSize()", "contents": "CCParticleSystem:getEndSize()"},
{ "trigger": ":getEndSize\tCCParticleSystem:getEndSize()", "contents": "getEndSize()"},
{ "trigger": "CCParticleSystem_getTotalParticles\tCCParticleSystem:getTotalParticles()", "contents": "CCParticleSystem:getTotalParticles()"},
{ "trigger": ":getTotalParticles\tCCParticleSystem:getTotalParticles()", "contents": "getTotalParticles()"},
{ "trigger": "CCParticleSystem_getLifeVar\tCCParticleSystem:getLifeVar()", "contents": "CCParticleSystem:getLifeVar()"},
{ "trigger": ":getLifeVar\tCCParticleSystem:getLifeVar()", "contents": "getLifeVar()"},
{ "trigger": "CCParticleSystem_setTotalParticles\tCCParticleSystem:setTotalParticles(_num)", "contents": "CCParticleSystem:setTotalParticles(_num)"},
{ "trigger": ":setTotalParticles\tCCParticleSystem:setTotalParticles(_num)", "contents": "setTotalParticles(_num)"},
{ "trigger": "CCParticleSystem_getPositionType\tCCParticleSystem:getPositionType()", "contents": "CCParticleSystem:getPositionType()"},
{ "trigger": ":getPositionType\tCCParticleSystem:getPositionType()", "contents": "getPositionType()"},
{ "trigger": "CCParticleSystem_setEndColor\tCCParticleSystem:setEndColor(_ccColor4F)", "contents": "CCParticleSystem:setEndColor(_ccColor4F)"},
{ "trigger": ":setEndColor\tCCParticleSystem:setEndColor(_ccColor4F)", "contents": "setEndColor(_ccColor4F)"},
{ "trigger": "CCParticleSystem_setLifeVar\tCCParticleSystem:setLifeVar(_num)", "contents": "CCParticleSystem:setLifeVar(_num)"},
{ "trigger": ":setLifeVar\tCCParticleSystem:setLifeVar(_num)", "contents": "setLifeVar(_num)"},
{ "trigger": "CCControlColourPicker\t", "contents": "CCControlColourPicker"},
{ "trigger": "CCControlColourPicker_setColor\tCCControlColourPicker:setColor(_ccColor3B)", "contents": "CCControlColourPicker:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCControlColourPicker:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCControlColourPicker_create\tCCControlColourPicker:create()", "contents": "CCControlColourPicker:create()"},
{ "trigger": ":create\tCCControlColourPicker:create()", "contents": "create()"},
{ "trigger": "CCTransitionSlideInT\t", "contents": "CCTransitionSlideInT"},
{ "trigger": "CCTransitionSlideInT_create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "CCTransitionSlideInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDeccelAmplitude\t", "contents": "CCDeccelAmplitude"},
{ "trigger": "CCDeccelAmplitude_create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "CCDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCSprite\t", "contents": "CCSprite"},
{ "trigger": "CCSprite_getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "CCSprite:getAtlasIndex()"},
{ "trigger": ":getAtlasIndex\tCCSprite:getAtlasIndex()", "contents": "getAtlasIndex()"},
{ "trigger": "CCSprite_isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "CCSprite:isTextureRectRotated()"},
{ "trigger": ":isTextureRectRotated\tCCSprite:isTextureRectRotated()", "contents": "isTextureRectRotated()"},
{ "trigger": "CCSprite_setTextureRect\tCCSprite:setTextureRect(_CCRect)", "contents": "CCSprite:setTextureRect(_CCRect)"},
{ "trigger": ":setTextureRect\tCCSprite:setTextureRect(_CCRect)", "contents": "setTextureRect(_CCRect)"},
{ "trigger": "CCSprite_setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "CCSprite:setVertexRect(_CCRect)"},
{ "trigger": ":setVertexRect\tCCSprite:setVertexRect(_CCRect)", "contents": "setVertexRect(_CCRect)"},
{ "trigger": "CCSprite_isDirty\tCCSprite:isDirty()", "contents": "CCSprite:isDirty()"},
{ "trigger": ":isDirty\tCCSprite:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCSprite_isFlipY\tCCSprite:isFlipY()", "contents": "CCSprite:isFlipY()"},
{ "trigger": ":isFlipY\tCCSprite:isFlipY()", "contents": "isFlipY()"},
{ "trigger": "CCSprite_createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "CCSprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCSprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCSprite_getBlendFunc\tCCSprite:getBlendFunc()", "contents": "CCSprite:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSprite:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSprite_isFlipX\tCCSprite:isFlipX()", "contents": "CCSprite:isFlipX()"},
{ "trigger": ":isFlipX\tCCSprite:isFlipX()", "contents": "isFlipX()"},
{ "trigger": "CCSprite_setDirty\tCCSprite:setDirty(_boo)", "contents": "CCSprite:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCSprite:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCSprite_createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "CCSprite:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSprite:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "CCSprite:getOffsetPosition()"},
{ "trigger": ":getOffsetPosition\tCCSprite:getOffsetPosition()", "contents": "getOffsetPosition()"},
{ "trigger": "CCSprite_create\tCCSprite:create()", "contents": "CCSprite:create()"},
{ "trigger": ":create\tCCSprite:create()", "contents": "create()"},
{ "trigger": "CCSprite_setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "CCSprite:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCSprite:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCSprite_getTextureRect\tCCSprite:getTextureRect()", "contents": "CCSprite:getTextureRect()"},
{ "trigger": ":getTextureRect\tCCSprite:getTextureRect()", "contents": "getTextureRect()"},
{ "trigger": "CCSprite_setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "CCSprite:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSprite:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSprite_isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "CCSprite:isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": ":isFrameDisplayed\tCCSprite:isFrameDisplayed(_CCSpriteFrame)", "contents": "isFrameDisplayed(_CCSpriteFrame)"},
{ "trigger": "CCSprite_setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "CCSprite:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSprite:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSprite_getTexture\tCCSprite:getTexture()", "contents": "CCSprite:getTexture()"},
{ "trigger": ":getTexture\tCCSprite:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSprite_displayFrame\tCCSprite:displayFrame()", "contents": "CCSprite:displayFrame()"},
{ "trigger": ":displayFrame\tCCSprite:displayFrame()", "contents": "displayFrame()"},
{ "trigger": "CCSprite_setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "CCSprite:setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": ":setDisplayFrameWithAnimationName\tCCSprite:setDisplayFrameWithAnimationName(_str,_num)", "contents": "setDisplayFrameWithAnimationName(_str,_num)"},
{ "trigger": "CCSprite_setFlipY\tCCSprite:setFlipY(_boo)", "contents": "CCSprite:setFlipY(_boo)"},
{ "trigger": ":setFlipY\tCCSprite:setFlipY(_boo)", "contents": "setFlipY(_boo)"},
{ "trigger": "CCSprite_createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCSprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCSprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCSprite_setFlipX\tCCSprite:setFlipX(_boo)", "contents": "CCSprite:setFlipX(_boo)"},
{ "trigger": ":setFlipX\tCCSprite:setFlipX(_boo)", "contents": "setFlipX(_boo)"},
{ "trigger": "CCTransitionProgress\t", "contents": "CCTransitionProgress"},
{ "trigger": "CCTransitionSlideInL\t", "contents": "CCTransitionSlideInL"},
{ "trigger": "CCTransitionSlideInL_create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "CCTransitionSlideInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCControlPotentiometer\t", "contents": "CCControlPotentiometer"},
{ "trigger": "CCControlPotentiometer_getValue\tCCControlPotentiometer:getValue()", "contents": "CCControlPotentiometer:getValue()"},
{ "trigger": ":getValue\tCCControlPotentiometer:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlPotentiometer_getMaximumValue\tCCControlPotentiometer:getMaximumValue()", "contents": "CCControlPotentiometer:getMaximumValue()"},
{ "trigger": ":getMaximumValue\tCCControlPotentiometer:getMaximumValue()", "contents": "getMaximumValue()"},
{ "trigger": "CCControlPotentiometer_setMinimumValue\tCCControlPotentiometer:setMinimumValue(_num)", "contents": "CCControlPotentiometer:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlPotentiometer:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlPotentiometer_setMaximumValue\tCCControlPotentiometer:setMaximumValue(_num)", "contents": "CCControlPotentiometer:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlPotentiometer:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlPotentiometer_getMinimumValue\tCCControlPotentiometer:getMinimumValue()", "contents": "CCControlPotentiometer:getMinimumValue()"},
{ "trigger": ":getMinimumValue\tCCControlPotentiometer:getMinimumValue()", "contents": "getMinimumValue()"},
{ "trigger": "CCControlPotentiometer_setValue\tCCControlPotentiometer:setValue(_num)", "contents": "CCControlPotentiometer:setValue(_num)"},
{ "trigger": ":setValue\tCCControlPotentiometer:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlPotentiometer_create\tCCControlPotentiometer:create(_str,_str,_str)", "contents": "CCControlPotentiometer:create(_str,_str,_str)"},
{ "trigger": ":create\tCCControlPotentiometer:create(_str,_str,_str)", "contents": "create(_str,_str,_str)"},
{ "trigger": "CCLayerMultiplex\t", "contents": "CCLayerMultiplex"},
{ "trigger": "CCLayerMultiplex_createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "CCLayerMultiplex:createWithLayer(_CCLayer)"},
{ "trigger": ":createWithLayer\tCCLayerMultiplex:createWithLayer(_CCLayer)", "contents": "createWithLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_createWithArray\tCCLayerMultiplex:createWithArray(_CCArray)", "contents": "CCLayerMultiplex:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCLayerMultiplex:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCLayerMultiplex_addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "CCLayerMultiplex:addLayer(_CCLayer)"},
{ "trigger": ":addLayer\tCCLayerMultiplex:addLayer(_CCLayer)", "contents": "addLayer(_CCLayer)"},
{ "trigger": "CCLayerMultiplex_switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "CCLayerMultiplex:switchTo(_num)"},
{ "trigger": ":switchTo\tCCLayerMultiplex:switchTo(_num)", "contents": "switchTo(_num)"},
{ "trigger": "CCLayerMultiplex_switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "CCLayerMultiplex:switchToAndReleaseMe(_num)"},
{ "trigger": ":switchToAndReleaseMe\tCCLayerMultiplex:switchToAndReleaseMe(_num)", "contents": "switchToAndReleaseMe(_num)"},
{ "trigger": "CCLayerMultiplex_create\tCCLayerMultiplex:create()", "contents": "CCLayerMultiplex:create()"},
{ "trigger": ":create\tCCLayerMultiplex:create()", "contents": "create()"},
{ "trigger": "ccBlendFunc\t", "contents": "ccBlendFunc"},
{ "trigger": "ccBlendFunc_call\tccBlendFunc:call()", "contents": "ccBlendFunc:call()"},
{ "trigger": ":call\tccBlendFunc:call()", "contents": "call()"},
{ "trigger": "ccBlendFunc_new\tccBlendFunc:new()", "contents": "ccBlendFunc:new()"},
{ "trigger": ":new\tccBlendFunc:new()", "contents": "new()"},
{ "trigger": "ccBlendFunc_new_local\tccBlendFunc:new_local()", "contents": "ccBlendFunc:new_local()"},
{ "trigger": ":new_local\tccBlendFunc:new_local()", "contents": "new_local()"},
{ "trigger": "ccBlendFunc_delete\tccBlendFunc:delete()", "contents": "ccBlendFunc:delete()"},
{ "trigger": ":delete\tccBlendFunc:delete()", "contents": "delete()"},
{ "trigger": "CCStore\t", "contents": "CCStore"},
{ "trigger": "CCStore_isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "CCStore:isProductLoaded(_str)"},
{ "trigger": ":isProductLoaded\tCCStore:isProductLoaded(_str)", "contents": "isProductLoaded(_str)"},
{ "trigger": "CCStore_setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "CCStore:setReceiptVerifyMode(_num,_boo)"},
{ "trigger": ":setReceiptVerifyMode\tCCStore:setReceiptVerifyMode(_num,_boo)", "contents": "setReceiptVerifyMode(_num,_boo)"},
{ "trigger": "CCStore_getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "CCStore:getReceiptVerifyMode()"},
{ "trigger": ":getReceiptVerifyMode\tCCStore:getReceiptVerifyMode()", "contents": "getReceiptVerifyMode()"},
{ "trigger": "CCStore_postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "CCStore:postInitWithTransactionListenerLua(_listener)"},
{ "trigger": ":postInitWithTransactionListenerLua\tCCStore:postInitWithTransactionListenerLua(_listener)", "contents": "postInitWithTransactionListenerLua(_listener)"},
{ "trigger": "CCStore_purchase\tCCStore:purchase(_str)", "contents": "CCStore:purchase(_str)"},
{ "trigger": ":purchase\tCCStore:purchase(_str)", "contents": "purchase(_str)"},
{ "trigger": "CCStore_sharedStore\tCCStore:sharedStore()", "contents": "CCStore:sharedStore()"},
{ "trigger": ":sharedStore\tCCStore:sharedStore()", "contents": "sharedStore()"},
{ "trigger": "CCStore_cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "CCStore:cancelLoadProducts()"},
{ "trigger": ":cancelLoadProducts\tCCStore:cancelLoadProducts()", "contents": "cancelLoadProducts()"},
{ "trigger": "CCStore_getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "CCStore:getReceiptVerifyServerUrl()"},
{ "trigger": ":getReceiptVerifyServerUrl\tCCStore:getReceiptVerifyServerUrl()", "contents": "getReceiptVerifyServerUrl()"},
{ "trigger": "CCStore_canMakePurchases\tCCStore:canMakePurchases()", "contents": "CCStore:canMakePurchases()"},
{ "trigger": ":canMakePurchases\tCCStore:canMakePurchases()", "contents": "canMakePurchases()"},
{ "trigger": "CCStore_loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "CCStore:loadProductsLua(_val,_listener)"},
{ "trigger": ":loadProductsLua\tCCStore:loadProductsLua(_val,_listener)", "contents": "loadProductsLua(_val,_listener)"},
{ "trigger": "CCStore_purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "CCStore:purgeSharedStore()"},
{ "trigger": ":purgeSharedStore\tCCStore:purgeSharedStore()", "contents": "purgeSharedStore()"},
{ "trigger": "CCStore_finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "CCStore:finishTransactionLua(_str)"},
{ "trigger": ":finishTransactionLua\tCCStore:finishTransactionLua(_str)", "contents": "finishTransactionLua(_str)"},
{ "trigger": "CCStore_setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "CCStore:setReceiptVerifyServerUrl(_str)"},
{ "trigger": ":setReceiptVerifyServerUrl\tCCStore:setReceiptVerifyServerUrl(_str)", "contents": "setReceiptVerifyServerUrl(_str)"},
{ "trigger": "CCCardinalSplineBy\t", "contents": "CCCardinalSplineBy"},
{ "trigger": "CCCardinalSplineBy_create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineBy:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineBy:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCTransitionSlideInB\t", "contents": "CCTransitionSlideInB"},
{ "trigger": "CCTransitionSlideInB_create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "CCTransitionSlideInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSlideInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpawn\t", "contents": "CCSpawn"},
{ "trigger": "CCSpawn_createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSpawn:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSpawn_create\tCCSpawn:create(_CCArray)", "contents": "CCSpawn:create(_CCArray)"},
{ "trigger": ":create\tCCSpawn:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCComponentContainer\t", "contents": "CCComponentContainer"},
{ "trigger": "CCComponentContainer_isEmpty\tCCComponentContainer:isEmpty()", "contents": "CCComponentContainer:isEmpty()"},
{ "trigger": ":isEmpty\tCCComponentContainer:isEmpty()", "contents": "isEmpty()"},
{ "trigger": "CCComponentContainer_remove\tCCComponentContainer:remove(_str)", "contents": "CCComponentContainer:remove(_str)"},
{ "trigger": ":remove\tCCComponentContainer:remove(_str)", "contents": "remove(_str)"},
{ "trigger": "CCComponentContainer_get\tCCComponentContainer:get(_str)", "contents": "CCComponentContainer:get(_str)"},
{ "trigger": ":get\tCCComponentContainer:get(_str)", "contents": "get(_str)"},
{ "trigger": "CCComponentContainer_visit\tCCComponentContainer:visit(_num)", "contents": "CCComponentContainer:visit(_num)"},
{ "trigger": ":visit\tCCComponentContainer:visit(_num)", "contents": "visit(_num)"},
{ "trigger": "CCComponentContainer_add\tCCComponentContainer:add(_CCComponent)", "contents": "CCComponentContainer:add(_CCComponent)"},
{ "trigger": ":add\tCCComponentContainer:add(_CCComponent)", "contents": "add(_CCComponent)"},
{ "trigger": "CCComponentContainer_removeAll\tCCComponentContainer:removeAll()", "contents": "CCComponentContainer:removeAll()"},
{ "trigger": ":removeAll\tCCComponentContainer:removeAll()", "contents": "removeAll()"},
{ "trigger": "CCRipple3D\t", "contents": "CCRipple3D"},
{ "trigger": "CCRipple3D_create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "CCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": ":create\tCCRipple3D:create(_num,_CCSize,_CCPoint,_num,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num,_num)"},
{ "trigger": "CCEaseBounceInOut\t", "contents": "CCEaseBounceInOut"},
{ "trigger": "CCEaseBounceInOut_create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "CCEaseBounceInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCEaseElastic\t", "contents": "CCEaseElastic"},
{ "trigger": "CCEaseElastic_create\tCCEaseElastic:create(_CCActionInterval)", "contents": "CCEaseElastic:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElastic:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionSceneOriented\t", "contents": "CCTransitionSceneOriented"},
{ "trigger": "CCTransitionSceneOriented_create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "CCTransitionSceneOriented:create(_num,_CCScene,_num)"},
{ "trigger": ":create\tCCTransitionSceneOriented:create(_num,_CCScene,_num)", "contents": "create(_num,_CCScene,_num)"},
{ "trigger": "CCJumpTo\t", "contents": "CCJumpTo"},
{ "trigger": "CCJumpTo_create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "CCJumpTo:create(_num,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCJumpTo:create(_num,_CCPoint,_num,_num)", "contents": "create(_num,_CCPoint,_num,_num)"},
{ "trigger": "CCTintBy\t", "contents": "CCTintBy"},
{ "trigger": "CCTintBy_create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "CCTintBy:create(_num,_num,_num,_num)"},
{ "trigger": ":create\tCCTintBy:create(_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num)"},
{ "trigger": "CCCallFuncN\t", "contents": "CCCallFuncN"},
{ "trigger": "CCCallFuncN_create\tCCCallFuncN:create(_listener)", "contents": "CCCallFuncN:create(_listener)"},
{ "trigger": ":create\tCCCallFuncN:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCActionInstant\t", "contents": "CCActionInstant"},
{ "trigger": "CCTMXTilesetInfo\t", "contents": "CCTMXTilesetInfo"},
{ "trigger": "CCTMXTilesetInfo_call\tCCTMXTilesetInfo:call()", "contents": "CCTMXTilesetInfo:call()"},
{ "trigger": ":call\tCCTMXTilesetInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXTilesetInfo_new\tCCTMXTilesetInfo:new()", "contents": "CCTMXTilesetInfo:new()"},
{ "trigger": ":new\tCCTMXTilesetInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXTilesetInfo_new_local\tCCTMXTilesetInfo:new_local()", "contents": "CCTMXTilesetInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXTilesetInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXTilesetInfo_delete\tCCTMXTilesetInfo:delete()", "contents": "CCTMXTilesetInfo:delete()"},
{ "trigger": ":delete\tCCTMXTilesetInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXTilesetInfo_rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "CCTMXTilesetInfo:rectForGID(_num)"},
{ "trigger": ":rectForGID\tCCTMXTilesetInfo:rectForGID(_num)", "contents": "rectForGID(_num)"},
{ "trigger": "CCEaseSineOut\t", "contents": "CCEaseSineOut"},
{ "trigger": "CCEaseSineOut_create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "CCEaseSineOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCObject\t", "contents": "CCObject"},
{ "trigger": "CCObject_update\tCCObject:update(_num)", "contents": "CCObject:update(_num)"},
{ "trigger": ":update\tCCObject:update(_num)", "contents": "update(_num)"},
{ "trigger": "CCObject_autorelease\tCCObject:autorelease()", "contents": "CCObject:autorelease()"},
{ "trigger": ":autorelease\tCCObject:autorelease()", "contents": "autorelease()"},
{ "trigger": "CCObject_retain\tCCObject:retain()", "contents": "CCObject:retain()"},
{ "trigger": ":retain\tCCObject:retain()", "contents": "retain()"},
{ "trigger": "CCObject_retainCount\tCCObject:retainCount()", "contents": "CCObject:retainCount()"},
{ "trigger": ":retainCount\tCCObject:retainCount()", "contents": "retainCount()"},
{ "trigger": "CCObject_release\tCCObject:release()", "contents": "CCObject:release()"},
{ "trigger": ":release\tCCObject:release()", "contents": "release()"},
{ "trigger": "CCObject_isSingleReference\tCCObject:isSingleReference()", "contents": "CCObject:isSingleReference()"},
{ "trigger": ":isSingleReference\tCCObject:isSingleReference()", "contents": "isSingleReference()"},
{ "trigger": "CCObject_copy\tCCObject:copy()", "contents": "CCObject:copy()"},
{ "trigger": ":copy\tCCObject:copy()", "contents": "copy()"},
{ "trigger": "RGBA\t", "contents": "RGBA"},
{ "trigger": "CCControlButton\t", "contents": "CCControlButton"},
{ "trigger": "CCControlButton_getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "CCControlButton:getLabelAnchorPoint()"},
{ "trigger": ":getLabelAnchorPoint\tCCControlButton:getLabelAnchorPoint()", "contents": "getLabelAnchorPoint()"},
{ "trigger": "CCControlButton_getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "CCControlButton:getTitleBMFontForState(_num)"},
{ "trigger": ":getTitleBMFontForState\tCCControlButton:getTitleBMFontForState(_num)", "contents": "getTitleBMFontForState(_num)"},
{ "trigger": "CCControlButton_setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "CCControlButton:setTitleTTFForState(_str,_num)"},
{ "trigger": ":setTitleTTFForState\tCCControlButton:setTitleTTFForState(_str,_num)", "contents": "setTitleTTFForState(_str,_num)"},
{ "trigger": "CCControlButton_getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "CCControlButton:getTitleLabel()"},
{ "trigger": ":getTitleLabel\tCCControlButton:getTitleLabel()", "contents": "getTitleLabel()"},
{ "trigger": "CCControlButton_getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "CCControlButton:getTitleLabelForState(_num)"},
{ "trigger": ":getTitleLabelForState\tCCControlButton:getTitleLabelForState(_num)", "contents": "getTitleLabelForState(_num)"},
{ "trigger": "CCControlButton_doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "CCControlButton:doesAdjustBackgroundImage()"},
{ "trigger": ":doesAdjustBackgroundImage\tCCControlButton:doesAdjustBackgroundImage()", "contents": "doesAdjustBackgroundImage()"},
{ "trigger": "CCControlButton_setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "CCControlButton:setTitleLabelForState(_CCNode,_num)"},
{ "trigger": ":setTitleLabelForState\tCCControlButton:setTitleLabelForState(_CCNode,_num)", "contents": "setTitleLabelForState(_CCNode,_num)"},
{ "trigger": "CCControlButton_setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "CCControlButton:setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": ":setTitleColorForState\tCCControlButton:setTitleColorForState(_ccColor3B,_num)", "contents": "setTitleColorForState(_ccColor3B,_num)"},
{ "trigger": "CCControlButton_setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "CCControlButton:setTitleTTFSizeForState(_num,_num)"},
{ "trigger": ":setTitleTTFSizeForState\tCCControlButton:setTitleTTFSizeForState(_num,_num)", "contents": "setTitleTTFSizeForState(_num,_num)"},
{ "trigger": "CCControlButton_getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "CCControlButton:getTitleTTFSizeForState(_num)"},
{ "trigger": ":getTitleTTFSizeForState\tCCControlButton:getTitleTTFSizeForState(_num)", "contents": "getTitleTTFSizeForState(_num)"},
{ "trigger": "CCControlButton_getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "CCControlButton:getZoomOnTouchDown()"},
{ "trigger": ":getZoomOnTouchDown\tCCControlButton:getZoomOnTouchDown()", "contents": "getZoomOnTouchDown()"},
{ "trigger": "CCControlButton_getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "CCControlButton:getTitleForState(_num)"},
{ "trigger": ":getTitleForState\tCCControlButton:getTitleForState(_num)", "contents": "getTitleForState(_num)"},
{ "trigger": "CCControlButton_getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "CCControlButton:getTitleTTFForState(_num)"},
{ "trigger": ":getTitleTTFForState\tCCControlButton:getTitleTTFForState(_num)", "contents": "getTitleTTFForState(_num)"},
{ "trigger": "CCControlButton_getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "CCControlButton:getBackgroundSpriteForState(_num)"},
{ "trigger": ":getBackgroundSpriteForState\tCCControlButton:getBackgroundSpriteForState(_num)", "contents": "getBackgroundSpriteForState(_num)"},
{ "trigger": "CCControlButton_getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "CCControlButton:getVerticalMargin()"},
{ "trigger": ":getVerticalMargin\tCCControlButton:getVerticalMargin()", "contents": "getVerticalMargin()"},
{ "trigger": "CCControlButton_setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "CCControlButton:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCControlButton:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCControlButton_setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "CCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": ":setBackgroundSpriteForState\tCCControlButton:setBackgroundSpriteForState(_CCScale9Sprite,_num)", "contents": "setBackgroundSpriteForState(_CCScale9Sprite,_num)"},
{ "trigger": "CCControlButton_getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "CCControlButton:getHorizontalOrigin()"},
{ "trigger": ":getHorizontalOrigin\tCCControlButton:getHorizontalOrigin()", "contents": "getHorizontalOrigin()"},
{ "trigger": "CCControlButton_getCurrentTitle\tCCControlButton:getCurrentTitle()", "contents": "CCControlButton:getCurrentTitle()"},
{ "trigger": ":getCurrentTitle\tCCControlButton:getCurrentTitle()", "contents": "getCurrentTitle()"},
{ "trigger": "CCControlButton_setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "CCControlButton:setMargins(_num,_num)"},
{ "trigger": ":setMargins\tCCControlButton:setMargins(_num,_num)", "contents": "setMargins(_num,_num)"},
{ "trigger": "CCControlButton_isPushed\tCCControlButton:isPushed()", "contents": "CCControlButton:isPushed()"},
{ "trigger": ":isPushed\tCCControlButton:isPushed()", "contents": "isPushed()"},
{ "trigger": "CCControlButton_setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "CCControlButton:setAdjustBackgroundImage(_boo)"},
{ "trigger": ":setAdjustBackgroundImage\tCCControlButton:setAdjustBackgroundImage(_boo)", "contents": "setAdjustBackgroundImage(_boo)"},
{ "trigger": "CCControlButton_getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "CCControlButton:getBackgroundSprite()"},
{ "trigger": ":getBackgroundSprite\tCCControlButton:getBackgroundSprite()", "contents": "getBackgroundSprite()"},
{ "trigger": "CCControlButton_create\tCCControlButton:create()", "contents": "CCControlButton:create()"},
{ "trigger": ":create\tCCControlButton:create()", "contents": "create()"},
{ "trigger": "CCControlButton_setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "CCControlButton:setTitleBMFontForState(_str,_num)"},
{ "trigger": ":setTitleBMFontForState\tCCControlButton:setTitleBMFontForState(_str,_num)", "contents": "setTitleBMFontForState(_str,_num)"},
{ "trigger": "CCControlButton_setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "CCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": ":setBackgroundSpriteFrameForState\tCCControlButton:setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)", "contents": "setBackgroundSpriteFrameForState(_CCSpriteFrame,_num)"},
{ "trigger": "CCControlButton_setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "CCControlButton:setTitleForState(_CCString,_num)"},
{ "trigger": ":setTitleForState\tCCControlButton:setTitleForState(_CCString,_num)", "contents": "setTitleForState(_CCString,_num)"},
{ "trigger": "CCControlButton_getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "CCControlButton:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCControlButton:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCControlButton_getCurrentTitleColor\tCCControlButton:getCurrentTitleColor()", "contents": "CCControlButton:getCurrentTitleColor()"},
{ "trigger": ":getCurrentTitleColor\tCCControlButton:getCurrentTitleColor()", "contents": "getCurrentTitleColor()"},
{ "trigger": "CCControlButton_getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "CCControlButton:getTitleColorForState(_num)"},
{ "trigger": ":getTitleColorForState\tCCControlButton:getTitleColorForState(_num)", "contents": "getTitleColorForState(_num)"},
{ "trigger": "CCControl\t", "contents": "CCControl"},
{ "trigger": "CCControl_getState\tCCControl:getState()", "contents": "CCControl:getState()"},
{ "trigger": ":getState\tCCControl:getState()", "contents": "getState()"},
{ "trigger": "CCControl_setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "CCControl:setHighlighted(_boo)"},
{ "trigger": ":setHighlighted\tCCControl:setHighlighted(_boo)", "contents": "setHighlighted(_boo)"},
{ "trigger": "CCControl_removeHandleOfControlEvent\tCCControl:removeHandleOfControlEvent(_num)", "contents": "CCControl:removeHandleOfControlEvent(_num)"},
{ "trigger": ":removeHandleOfControlEvent\tCCControl:removeHandleOfControlEvent(_num)", "contents": "removeHandleOfControlEvent(_num)"},
{ "trigger": "CCControl_isOpacityModifyRGB\tCCControl:isOpacityModifyRGB()", "contents": "CCControl:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCControl:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCControl_hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "CCControl:hasVisibleParents()"},
{ "trigger": ":hasVisibleParents\tCCControl:hasVisibleParents()", "contents": "hasVisibleParents()"},
{ "trigger": "CCControl_setOpacityModifyRGB\tCCControl:setOpacityModifyRGB(_boo)", "contents": "CCControl:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCControl:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCControl_isEnabled\tCCControl:isEnabled()", "contents": "CCControl:isEnabled()"},
{ "trigger": ":isEnabled\tCCControl:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCControl_isHighlighted\tCCControl:isHighlighted()", "contents": "CCControl:isHighlighted()"},
{ "trigger": ":isHighlighted\tCCControl:isHighlighted()", "contents": "isHighlighted()"},
{ "trigger": "CCControl_addHandleOfControlEvent\tCCControl:addHandleOfControlEvent(_listener,_num)", "contents": "CCControl:addHandleOfControlEvent(_listener,_num)"},
{ "trigger": ":addHandleOfControlEvent\tCCControl:addHandleOfControlEvent(_listener,_num)", "contents": "addHandleOfControlEvent(_listener,_num)"},
{ "trigger": "CCControl_isSelected\tCCControl:isSelected()", "contents": "CCControl:isSelected()"},
{ "trigger": ":isSelected\tCCControl:isSelected()", "contents": "isSelected()"},
{ "trigger": "CCControl_setEnabled\tCCControl:setEnabled(_boo)", "contents": "CCControl:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCControl:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCControl_sendActionsForControlEvents\tCCControl:sendActionsForControlEvents(_num)", "contents": "CCControl:sendActionsForControlEvents(_num)"},
{ "trigger": ":sendActionsForControlEvents\tCCControl:sendActionsForControlEvents(_num)", "contents": "sendActionsForControlEvents(_num)"},
{ "trigger": "CCControl_setSelected\tCCControl:setSelected(_boo)", "contents": "CCControl:setSelected(_boo)"},
{ "trigger": ":setSelected\tCCControl:setSelected(_boo)", "contents": "setSelected(_boo)"},
{ "trigger": "CCEaseBackOut\t", "contents": "CCEaseBackOut"},
{ "trigger": "CCEaseBackOut_create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "CCEaseBackOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCActionInterval\t", "contents": "CCActionInterval"},
{ "trigger": "CCActionInterval_copy\tCCActionInterval:copy()", "contents": "CCActionInterval:copy()"},
{ "trigger": ":copy\tCCActionInterval:copy()", "contents": "copy()"},
{ "trigger": "tolua\t", "contents": "tolua"},
{ "trigger": "tolua_getpeer\ttolua.getpeer()", "contents": "tolua.getpeer()"},
{ "trigger": "tolua_cast\ttolua.cast()", "contents": "tolua.cast()"},
{ "trigger": "tolua_isnull\ttolua.isnull()", "contents": "tolua.isnull()"},
{ "trigger": "tolua_releaseownership\ttolua.releaseownership()", "contents": "tolua.releaseownership()"},
{ "trigger": "tolua_takeownership\ttolua.takeownership()", "contents": "tolua.takeownership()"},
{ "trigger": "tolua_setpeer\ttolua.setpeer()", "contents": "tolua.setpeer()"},
{ "trigger": "tolua_inherit\ttolua.inherit()", "contents": "tolua.inherit()"},
{ "trigger": "tolua_type\ttolua.type()", "contents": "tolua.type()"},
{ "trigger": "CCControlSwitch\t", "contents": "CCControlSwitch"},
{ "trigger": "CCControlSwitch_isOn\tCCControlSwitch:isOn()", "contents": "CCControlSwitch:isOn()"},
{ "trigger": ":isOn\tCCControlSwitch:isOn()", "contents": "isOn()"},
{ "trigger": "CCControlSwitch_setOn\tCCControlSwitch:setOn(_boo)", "contents": "CCControlSwitch:setOn(_boo)"},
{ "trigger": ":setOn\tCCControlSwitch:setOn(_boo)", "contents": "setOn(_boo)"},
{ "trigger": "CCControlSwitch_create\tCCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)", "contents": "CCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)"},
{ "trigger": ":create\tCCControlSwitch:create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)", "contents": "create(_CCSprite,_CCSprite,_CCSprite,_CCSprite)"},
{ "trigger": "CCControlSwitch_hasMoved\tCCControlSwitch:hasMoved()", "contents": "CCControlSwitch:hasMoved()"},
{ "trigger": ":hasMoved\tCCControlSwitch:hasMoved()", "contents": "hasMoved()"},
{ "trigger": "CCFadeOut\t", "contents": "CCFadeOut"},
{ "trigger": "CCFadeOut_create\tCCFadeOut:create(_num)", "contents": "CCFadeOut:create(_num)"},
{ "trigger": ":create\tCCFadeOut:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCEaseExponentialOut\t", "contents": "CCEaseExponentialOut"},
{ "trigger": "CCEaseExponentialOut_create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "CCEaseExponentialOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleSystemQuad\t", "contents": "CCParticleSystemQuad"},
{ "trigger": "CCParticleSystemQuad_call\tCCParticleSystemQuad:call()", "contents": "CCParticleSystemQuad:call()"},
{ "trigger": ":call\tCCParticleSystemQuad:call()", "contents": "call()"},
{ "trigger": "CCParticleSystemQuad_createWithTotalParticles\tCCParticleSystemQuad:createWithTotalParticles(_num)", "contents": "CCParticleSystemQuad:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSystemQuad:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_initIndices\tCCParticleSystemQuad:initIndices()", "contents": "CCParticleSystemQuad:initIndices()"},
{ "trigger": ":initIndices\tCCParticleSystemQuad:initIndices()", "contents": "initIndices()"},
{ "trigger": "CCParticleSystemQuad_setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)", "contents": "CCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)"},
{ "trigger": ":setTextureWithRect\tCCParticleSystemQuad:setTextureWithRect(_CCTexture2D,_CCRect)", "contents": "setTextureWithRect(_CCTexture2D,_CCRect)"},
{ "trigger": "CCParticleSystemQuad_updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "CCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": ":updateQuadWithParticle\tCCParticleSystemQuad:updateQuadWithParticle(_tCCParticle,_const_CCPoint)", "contents": "updateQuadWithParticle(_tCCParticle,_const_CCPoint)"},
{ "trigger": "CCParticleSystemQuad_create\tCCParticleSystemQuad:create()", "contents": "CCParticleSystemQuad:create()"},
{ "trigger": ":create\tCCParticleSystemQuad:create()", "contents": "create()"},
{ "trigger": "CCParticleSystemQuad_setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "CCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisplayFrame\tCCParticleSystemQuad:setDisplayFrame(_CCSpriteFrame)", "contents": "setDisplayFrame(_CCSpriteFrame)"},
{ "trigger": "CCParticleSystemQuad_initWithTotalParticles\tCCParticleSystemQuad:initWithTotalParticles(_num)", "contents": "CCParticleSystemQuad:initWithTotalParticles(_num)"},
{ "trigger": ":initWithTotalParticles\tCCParticleSystemQuad:initWithTotalParticles(_num)", "contents": "initWithTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "CCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)"},
{ "trigger": ":setBatchNode\tCCParticleSystemQuad:setBatchNode(_CCParticleBatchNode)", "contents": "setBatchNode(_CCParticleBatchNode)"},
{ "trigger": "CCParticleSystemQuad_new\tCCParticleSystemQuad:new()", "contents": "CCParticleSystemQuad:new()"},
{ "trigger": ":new\tCCParticleSystemQuad:new()", "contents": "new()"},
{ "trigger": "CCParticleSystemQuad_setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "CCParticleSystemQuad:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleSystemQuad:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleSystemQuad_setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "CCParticleSystemQuad:setTotalParticles(_num)"},
{ "trigger": ":setTotalParticles\tCCParticleSystemQuad:setTotalParticles(_num)", "contents": "setTotalParticles(_num)"},
{ "trigger": "CCParticleSystemQuad_new_local\tCCParticleSystemQuad:new_local()", "contents": "CCParticleSystemQuad:new_local()"},
{ "trigger": ":new_local\tCCParticleSystemQuad:new_local()", "contents": "new_local()"},
{ "trigger": "CCParticleSystemQuad_delete\tCCParticleSystemQuad:delete()", "contents": "CCParticleSystemQuad:delete()"},
{ "trigger": ":delete\tCCParticleSystemQuad:delete()", "contents": "delete()"},
{ "trigger": "CCParticleSystemQuad_initTexCoordsWithRect\tCCParticleSystemQuad:initTexCoordsWithRect(_CCRect)", "contents": "CCParticleSystemQuad:initTexCoordsWithRect(_CCRect)"},
{ "trigger": ":initTexCoordsWithRect\tCCParticleSystemQuad:initTexCoordsWithRect(_CCRect)", "contents": "initTexCoordsWithRect(_CCRect)"},
{ "trigger": "CCMenu\t", "contents": "CCMenu"},
{ "trigger": "CCMenu_createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "CCMenu:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCMenu:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCMenu_alignItemsInRowsWithArray\tCCMenu:alignItemsInRowsWithArray(_CCArray)", "contents": "CCMenu:alignItemsInRowsWithArray(_CCArray)"},
{ "trigger": ":alignItemsInRowsWithArray\tCCMenu:alignItemsInRowsWithArray(_CCArray)", "contents": "alignItemsInRowsWithArray(_CCArray)"},
{ "trigger": "CCMenu_isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "CCMenu:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCMenu:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCMenu_createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "CCMenu:createWithItem(_CCMenuItem)"},
{ "trigger": ":createWithItem\tCCMenu:createWithItem(_CCMenuItem)", "contents": "createWithItem(_CCMenuItem)"},
{ "trigger": "CCMenu_alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "CCMenu:alignItemsHorizontally()"},
{ "trigger": ":alignItemsHorizontally\tCCMenu:alignItemsHorizontally()", "contents": "alignItemsHorizontally()"},
{ "trigger": "CCMenu_alignItemsInColumnsWithArray\tCCMenu:alignItemsInColumnsWithArray(_CCArray)", "contents": "CCMenu:alignItemsInColumnsWithArray(_CCArray)"},
{ "trigger": ":alignItemsInColumnsWithArray\tCCMenu:alignItemsInColumnsWithArray(_CCArray)", "contents": "alignItemsInColumnsWithArray(_CCArray)"},
{ "trigger": "CCMenu_create\tCCMenu:create()", "contents": "CCMenu:create()"},
{ "trigger": ":create\tCCMenu:create()", "contents": "create()"},
{ "trigger": "CCMenu_setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "CCMenu:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCMenu:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCMenu_isEnabled\tCCMenu:isEnabled()", "contents": "CCMenu:isEnabled()"},
{ "trigger": ":isEnabled\tCCMenu:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCMenu_alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "CCMenu:alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": ":alignItemsHorizontallyWithPadding\tCCMenu:alignItemsHorizontallyWithPadding(_num)", "contents": "alignItemsHorizontallyWithPadding(_num)"},
{ "trigger": "CCMenu_setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "CCMenu:setHandlerPriority(_num)"},
{ "trigger": ":setHandlerPriority\tCCMenu:setHandlerPriority(_num)", "contents": "setHandlerPriority(_num)"},
{ "trigger": "CCMenu_alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "CCMenu:alignItemsVertically()"},
{ "trigger": ":alignItemsVertically\tCCMenu:alignItemsVertically()", "contents": "alignItemsVertically()"},
{ "trigger": "CCMenu_setEnabled\tCCMenu:setEnabled(_boo)", "contents": "CCMenu:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCMenu:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCMenu_alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "CCMenu:alignItemsVerticallyWithPadding(_num)"},
{ "trigger": ":alignItemsVerticallyWithPadding\tCCMenu:alignItemsVerticallyWithPadding(_num)", "contents": "alignItemsVerticallyWithPadding(_num)"},
{ "trigger": "CCDictionary\t", "contents": "CCDictionary"},
{ "trigger": "CCDictionary_writeToFile\tCCDictionary:writeToFile(_str)", "contents": "CCDictionary:writeToFile(_str)"},
{ "trigger": ":writeToFile\tCCDictionary:writeToFile(_str)", "contents": "writeToFile(_str)"},
{ "trigger": "CCDictionary_count\tCCDictionary:count()", "contents": "CCDictionary:count()"},
{ "trigger": ":count\tCCDictionary:count()", "contents": "count()"},
{ "trigger": "CCDictionary_removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "CCDictionary:removeObjectsForKeys(_CCArray)"},
{ "trigger": ":removeObjectsForKeys\tCCDictionary:removeObjectsForKeys(_CCArray)", "contents": "removeObjectsForKeys(_CCArray)"},
{ "trigger": "CCDictionary_removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "CCDictionary:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCDictionary:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCDictionary_objectForKey\tCCDictionary:objectForKey(_num)", "contents": "CCDictionary:objectForKey(_num)"},
{ "trigger": ":objectForKey\tCCDictionary:objectForKey(_num)", "contents": "objectForKey(_num)"},
{ "trigger": "CCDictionary_allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "CCDictionary:allKeysForObject(_CCObject)"},
{ "trigger": ":allKeysForObject\tCCDictionary:allKeysForObject(_CCObject)", "contents": "allKeysForObject(_CCObject)"},
{ "trigger": "CCDictionary_create\tCCDictionary:create()", "contents": "CCDictionary:create()"},
{ "trigger": ":create\tCCDictionary:create()", "contents": "create()"},
{ "trigger": "CCDictionary_createWithContentsOfFileThreadSafe\tCCDictionary:createWithContentsOfFileThreadSafe(_str)", "contents": "CCDictionary:createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": ":createWithContentsOfFileThreadSafe\tCCDictionary:createWithContentsOfFileThreadSafe(_str)", "contents": "createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": "CCDictionary_createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "CCDictionary:createWithDictionary(_CCDictionary)"},
{ "trigger": ":createWithDictionary\tCCDictionary:createWithDictionary(_CCDictionary)", "contents": "createWithDictionary(_CCDictionary)"},
{ "trigger": "CCDictionary_allKeys\tCCDictionary:allKeys()", "contents": "CCDictionary:allKeys()"},
{ "trigger": ":allKeys\tCCDictionary:allKeys()", "contents": "allKeys()"},
{ "trigger": "CCDictionary_removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "CCDictionary:removeObjectForKey(_num)"},
{ "trigger": ":removeObjectForKey\tCCDictionary:removeObjectForKey(_num)", "contents": "removeObjectForKey(_num)"},
{ "trigger": "CCDictionary_setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "CCDictionary:setObject(_CCObject,_num)"},
{ "trigger": ":setObject\tCCDictionary:setObject(_CCObject,_num)", "contents": "setObject(_CCObject,_num)"},
{ "trigger": "CCDictionary_valueForKey\tCCDictionary:valueForKey(_num)", "contents": "CCDictionary:valueForKey(_num)"},
{ "trigger": ":valueForKey\tCCDictionary:valueForKey(_num)", "contents": "valueForKey(_num)"},
{ "trigger": "CCDictionary_randomObject\tCCDictionary:randomObject()", "contents": "CCDictionary:randomObject()"},
{ "trigger": ":randomObject\tCCDictionary:randomObject()", "contents": "randomObject()"},
{ "trigger": "CCDictionary_createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "CCDictionary:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCDictionary:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCRepeatForever\t", "contents": "CCRepeatForever"},
{ "trigger": "CCRepeatForever_create\tCCRepeatForever:create(_CCActionInterval)", "contents": "CCRepeatForever:create(_CCActionInterval)"},
{ "trigger": ":create\tCCRepeatForever:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFlipAngular\t", "contents": "CCTransitionFlipAngular"},
{ "trigger": "CCTransitionFlipAngular_create\tCCTransitionFlipAngular:create(_num,_CCScene)", "contents": "CCTransitionFlipAngular:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipAngular:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCRotateTo\t", "contents": "CCRotateTo"},
{ "trigger": "CCRotateTo_create\tCCRotateTo:create(_num,_num)", "contents": "CCRotateTo:create(_num,_num)"},
{ "trigger": ":create\tCCRotateTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCPhysicsShape\t", "contents": "CCPhysicsShape"},
{ "trigger": "CCPhysicsShape_setCollisionType\tCCPhysicsShape:setCollisionType(_num)", "contents": "CCPhysicsShape:setCollisionType(_num)"},
{ "trigger": ":setCollisionType\tCCPhysicsShape:setCollisionType(_num)", "contents": "setCollisionType(_num)"},
{ "trigger": "CCPhysicsShape_getCollisionGroup\tCCPhysicsShape:getCollisionGroup()", "contents": "CCPhysicsShape:getCollisionGroup()"},
{ "trigger": ":getCollisionGroup\tCCPhysicsShape:getCollisionGroup()", "contents": "getCollisionGroup()"},
{ "trigger": "CCPhysicsShape_setCollisionGroup\tCCPhysicsShape:setCollisionGroup(_num)", "contents": "CCPhysicsShape:setCollisionGroup(_num)"},
{ "trigger": ":setCollisionGroup\tCCPhysicsShape:setCollisionGroup(_num)", "contents": "setCollisionGroup(_num)"},
{ "trigger": "CCPhysicsShape_isSensor\tCCPhysicsShape:isSensor()", "contents": "CCPhysicsShape:isSensor()"},
{ "trigger": ":isSensor\tCCPhysicsShape:isSensor()", "contents": "isSensor()"},
{ "trigger": "CCPhysicsShape_setElasticity\tCCPhysicsShape:setElasticity(_num)", "contents": "CCPhysicsShape:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsShape:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsShape_setCollisionLayers\tCCPhysicsShape:setCollisionLayers(_num)", "contents": "CCPhysicsShape:setCollisionLayers(_num)"},
{ "trigger": ":setCollisionLayers\tCCPhysicsShape:setCollisionLayers(_num)", "contents": "setCollisionLayers(_num)"},
{ "trigger": "CCPhysicsShape_setIsSensor\tCCPhysicsShape:setIsSensor(_boo)", "contents": "CCPhysicsShape:setIsSensor(_boo)"},
{ "trigger": ":setIsSensor\tCCPhysicsShape:setIsSensor(_boo)", "contents": "setIsSensor(_boo)"},
{ "trigger": "CCPhysicsShape_getCollisionLayers\tCCPhysicsShape:getCollisionLayers()", "contents": "CCPhysicsShape:getCollisionLayers()"},
{ "trigger": ":getCollisionLayers\tCCPhysicsShape:getCollisionLayers()", "contents": "getCollisionLayers()"},
{ "trigger": "CCPhysicsShape_getCollisionType\tCCPhysicsShape:getCollisionType()", "contents": "CCPhysicsShape:getCollisionType()"},
{ "trigger": ":getCollisionType\tCCPhysicsShape:getCollisionType()", "contents": "getCollisionType()"},
{ "trigger": "CCPhysicsShape_getFriction\tCCPhysicsShape:getFriction()", "contents": "CCPhysicsShape:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsShape:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsShape_getElasticity\tCCPhysicsShape:getElasticity()", "contents": "CCPhysicsShape:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsShape:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsShape_setFriction\tCCPhysicsShape:setFriction(_num)", "contents": "CCPhysicsShape:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsShape:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCTransitionSplitRows\t", "contents": "CCTransitionSplitRows"},
{ "trigger": "CCTransitionSplitRows_create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "CCTransitionSplitRows:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitRows:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLayerGradient\t", "contents": "CCLayerGradient"},
{ "trigger": "CCLayerGradient_getEndColor\tCCLayerGradient:getEndColor()", "contents": "CCLayerGradient:getEndColor()"},
{ "trigger": ":getEndColor\tCCLayerGradient:getEndColor()", "contents": "getEndColor()"},
{ "trigger": "CCLayerGradient_getVector\tCCLayerGradient:getVector()", "contents": "CCLayerGradient:getVector()"},
{ "trigger": ":getVector\tCCLayerGradient:getVector()", "contents": "getVector()"},
{ "trigger": "CCLayerGradient_getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "CCLayerGradient:getEndOpacity()"},
{ "trigger": ":getEndOpacity\tCCLayerGradient:getEndOpacity()", "contents": "getEndOpacity()"},
{ "trigger": "CCLayerGradient_isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "CCLayerGradient:isCompressedInterpolation()"},
{ "trigger": ":isCompressedInterpolation\tCCLayerGradient:isCompressedInterpolation()", "contents": "isCompressedInterpolation()"},
{ "trigger": "CCLayerGradient_setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "CCLayerGradient:setStartColor(_ccColor3B)"},
{ "trigger": ":setStartColor\tCCLayerGradient:setStartColor(_ccColor3B)", "contents": "setStartColor(_ccColor3B)"},
{ "trigger": "CCLayerGradient_create\tCCLayerGradient:create()", "contents": "CCLayerGradient:create()"},
{ "trigger": ":create\tCCLayerGradient:create()", "contents": "create()"},
{ "trigger": "CCLayerGradient_setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "CCLayerGradient:setVector(_CCPoint)"},
{ "trigger": ":setVector\tCCLayerGradient:setVector(_CCPoint)", "contents": "setVector(_CCPoint)"},
{ "trigger": "CCLayerGradient_getStartColor\tCCLayerGradient:getStartColor()", "contents": "CCLayerGradient:getStartColor()"},
{ "trigger": ":getStartColor\tCCLayerGradient:getStartColor()", "contents": "getStartColor()"},
{ "trigger": "CCLayerGradient_getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "CCLayerGradient:getStartOpacity()"},
{ "trigger": ":getStartOpacity\tCCLayerGradient:getStartOpacity()", "contents": "getStartOpacity()"},
{ "trigger": "CCLayerGradient_setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "CCLayerGradient:setCompressedInterpolation(_boo)"},
{ "trigger": ":setCompressedInterpolation\tCCLayerGradient:setCompressedInterpolation(_boo)", "contents": "setCompressedInterpolation(_boo)"},
{ "trigger": "CCLayerGradient_setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "CCLayerGradient:setStartOpacity(_num)"},
{ "trigger": ":setStartOpacity\tCCLayerGradient:setStartOpacity(_num)", "contents": "setStartOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "CCLayerGradient:setEndOpacity(_num)"},
{ "trigger": ":setEndOpacity\tCCLayerGradient:setEndOpacity(_num)", "contents": "setEndOpacity(_num)"},
{ "trigger": "CCLayerGradient_setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "CCLayerGradient:setEndColor(_ccColor3B)"},
{ "trigger": ":setEndColor\tCCLayerGradient:setEndColor(_ccColor3B)", "contents": "setEndColor(_ccColor3B)"},
{ "trigger": "CCSkewTo\t", "contents": "CCSkewTo"},
{ "trigger": "CCSkewTo_create\tCCSkewTo:create(_num,_num,_num)", "contents": "CCSkewTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCProfilingTimer\t", "contents": "CCProfilingTimer"},
{ "trigger": "CCProfilingTimer_getStartTime\tCCProfilingTimer:getStartTime()", "contents": "CCProfilingTimer:getStartTime()"},
{ "trigger": ":getStartTime\tCCProfilingTimer:getStartTime()", "contents": "getStartTime()"},
{ "trigger": "CCProfilingTimer_getAverageTime\tCCProfilingTimer:getAverageTime()", "contents": "CCProfilingTimer:getAverageTime()"},
{ "trigger": ":getAverageTime\tCCProfilingTimer:getAverageTime()", "contents": "getAverageTime()"},
{ "trigger": "CCProfilingTimer_reset\tCCProfilingTimer:reset()", "contents": "CCProfilingTimer:reset()"},
{ "trigger": ":reset\tCCProfilingTimer:reset()", "contents": "reset()"},
{ "trigger": "CCProfilingTimer_setAverageTime\tCCProfilingTimer:setAverageTime(_num)", "contents": "CCProfilingTimer:setAverageTime(_num)"},
{ "trigger": ":setAverageTime\tCCProfilingTimer:setAverageTime(_num)", "contents": "setAverageTime(_num)"},
{ "trigger": "CCParticleFireworks\t", "contents": "CCParticleFireworks"},
{ "trigger": "CCParticleFireworks_createWithTotalParticles\tCCParticleFireworks:createWithTotalParticles(_num)", "contents": "CCParticleFireworks:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFireworks:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFireworks_create\tCCParticleFireworks:create()", "contents": "CCParticleFireworks:create()"},
{ "trigger": ":create\tCCParticleFireworks:create()", "contents": "create()"},
{ "trigger": "CCBAnimationManager\t", "contents": "CCBAnimationManager"},
{ "trigger": "CCBAnimationManager_call\tCCBAnimationManager:call()", "contents": "CCBAnimationManager:call()"},
{ "trigger": ":call\tCCBAnimationManager:call()", "contents": "call()"},
{ "trigger": "CCBAnimationManager_getDocumentCallbackNodes\tCCBAnimationManager:getDocumentCallbackNodes()", "contents": "CCBAnimationManager:getDocumentCallbackNodes()"},
{ "trigger": ":getDocumentCallbackNodes\tCCBAnimationManager:getDocumentCallbackNodes()", "contents": "getDocumentCallbackNodes()"},
{ "trigger": "CCBAnimationManager_getAutoPlaySequenceId\tCCBAnimationManager:getAutoPlaySequenceId()", "contents": "CCBAnimationManager:getAutoPlaySequenceId()"},
{ "trigger": ":getAutoPlaySequenceId\tCCBAnimationManager:getAutoPlaySequenceId()", "contents": "getAutoPlaySequenceId()"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceNamed\tCCBAnimationManager:runAnimationsForSequenceNamed(_str)", "contents": "CCBAnimationManager:runAnimationsForSequenceNamed(_str)"},
{ "trigger": ":runAnimationsForSequenceNamed\tCCBAnimationManager:runAnimationsForSequenceNamed(_str)", "contents": "runAnimationsForSequenceNamed(_str)"},
{ "trigger": "CCBAnimationManager_getKeyframeCallbacks\tCCBAnimationManager:getKeyframeCallbacks()", "contents": "CCBAnimationManager:getKeyframeCallbacks()"},
{ "trigger": ":getKeyframeCallbacks\tCCBAnimationManager:getKeyframeCallbacks()", "contents": "getKeyframeCallbacks()"},
{ "trigger": "CCBAnimationManager_setRootNode\tCCBAnimationManager:setRootNode(_CCNode)", "contents": "CCBAnimationManager:setRootNode(_CCNode)"},
{ "trigger": ":setRootNode\tCCBAnimationManager:setRootNode(_CCNode)", "contents": "setRootNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_debug\tCCBAnimationManager:debug()", "contents": "CCBAnimationManager:debug()"},
{ "trigger": ":debug\tCCBAnimationManager:debug()", "contents": "debug()"},
{ "trigger": "CCBAnimationManager_getRootContainerSize\tCCBAnimationManager:getRootContainerSize()", "contents": "CCBAnimationManager:getRootContainerSize()"},
{ "trigger": ":getRootContainerSize\tCCBAnimationManager:getRootContainerSize()", "contents": "getRootContainerSize()"},
{ "trigger": "CCBAnimationManager_getLastCompletedSequenceName\tCCBAnimationManager:getLastCompletedSequenceName()", "contents": "CCBAnimationManager:getLastCompletedSequenceName()"},
{ "trigger": ":getLastCompletedSequenceName\tCCBAnimationManager:getLastCompletedSequenceName()", "contents": "getLastCompletedSequenceName()"},
{ "trigger": "CCBAnimationManager_getRootNode\tCCBAnimationManager:getRootNode()", "contents": "CCBAnimationManager:getRootNode()"},
{ "trigger": ":getRootNode\tCCBAnimationManager:getRootNode()", "contents": "getRootNode()"},
{ "trigger": "CCBAnimationManager_getDocumentOutletNames\tCCBAnimationManager:getDocumentOutletNames()", "contents": "CCBAnimationManager:getDocumentOutletNames()"},
{ "trigger": ":getDocumentOutletNames\tCCBAnimationManager:getDocumentOutletNames()", "contents": "getDocumentOutletNames()"},
{ "trigger": "CCBAnimationManager_getContainerSize\tCCBAnimationManager:getContainerSize(_CCNode)", "contents": "CCBAnimationManager:getContainerSize(_CCNode)"},
{ "trigger": ":getContainerSize\tCCBAnimationManager:getContainerSize(_CCNode)", "contents": "getContainerSize(_CCNode)"},
{ "trigger": "CCBAnimationManager_setDocumentControllerName\tCCBAnimationManager:setDocumentControllerName(_cpp)", "contents": "CCBAnimationManager:setDocumentControllerName(_cpp)"},
{ "trigger": ":setDocumentControllerName\tCCBAnimationManager:setDocumentControllerName(_cpp)", "contents": "setDocumentControllerName(_cpp)"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceNamedTweenDuration\tCCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)", "contents": "CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)"},
{ "trigger": ":runAnimationsForSequenceNamedTweenDuration\tCCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(_str,_num)", "contents": "runAnimationsForSequenceNamedTweenDuration(_str,_num)"},
{ "trigger": "CCBAnimationManager_delete\tCCBAnimationManager:delete()", "contents": "CCBAnimationManager:delete()"},
{ "trigger": ":delete\tCCBAnimationManager:delete()", "contents": "delete()"},
{ "trigger": "CCBAnimationManager_setAutoPlaySequenceId\tCCBAnimationManager:setAutoPlaySequenceId(_num)", "contents": "CCBAnimationManager:setAutoPlaySequenceId(_num)"},
{ "trigger": ":setAutoPlaySequenceId\tCCBAnimationManager:setAutoPlaySequenceId(_num)", "contents": "setAutoPlaySequenceId(_num)"},
{ "trigger": "CCBAnimationManager_setSequences\tCCBAnimationManager:setSequences(_CCArray)", "contents": "CCBAnimationManager:setSequences(_CCArray)"},
{ "trigger": ":setSequences\tCCBAnimationManager:setSequences(_CCArray)", "contents": "setSequences(_CCArray)"},
{ "trigger": "CCBAnimationManager_addDocumentCallbackNode\tCCBAnimationManager:addDocumentCallbackNode(_CCNode)", "contents": "CCBAnimationManager:addDocumentCallbackNode(_CCNode)"},
{ "trigger": ":addDocumentCallbackNode\tCCBAnimationManager:addDocumentCallbackNode(_CCNode)", "contents": "addDocumentCallbackNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_addDocumentOutletName\tCCBAnimationManager:addDocumentOutletName(_cpp)", "contents": "CCBAnimationManager:addDocumentOutletName(_cpp)"},
{ "trigger": ":addDocumentOutletName\tCCBAnimationManager:addDocumentOutletName(_cpp)", "contents": "addDocumentOutletName(_cpp)"},
{ "trigger": "CCBAnimationManager_getDocumentControllerName\tCCBAnimationManager:getDocumentControllerName()", "contents": "CCBAnimationManager:getDocumentControllerName()"},
{ "trigger": ":getDocumentControllerName\tCCBAnimationManager:getDocumentControllerName()", "contents": "getDocumentControllerName()"},
{ "trigger": "CCBAnimationManager_setBaseValue\tCCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)", "contents": "CCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)"},
{ "trigger": ":setBaseValue\tCCBAnimationManager:setBaseValue(_CCObject,_CCNode,_str)", "contents": "setBaseValue(_CCObject,_CCNode,_str)"},
{ "trigger": "CCBAnimationManager_getRunningSequenceName\tCCBAnimationManager:getRunningSequenceName()", "contents": "CCBAnimationManager:getRunningSequenceName()"},
{ "trigger": ":getRunningSequenceName\tCCBAnimationManager:getRunningSequenceName()", "contents": "getRunningSequenceName()"},
{ "trigger": "CCBAnimationManager_addDocumentOutletNode\tCCBAnimationManager:addDocumentOutletNode(_CCNode)", "contents": "CCBAnimationManager:addDocumentOutletNode(_CCNode)"},
{ "trigger": ":addDocumentOutletNode\tCCBAnimationManager:addDocumentOutletNode(_CCNode)", "contents": "addDocumentOutletNode(_CCNode)"},
{ "trigger": "CCBAnimationManager_getDocumentCallbackNames\tCCBAnimationManager:getDocumentCallbackNames()", "contents": "CCBAnimationManager:getDocumentCallbackNames()"},
{ "trigger": ":getDocumentCallbackNames\tCCBAnimationManager:getDocumentCallbackNames()", "contents": "getDocumentCallbackNames()"},
{ "trigger": "CCBAnimationManager_addDocumentCallbackName\tCCBAnimationManager:addDocumentCallbackName(_cpp)", "contents": "CCBAnimationManager:addDocumentCallbackName(_cpp)"},
{ "trigger": ":addDocumentCallbackName\tCCBAnimationManager:addDocumentCallbackName(_cpp)", "contents": "addDocumentCallbackName(_cpp)"},
{ "trigger": "CCBAnimationManager_init\tCCBAnimationManager:init()", "contents": "CCBAnimationManager:init()"},
{ "trigger": ":init\tCCBAnimationManager:init()", "contents": "init()"},
{ "trigger": "CCBAnimationManager_setRootContainerSize\tCCBAnimationManager:setRootContainerSize(_const_CCSize)", "contents": "CCBAnimationManager:setRootContainerSize(_const_CCSize)"},
{ "trigger": ":setRootContainerSize\tCCBAnimationManager:setRootContainerSize(_const_CCSize)", "contents": "setRootContainerSize(_const_CCSize)"},
{ "trigger": "CCBAnimationManager_getDocumentOutletNodes\tCCBAnimationManager:getDocumentOutletNodes()", "contents": "CCBAnimationManager:getDocumentOutletNodes()"},
{ "trigger": ":getDocumentOutletNodes\tCCBAnimationManager:getDocumentOutletNodes()", "contents": "getDocumentOutletNodes()"},
{ "trigger": "CCBAnimationManager_new\tCCBAnimationManager:new()", "contents": "CCBAnimationManager:new()"},
{ "trigger": ":new\tCCBAnimationManager:new()", "contents": "new()"},
{ "trigger": "CCBAnimationManager_addNode\tCCBAnimationManager:addNode(_CCNode,_CCDictionary)", "contents": "CCBAnimationManager:addNode(_CCNode,_CCDictionary)"},
{ "trigger": ":addNode\tCCBAnimationManager:addNode(_CCNode,_CCDictionary)", "contents": "addNode(_CCNode,_CCDictionary)"},
{ "trigger": "CCBAnimationManager_getSequences\tCCBAnimationManager:getSequences()", "contents": "CCBAnimationManager:getSequences()"},
{ "trigger": ":getSequences\tCCBAnimationManager:getSequences()", "contents": "getSequences()"},
{ "trigger": "CCBAnimationManager_setCallFuncForLuaCallbackNamed\tCCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)", "contents": "CCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)"},
{ "trigger": ":setCallFuncForLuaCallbackNamed\tCCBAnimationManager:setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)", "contents": "setCallFuncForLuaCallbackNamed(_CCCallFunc,_str)"},
{ "trigger": "CCBAnimationManager_new_local\tCCBAnimationManager:new_local()", "contents": "CCBAnimationManager:new_local()"},
{ "trigger": ":new_local\tCCBAnimationManager:new_local()", "contents": "new_local()"},
{ "trigger": "CCBAnimationManager_moveAnimationsFromNode\tCCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)", "contents": "CCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)"},
{ "trigger": ":moveAnimationsFromNode\tCCBAnimationManager:moveAnimationsFromNode(_CCNode,_CCNode)", "contents": "moveAnimationsFromNode(_CCNode,_CCNode)"},
{ "trigger": "CCBAnimationManager_runAnimationsForSequenceIdTweenDuration\tCCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)", "contents": "CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)"},
{ "trigger": ":runAnimationsForSequenceIdTweenDuration\tCCBAnimationManager:runAnimationsForSequenceIdTweenDuration(_num,_num)", "contents": "runAnimationsForSequenceIdTweenDuration(_num,_num)"},
{ "trigger": "CCShow\t", "contents": "CCShow"},
{ "trigger": "CCShow_create\tCCShow:create()", "contents": "CCShow:create()"},
{ "trigger": ":create\tCCShow:create()", "contents": "create()"},
{ "trigger": "CCSkewBy\t", "contents": "CCSkewBy"},
{ "trigger": "CCSkewBy_create\tCCSkewBy:create(_num,_num,_num)", "contents": "CCSkewBy:create(_num,_num,_num)"},
{ "trigger": ":create\tCCSkewBy:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCPointArray\t", "contents": "CCPointArray"},
{ "trigger": "CCPointArray_replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "CCPointArray:replace(_CCPoint,_num)"},
{ "trigger": ":replace\tCCPointArray:replace(_CCPoint,_num)", "contents": "replace(_CCPoint,_num)"},
{ "trigger": "CCPointArray_fetchPoints\tCCPointArray:fetchPoints()", "contents": "CCPointArray:fetchPoints()"},
{ "trigger": ":fetchPoints\tCCPointArray:fetchPoints()", "contents": "fetchPoints()"},
{ "trigger": "CCPointArray_reverse\tCCPointArray:reverse()", "contents": "CCPointArray:reverse()"},
{ "trigger": ":reverse\tCCPointArray:reverse()", "contents": "reverse()"},
{ "trigger": "CCPointArray_count\tCCPointArray:count()", "contents": "CCPointArray:count()"},
{ "trigger": ":count\tCCPointArray:count()", "contents": "count()"},
{ "trigger": "CCPointArray_remove\tCCPointArray:remove(_num)", "contents": "CCPointArray:remove(_num)"},
{ "trigger": ":remove\tCCPointArray:remove(_num)", "contents": "remove(_num)"},
{ "trigger": "CCPointArray_get\tCCPointArray:get(_num)", "contents": "CCPointArray:get(_num)"},
{ "trigger": ":get\tCCPointArray:get(_num)", "contents": "get(_num)"},
{ "trigger": "CCPointArray_reverseInline\tCCPointArray:reverseInline()", "contents": "CCPointArray:reverseInline()"},
{ "trigger": ":reverseInline\tCCPointArray:reverseInline()", "contents": "reverseInline()"},
{ "trigger": "CCPointArray_insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "CCPointArray:insert(_CCPoint,_num)"},
{ "trigger": ":insert\tCCPointArray:insert(_CCPoint,_num)", "contents": "insert(_CCPoint,_num)"},
{ "trigger": "CCPointArray_add\tCCPointArray:add(_CCPoint)", "contents": "CCPointArray:add(_CCPoint)"},
{ "trigger": ":add\tCCPointArray:add(_CCPoint)", "contents": "add(_CCPoint)"},
{ "trigger": "CCPointArray_create\tCCPointArray:create(_num)", "contents": "CCPointArray:create(_num)"},
{ "trigger": ":create\tCCPointArray:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCPointArray_removeAll\tCCPointArray:removeAll()", "contents": "CCPointArray:removeAll()"},
{ "trigger": ":removeAll\tCCPointArray:removeAll()", "contents": "removeAll()"},
{ "trigger": "CCRemoveSelf\t", "contents": "CCRemoveSelf"},
{ "trigger": "CCRemoveSelf_create\tCCRemoveSelf:create(_boo)", "contents": "CCRemoveSelf:create(_boo)"},
{ "trigger": ":create\tCCRemoveSelf:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCFadeOutBLTiles\t", "contents": "CCFadeOutBLTiles"},
{ "trigger": "CCFadeOutBLTiles_create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "CCFadeOutBLTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutBLTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionProgressRadialCCW\t", "contents": "CCTransitionProgressRadialCCW"},
{ "trigger": "CCTransitionProgressRadialCCW_create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCParticleFire\t", "contents": "CCParticleFire"},
{ "trigger": "CCParticleFire_createWithTotalParticles\tCCParticleFire:createWithTotalParticles(_num)", "contents": "CCParticleFire:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFire:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFire_create\tCCParticleFire:create()", "contents": "CCParticleFire:create()"},
{ "trigger": ":create\tCCParticleFire:create()", "contents": "create()"},
{ "trigger": "CCHide\t", "contents": "CCHide"},
{ "trigger": "CCHide_create\tCCHide:create()", "contents": "CCHide:create()"},
{ "trigger": ":create\tCCHide:create()", "contents": "create()"},
{ "trigger": "CCFadeOutDownTiles\t", "contents": "CCFadeOutDownTiles"},
{ "trigger": "CCFadeOutDownTiles_create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "CCFadeOutDownTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutDownTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCScaleTo\t", "contents": "CCScaleTo"},
{ "trigger": "CCScaleTo_create\tCCScaleTo:create(_num,_num)", "contents": "CCScaleTo:create(_num,_num)"},
{ "trigger": ":create\tCCScaleTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCGrid3DAction\t", "contents": "CCGrid3DAction"},
{ "trigger": "CCScheduler\t", "contents": "CCScheduler"},
{ "trigger": "CCScheduler_resumeTarget\tCCScheduler:resumeTarget(_CCObject)", "contents": "CCScheduler:resumeTarget(_CCObject)"},
{ "trigger": ":resumeTarget\tCCScheduler:resumeTarget(_CCObject)", "contents": "resumeTarget(_CCObject)"},
{ "trigger": "CCScheduler_scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "CCScheduler:scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": ":scheduleScriptFunc\tCCScheduler:scheduleScriptFunc(_listener,_num,_boo)", "contents": "scheduleScriptFunc(_listener,_num,_boo)"},
{ "trigger": "CCScheduler_unscheduleAllWithMinPriority\tCCScheduler:unscheduleAllWithMinPriority(_num)", "contents": "CCScheduler:unscheduleAllWithMinPriority(_num)"},
{ "trigger": ":unscheduleAllWithMinPriority\tCCScheduler:unscheduleAllWithMinPriority(_num)", "contents": "unscheduleAllWithMinPriority(_num)"},
{ "trigger": "CCScheduler_scheduleUpdateForTarget\tCCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)", "contents": "CCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)"},
{ "trigger": ":scheduleUpdateForTarget\tCCScheduler:scheduleUpdateForTarget(_CCObject,_num,_boo)", "contents": "scheduleUpdateForTarget(_CCObject,_num,_boo)"},
{ "trigger": "CCScheduler_getTimeScale\tCCScheduler:getTimeScale()", "contents": "CCScheduler:getTimeScale()"},
{ "trigger": ":getTimeScale\tCCScheduler:getTimeScale()", "contents": "getTimeScale()"},
{ "trigger": "CCScheduler_unscheduleUpdateForTarget\tCCScheduler:unscheduleUpdateForTarget(_CCObject)", "contents": "CCScheduler:unscheduleUpdateForTarget(_CCObject)"},
{ "trigger": ":unscheduleUpdateForTarget\tCCScheduler:unscheduleUpdateForTarget(_CCObject)", "contents": "unscheduleUpdateForTarget(_CCObject)"},
{ "trigger": "CCScheduler_isTargetPaused\tCCScheduler:isTargetPaused(_CCObject)", "contents": "CCScheduler:isTargetPaused(_CCObject)"},
{ "trigger": ":isTargetPaused\tCCScheduler:isTargetPaused(_CCObject)", "contents": "isTargetPaused(_CCObject)"},
{ "trigger": "CCScheduler_pauseTarget\tCCScheduler:pauseTarget(_CCObject)", "contents": "CCScheduler:pauseTarget(_CCObject)"},
{ "trigger": ":pauseTarget\tCCScheduler:pauseTarget(_CCObject)", "contents": "pauseTarget(_CCObject)"},
{ "trigger": "CCScheduler_unscheduleAll\tCCScheduler:unscheduleAll()", "contents": "CCScheduler:unscheduleAll()"},
{ "trigger": ":unscheduleAll\tCCScheduler:unscheduleAll()", "contents": "unscheduleAll()"},
{ "trigger": "CCScheduler_unscheduleAllForTarget\tCCScheduler:unscheduleAllForTarget(_CCObject)", "contents": "CCScheduler:unscheduleAllForTarget(_CCObject)"},
{ "trigger": ":unscheduleAllForTarget\tCCScheduler:unscheduleAllForTarget(_CCObject)", "contents": "unscheduleAllForTarget(_CCObject)"},
{ "trigger": "CCScheduler_unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "CCScheduler:unscheduleScriptEntry(_num)"},
{ "trigger": ":unscheduleScriptEntry\tCCScheduler:unscheduleScriptEntry(_num)", "contents": "unscheduleScriptEntry(_num)"},
{ "trigger": "CCScheduler_setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "CCScheduler:setTimeScale(_num)"},
{ "trigger": ":setTimeScale\tCCScheduler:setTimeScale(_num)", "contents": "setTimeScale(_num)"},
{ "trigger": "CCApplication\t", "contents": "CCApplication"},
{ "trigger": "CCApplication_getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "CCApplication:getCurrentLanguage()"},
{ "trigger": ":getCurrentLanguage\tCCApplication:getCurrentLanguage()", "contents": "getCurrentLanguage()"},
{ "trigger": "CCApplication_sharedApplication\tCCApplication:sharedApplication()", "contents": "CCApplication:sharedApplication()"},
{ "trigger": ":sharedApplication\tCCApplication:sharedApplication()", "contents": "sharedApplication()"},
{ "trigger": "CCApplication_getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "CCApplication:getTargetPlatform()"},
{ "trigger": ":getTargetPlatform\tCCApplication:getTargetPlatform()", "contents": "getTargetPlatform()"},
{ "trigger": "CCApplication_setAnimationInterval\tCCApplication:setAnimationInterval(_num)", "contents": "CCApplication:setAnimationInterval(_num)"},
{ "trigger": ":setAnimationInterval\tCCApplication:setAnimationInterval(_num)", "contents": "setAnimationInterval(_num)"},
{ "trigger": "CCCircleShape\t", "contents": "CCCircleShape"},
{ "trigger": "CCCircleShape_setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "CCCircleShape:setDrawLineToCenter(_boo)"},
{ "trigger": ":setDrawLineToCenter\tCCCircleShape:setDrawLineToCenter(_boo)", "contents": "setDrawLineToCenter(_boo)"},
{ "trigger": "CCCircleShape_getSegments\tCCCircleShape:getSegments()", "contents": "CCCircleShape:getSegments()"},
{ "trigger": ":getSegments\tCCCircleShape:getSegments()", "contents": "getSegments()"},
{ "trigger": "CCCircleShape_getAngle\tCCCircleShape:getAngle()", "contents": "CCCircleShape:getAngle()"},
{ "trigger": ":getAngle\tCCCircleShape:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCCircleShape_setRadius\tCCCircleShape:setRadius(_num)", "contents": "CCCircleShape:setRadius(_num)"},
{ "trigger": ":setRadius\tCCCircleShape:setRadius(_num)", "contents": "setRadius(_num)"},
{ "trigger": "CCCircleShape_setSegments\tCCCircleShape:setSegments(_num)", "contents": "CCCircleShape:setSegments(_num)"},
{ "trigger": ":setSegments\tCCCircleShape:setSegments(_num)", "contents": "setSegments(_num)"},
{ "trigger": "CCCircleShape_setAngle\tCCCircleShape:setAngle(_num)", "contents": "CCCircleShape:setAngle(_num)"},
{ "trigger": ":setAngle\tCCCircleShape:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCCircleShape_getRadius\tCCCircleShape:getRadius()", "contents": "CCCircleShape:getRadius()"},
{ "trigger": ":getRadius\tCCCircleShape:getRadius()", "contents": "getRadius()"},
{ "trigger": "CCCircleShape_create\tCCCircleShape:create(_num)", "contents": "CCCircleShape:create(_num)"},
{ "trigger": ":create\tCCCircleShape:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCCircleShape_isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "CCCircleShape:isDrawLineToCenter()"},
{ "trigger": ":isDrawLineToCenter\tCCCircleShape:isDrawLineToCenter()", "contents": "isDrawLineToCenter()"},
{ "trigger": "CCTransitionScene\t", "contents": "CCTransitionScene"},
{ "trigger": "CCFloat\t", "contents": "CCFloat"},
{ "trigger": "CCFloat_getValue\tCCFloat:getValue()", "contents": "CCFloat:getValue()"},
{ "trigger": ":getValue\tCCFloat:getValue()", "contents": "getValue()"},
{ "trigger": "CCFloat_call\tCCFloat:call(_num)", "contents": "CCFloat:call(_num)"},
{ "trigger": ":call\tCCFloat:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCFloat_new\tCCFloat:new(_num)", "contents": "CCFloat:new(_num)"},
{ "trigger": ":new\tCCFloat:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCFloat_new_local\tCCFloat:new_local(_num)", "contents": "CCFloat:new_local(_num)"},
{ "trigger": ":new_local\tCCFloat:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCFloat_create\tCCFloat:create(_num)", "contents": "CCFloat:create(_num)"},
{ "trigger": ":create\tCCFloat:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCEaseBackInOut\t", "contents": "CCEaseBackInOut"},
{ "trigger": "CCEaseBackInOut_create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "CCEaseBackInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBackInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTexture2D\t", "contents": "CCTexture2D"},
{ "trigger": "CCTexture2D_PVRImagesHavePremultipliedAlpha\tCCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)", "contents": "CCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)"},
{ "trigger": ":PVRImagesHavePremultipliedAlpha\tCCTexture2D:PVRImagesHavePremultipliedAlpha(_boo)", "contents": "PVRImagesHavePremultipliedAlpha(_boo)"},
{ "trigger": "CCTexture2D_setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "CCTexture2D:setTexParameters(_ccTexParams)"},
{ "trigger": ":setTexParameters\tCCTexture2D:setTexParameters(_ccTexParams)", "contents": "setTexParameters(_ccTexParams)"},
{ "trigger": "CCTexture2D_generateMipmap\tCCTexture2D:generateMipmap()", "contents": "CCTexture2D:generateMipmap()"},
{ "trigger": ":generateMipmap\tCCTexture2D:generateMipmap()", "contents": "generateMipmap()"},
{ "trigger": "CCTexture2D_hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "CCTexture2D:hasMipmaps()"},
{ "trigger": ":hasMipmaps\tCCTexture2D:hasMipmaps()", "contents": "hasMipmaps()"},
{ "trigger": "CCTexture2D_getContentSize\tCCTexture2D:getContentSize()", "contents": "CCTexture2D:getContentSize()"},
{ "trigger": ":getContentSize\tCCTexture2D:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCTexture2D_bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "CCTexture2D:bitsPerPixelForFormat(_num)"},
{ "trigger": ":bitsPerPixelForFormat\tCCTexture2D:bitsPerPixelForFormat(_num)", "contents": "bitsPerPixelForFormat(_num)"},
{ "trigger": "CCTexture2D_getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "CCTexture2D:getPixelsWide()"},
{ "trigger": ":getPixelsWide\tCCTexture2D:getPixelsWide()", "contents": "getPixelsWide()"},
{ "trigger": "CCTexture2D_setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "CCTexture2D:setAntiAliasTexParameters()"},
{ "trigger": ":setAntiAliasTexParameters\tCCTexture2D:setAntiAliasTexParameters()", "contents": "setAntiAliasTexParameters()"},
{ "trigger": "CCTexture2D_setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "CCTexture2D:setDefaultAlphaPixelFormat(_num)"},
{ "trigger": ":setDefaultAlphaPixelFormat\tCCTexture2D:setDefaultAlphaPixelFormat(_num)", "contents": "setDefaultAlphaPixelFormat(_num)"},
{ "trigger": "CCTexture2D_getMaxS\tCCTexture2D:getMaxS()", "contents": "CCTexture2D:getMaxS()"},
{ "trigger": ":getMaxS\tCCTexture2D:getMaxS()", "contents": "getMaxS()"},
{ "trigger": "CCTexture2D_getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "CCTexture2D:getPixelsHigh()"},
{ "trigger": ":getPixelsHigh\tCCTexture2D:getPixelsHigh()", "contents": "getPixelsHigh()"},
{ "trigger": "CCTexture2D_getMaxT\tCCTexture2D:getMaxT()", "contents": "CCTexture2D:getMaxT()"},
{ "trigger": ":getMaxT\tCCTexture2D:getMaxT()", "contents": "getMaxT()"},
{ "trigger": "CCTexture2D_stringForFormat\tCCTexture2D:stringForFormat()", "contents": "CCTexture2D:stringForFormat()"},
{ "trigger": ":stringForFormat\tCCTexture2D:stringForFormat()", "contents": "stringForFormat()"},
{ "trigger": "CCTexture2D_defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "CCTexture2D:defaultAlphaPixelFormat()"},
{ "trigger": ":defaultAlphaPixelFormat\tCCTexture2D:defaultAlphaPixelFormat()", "contents": "defaultAlphaPixelFormat()"},
{ "trigger": "CCTexture2D_hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "CCTexture2D:hasPremultipliedAlpha()"},
{ "trigger": ":hasPremultipliedAlpha\tCCTexture2D:hasPremultipliedAlpha()", "contents": "hasPremultipliedAlpha()"},
{ "trigger": "CCTexture2D_setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "CCTexture2D:setAliasTexParameters()"},
{ "trigger": ":setAliasTexParameters\tCCTexture2D:setAliasTexParameters()", "contents": "setAliasTexParameters()"},
{ "trigger": "CCTexture2D_getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "CCTexture2D:getContentSizeInPixels()"},
{ "trigger": ":getContentSizeInPixels\tCCTexture2D:getContentSizeInPixels()", "contents": "getContentSizeInPixels()"},
{ "trigger": "CCTexture2D_getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "CCTexture2D:getPixelFormat()"},
{ "trigger": ":getPixelFormat\tCCTexture2D:getPixelFormat()", "contents": "getPixelFormat()"},
{ "trigger": "CCTexture2D_getName\tCCTexture2D:getName()", "contents": "CCTexture2D:getName()"},
{ "trigger": ":getName\tCCTexture2D:getName()", "contents": "getName()"},
{ "trigger": "CCTexture2D_getShaderProgram\tCCTexture2D:getShaderProgram()", "contents": "CCTexture2D:getShaderProgram()"},
{ "trigger": ":getShaderProgram\tCCTexture2D:getShaderProgram()", "contents": "getShaderProgram()"},
{ "trigger": "CCImage\t", "contents": "CCImage"},
{ "trigger": "CCImage_getBitsPerComponent\tCCImage:getBitsPerComponent()", "contents": "CCImage:getBitsPerComponent()"},
{ "trigger": ":getBitsPerComponent\tCCImage:getBitsPerComponent()", "contents": "getBitsPerComponent()"},
{ "trigger": "CCImage_call\tCCImage:call()", "contents": "CCImage:call()"},
{ "trigger": ":call\tCCImage:call()", "contents": "call()"},
{ "trigger": "CCImage_isPremultipliedAlpha\tCCImage:isPremultipliedAlpha()", "contents": "CCImage:isPremultipliedAlpha()"},
{ "trigger": ":isPremultipliedAlpha\tCCImage:isPremultipliedAlpha()", "contents": "isPremultipliedAlpha()"},
{ "trigger": "CCImage_new\tCCImage:new()", "contents": "CCImage:new()"},
{ "trigger": ":new\tCCImage:new()", "contents": "new()"},
{ "trigger": "CCImage_getHeight\tCCImage:getHeight()", "contents": "CCImage:getHeight()"},
{ "trigger": ":getHeight\tCCImage:getHeight()", "contents": "getHeight()"},
{ "trigger": "CCImage_initWithImageData\tCCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)", "contents": "CCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)"},
{ "trigger": ":initWithImageData\tCCImage:initWithImageData(_userdata,_num,_num,_num,_num,_num)", "contents": "initWithImageData(_userdata,_num,_num,_num,_num,_num)"},
{ "trigger": "CCImage_new_local\tCCImage:new_local()", "contents": "CCImage:new_local()"},
{ "trigger": ":new_local\tCCImage:new_local()", "contents": "new_local()"},
{ "trigger": "CCImage_delete\tCCImage:delete()", "contents": "CCImage:delete()"},
{ "trigger": ":delete\tCCImage:delete()", "contents": "delete()"},
{ "trigger": "CCImage_saveToFile\tCCImage:saveToFile(_str,_boo)", "contents": "CCImage:saveToFile(_str,_boo)"},
{ "trigger": ":saveToFile\tCCImage:saveToFile(_str,_boo)", "contents": "saveToFile(_str,_boo)"},
{ "trigger": "CCImage_initWithImageFileThreadSafe\tCCImage:initWithImageFileThreadSafe(_str,_num)", "contents": "CCImage:initWithImageFileThreadSafe(_str,_num)"},
{ "trigger": ":initWithImageFileThreadSafe\tCCImage:initWithImageFileThreadSafe(_str,_num)", "contents": "initWithImageFileThreadSafe(_str,_num)"},
{ "trigger": "CCImage_getWidth\tCCImage:getWidth()", "contents": "CCImage:getWidth()"},
{ "trigger": ":getWidth\tCCImage:getWidth()", "contents": "getWidth()"},
{ "trigger": "CCImage_hasAlpha\tCCImage:hasAlpha()", "contents": "CCImage:hasAlpha()"},
{ "trigger": ":hasAlpha\tCCImage:hasAlpha()", "contents": "hasAlpha()"},
{ "trigger": "CCImage_initWithImageFile\tCCImage:initWithImageFile(_str,_num)", "contents": "CCImage:initWithImageFile(_str,_num)"},
{ "trigger": ":initWithImageFile\tCCImage:initWithImageFile(_str,_num)", "contents": "initWithImageFile(_str,_num)"},
{ "trigger": "Bone\t", "contents": "Bone"},
{ "trigger": "Bone_getParentBone\tBone:getParentBone()", "contents": "Bone:getParentBone()"},
{ "trigger": ":getParentBone\tBone:getParentBone()", "contents": "getParentBone()"},
{ "trigger": "Bone_getArmature\tBone:getArmature()", "contents": "Bone:getArmature()"},
{ "trigger": ":getArmature\tBone:getArmature()", "contents": "getArmature()"},
{ "trigger": "Bone_getIgnoreMovementBoneData\tBone:getIgnoreMovementBoneData()", "contents": "Bone:getIgnoreMovementBoneData()"},
{ "trigger": ":getIgnoreMovementBoneData\tBone:getIgnoreMovementBoneData()", "contents": "getIgnoreMovementBoneData()"},
{ "trigger": "Bone_getChildren\tBone:getChildren()", "contents": "Bone:getChildren()"},
{ "trigger": ":getChildren\tBone:getChildren()", "contents": "getChildren()"},
{ "trigger": "Bone_removeFromParent\tBone:removeFromParent(_boo)", "contents": "Bone:removeFromParent(_boo)"},
{ "trigger": ":removeFromParent\tBone:removeFromParent(_boo)", "contents": "removeFromParent(_boo)"},
{ "trigger": "Bone_create\tBone:create()", "contents": "Bone:create()"},
{ "trigger": ":create\tBone:create()", "contents": "create()"},
{ "trigger": "Bone_setParentBone\tBone:setParentBone(_Bone)", "contents": "Bone:setParentBone(_Bone)"},
{ "trigger": ":setParentBone\tBone:setParentBone(_Bone)", "contents": "setParentBone(_Bone)"},
{ "trigger": "Bone_getChildArmature\tBone:getChildArmature()", "contents": "Bone:getChildArmature()"},
{ "trigger": ":getChildArmature\tBone:getChildArmature()", "contents": "getChildArmature()"},
{ "trigger": "Bone_getName\tBone:getName()", "contents": "Bone:getName()"},
{ "trigger": ":getName\tBone:getName()", "contents": "getName()"},
{ "trigger": "Bone_removeChildBone\tBone:removeChildBone(_Bone,_boo)", "contents": "Bone:removeChildBone(_Bone,_boo)"},
{ "trigger": ":removeChildBone\tBone:removeChildBone(_Bone,_boo)", "contents": "removeChildBone(_Bone,_boo)"},
{ "trigger": "Bone_setIgnoreMovementBoneData\tBone:setIgnoreMovementBoneData(_boo)", "contents": "Bone:setIgnoreMovementBoneData(_boo)"},
{ "trigger": ":setIgnoreMovementBoneData\tBone:setIgnoreMovementBoneData(_boo)", "contents": "setIgnoreMovementBoneData(_boo)"},
{ "trigger": "Bone_addChildBone\tBone:addChildBone(_Bone)", "contents": "Bone:addChildBone(_Bone)"},
{ "trigger": ":addChildBone\tBone:addChildBone(_Bone)", "contents": "addChildBone(_Bone)"},
{ "trigger": "Bone_setName\tBone:setName(_cpp)", "contents": "Bone:setName(_cpp)"},
{ "trigger": ":setName\tBone:setName(_cpp)", "contents": "setName(_cpp)"},
{ "trigger": "CCParticleSpiral\t", "contents": "CCParticleSpiral"},
{ "trigger": "CCParticleSpiral_createWithTotalParticles\tCCParticleSpiral:createWithTotalParticles(_num)", "contents": "CCParticleSpiral:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSpiral:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSpiral_create\tCCParticleSpiral:create()", "contents": "CCParticleSpiral:create()"},
{ "trigger": ":create\tCCParticleSpiral:create()", "contents": "create()"},
{ "trigger": "CCTransitionSplitCols\t", "contents": "CCTransitionSplitCols"},
{ "trigger": "CCTransitionSplitCols_create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "CCTransitionSplitCols:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionSplitCols:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionJumpZoom\t", "contents": "CCTransitionJumpZoom"},
{ "trigger": "CCTransitionJumpZoom_create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "CCTransitionJumpZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionJumpZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCRotateBy\t", "contents": "CCRotateBy"},
{ "trigger": "CCRotateBy_create\tCCRotateBy:create(_num,_num)", "contents": "CCRotateBy:create(_num,_num)"},
{ "trigger": ":create\tCCRotateBy:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCEaseElasticInOut\t", "contents": "CCEaseElasticInOut"},
{ "trigger": "CCEaseElasticInOut_create\tCCEaseElasticInOut:create(_CCActionInterval)", "contents": "CCEaseElasticInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCMenuItemImage\t", "contents": "CCMenuItemImage"},
{ "trigger": "CCMenuItemImage_setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setDisabledSpriteFrame\tCCMenuItemImage:setDisabledSpriteFrame(_CCSpriteFrame)", "contents": "setDisabledSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setNormalSpriteFrame\tCCMenuItemImage:setNormalSpriteFrame(_CCSpriteFrame)", "contents": "setNormalSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "CCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSelectedSpriteFrame\tCCMenuItemImage:setSelectedSpriteFrame(_CCSpriteFrame)", "contents": "setSelectedSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCMenuItemImage_create\tCCMenuItemImage:create()", "contents": "CCMenuItemImage:create()"},
{ "trigger": ":create\tCCMenuItemImage:create()", "contents": "create()"},
{ "trigger": "CCTransitionProgressInOut\t", "contents": "CCTransitionProgressInOut"},
{ "trigger": "CCTransitionProgressInOut_create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "CCTransitionProgressInOut:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressInOut:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCSpeed\t", "contents": "CCSpeed"},
{ "trigger": "CCSpeed_getSpeed\tCCSpeed:getSpeed()", "contents": "CCSpeed:getSpeed()"},
{ "trigger": ":getSpeed\tCCSpeed:getSpeed()", "contents": "getSpeed()"},
{ "trigger": "CCSpeed_setSpeed\tCCSpeed:setSpeed(_num)", "contents": "CCSpeed:setSpeed(_num)"},
{ "trigger": ":setSpeed\tCCSpeed:setSpeed(_num)", "contents": "setSpeed(_num)"},
{ "trigger": "CCSpeed_create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "CCSpeed:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCSpeed:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCTime\t", "contents": "CCTime"},
{ "trigger": "CCTime_timersubCocos2d\tCCTime:timersubCocos2d(_cc_timeval,_cc_timeval)", "contents": "CCTime:timersubCocos2d(_cc_timeval,_cc_timeval)"},
{ "trigger": ":timersubCocos2d\tCCTime:timersubCocos2d(_cc_timeval,_cc_timeval)", "contents": "timersubCocos2d(_cc_timeval,_cc_timeval)"},
{ "trigger": "CCTime_gettimeofdayCocos2d\tCCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)", "contents": "CCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)"},
{ "trigger": ":gettimeofdayCocos2d\tCCTime:gettimeofdayCocos2d(_cc_timeval,_userdata)", "contents": "gettimeofdayCocos2d(_cc_timeval,_userdata)"},
{ "trigger": "CCComponent\t", "contents": "CCComponent"},
{ "trigger": "CCComponent_getOwner\tCCComponent:getOwner()", "contents": "CCComponent:getOwner()"},
{ "trigger": ":getOwner\tCCComponent:getOwner()", "contents": "getOwner()"},
{ "trigger": "CCComponent_setOwner\tCCComponent:setOwner(_CCNode)", "contents": "CCComponent:setOwner(_CCNode)"},
{ "trigger": ":setOwner\tCCComponent:setOwner(_CCNode)", "contents": "setOwner(_CCNode)"},
{ "trigger": "CCComponent_getName\tCCComponent:getName()", "contents": "CCComponent:getName()"},
{ "trigger": ":getName\tCCComponent:getName()", "contents": "getName()"},
{ "trigger": "CCComponent_setEnabled\tCCComponent:setEnabled(_boo)", "contents": "CCComponent:setEnabled(_boo)"},
{ "trigger": ":setEnabled\tCCComponent:setEnabled(_boo)", "contents": "setEnabled(_boo)"},
{ "trigger": "CCComponent_create\tCCComponent:create()", "contents": "CCComponent:create()"},
{ "trigger": ":create\tCCComponent:create()", "contents": "create()"},
{ "trigger": "CCComponent_isEnabled\tCCComponent:isEnabled()", "contents": "CCComponent:isEnabled()"},
{ "trigger": ":isEnabled\tCCComponent:isEnabled()", "contents": "isEnabled()"},
{ "trigger": "CCSplitRows\t", "contents": "CCSplitRows"},
{ "trigger": "CCSplitRows_create\tCCSplitRows:create(_num,_num)", "contents": "CCSplitRows:create(_num,_num)"},
{ "trigger": ":create\tCCSplitRows:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCFollow\t", "contents": "CCFollow"},
{ "trigger": "CCFollow_isBoundarySet\tCCFollow:isBoundarySet()", "contents": "CCFollow:isBoundarySet()"},
{ "trigger": ":isBoundarySet\tCCFollow:isBoundarySet()", "contents": "isBoundarySet()"},
{ "trigger": "CCFollow_setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "CCFollow:setBoudarySet(_boo)"},
{ "trigger": ":setBoudarySet\tCCFollow:setBoudarySet(_boo)", "contents": "setBoudarySet(_boo)"},
{ "trigger": "CCFollow_create\tCCFollow:create(_CCNode,_CCRect)", "contents": "CCFollow:create(_CCNode,_CCRect)"},
{ "trigger": ":create\tCCFollow:create(_CCNode,_CCRect)", "contents": "create(_CCNode,_CCRect)"},
{ "trigger": "CCReuseGrid\t", "contents": "CCReuseGrid"},
{ "trigger": "CCReuseGrid_create\tCCReuseGrid:create(_num)", "contents": "CCReuseGrid:create(_num)"},
{ "trigger": ":create\tCCReuseGrid:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTransitionProgressOutIn\t", "contents": "CCTransitionProgressOutIn"},
{ "trigger": "CCTransitionProgressOutIn_create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "CCTransitionProgressOutIn:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressOutIn:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTMXObjectGroup\t", "contents": "CCTMXObjectGroup"},
{ "trigger": "CCTMXObjectGroup_getObjects\tCCTMXObjectGroup:getObjects()", "contents": "CCTMXObjectGroup:getObjects()"},
{ "trigger": ":getObjects\tCCTMXObjectGroup:getObjects()", "contents": "getObjects()"},
{ "trigger": "CCTMXObjectGroup_setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "CCTMXObjectGroup:setPositionOffset(_CCPoint)"},
{ "trigger": ":setPositionOffset\tCCTMXObjectGroup:setPositionOffset(_CCPoint)", "contents": "setPositionOffset(_CCPoint)"},
{ "trigger": "CCTMXObjectGroup_objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "CCTMXObjectGroup:objectNamed(_str)"},
{ "trigger": ":objectNamed\tCCTMXObjectGroup:objectNamed(_str)", "contents": "objectNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_getProperties\tCCTMXObjectGroup:getProperties()", "contents": "CCTMXObjectGroup:getProperties()"},
{ "trigger": ":getProperties\tCCTMXObjectGroup:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXObjectGroup_propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "CCTMXObjectGroup:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXObjectGroup:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXObjectGroup_getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "CCTMXObjectGroup:getPositionOffset()"},
{ "trigger": ":getPositionOffset\tCCTMXObjectGroup:getPositionOffset()", "contents": "getPositionOffset()"},
{ "trigger": "CCTMXObjectGroup_getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "CCTMXObjectGroup:getGroupName()"},
{ "trigger": ":getGroupName\tCCTMXObjectGroup:getGroupName()", "contents": "getGroupName()"},
{ "trigger": "CCPoint\t", "contents": "CCPoint"},
{ "trigger": "CCPoint_rotateByAngle\tCCPoint:rotateByAngle(_CCPoint,_num)", "contents": "CCPoint:rotateByAngle(_CCPoint,_num)"},
{ "trigger": ":rotateByAngle\tCCPoint:rotateByAngle(_CCPoint,_num)", "contents": "rotateByAngle(_CCPoint,_num)"},
{ "trigger": "CCPoint_call\tCCPoint:call()", "contents": "CCPoint:call()"},
{ "trigger": ":call\tCCPoint:call()", "contents": "call()"},
{ "trigger": "CCPoint_rotate\tCCPoint:rotate(_CCPoint)", "contents": "CCPoint:rotate(_CCPoint)"},
{ "trigger": ":rotate\tCCPoint:rotate(_CCPoint)", "contents": "rotate(_CCPoint)"},
{ "trigger": "CCPoint_equals\tCCPoint:equals(_CCPoint)", "contents": "CCPoint:equals(_CCPoint)"},
{ "trigger": ":equals\tCCPoint:equals(_CCPoint)", "contents": "equals(_CCPoint)"},
{ "trigger": "CCPoint_getAngle\tCCPoint:getAngle(_CCPoint)", "contents": "CCPoint:getAngle(_CCPoint)"},
{ "trigger": ":getAngle\tCCPoint:getAngle(_CCPoint)", "contents": "getAngle(_CCPoint)"},
{ "trigger": "CCPoint_getRPerp\tCCPoint:getRPerp()", "contents": "CCPoint:getRPerp()"},
{ "trigger": ":getRPerp\tCCPoint:getRPerp()", "contents": "getRPerp()"},
{ "trigger": "CCPoint_fuzzyEquals\tCCPoint:fuzzyEquals(_CCPoint,_num)", "contents": "CCPoint:fuzzyEquals(_CCPoint,_num)"},
{ "trigger": ":fuzzyEquals\tCCPoint:fuzzyEquals(_CCPoint,_num)", "contents": "fuzzyEquals(_CCPoint,_num)"},
{ "trigger": "CCPoint_unrotate\tCCPoint:unrotate(_CCPoint)", "contents": "CCPoint:unrotate(_CCPoint)"},
{ "trigger": ":unrotate\tCCPoint:unrotate(_CCPoint)", "contents": "unrotate(_CCPoint)"},
{ "trigger": "CCPoint_dot\tCCPoint:dot(_CCPoint)", "contents": "CCPoint:dot(_CCPoint)"},
{ "trigger": ":dot\tCCPoint:dot(_CCPoint)", "contents": "dot(_CCPoint)"},
{ "trigger": "CCPoint_forAngle\tCCPoint:forAngle(_num)", "contents": "CCPoint:forAngle(_num)"},
{ "trigger": ":forAngle\tCCPoint:forAngle(_num)", "contents": "forAngle(_num)"},
{ "trigger": "CCPoint_getLengthSq\tCCPoint:getLengthSq()", "contents": "CCPoint:getLengthSq()"},
{ "trigger": ":getLengthSq\tCCPoint:getLengthSq()", "contents": "getLengthSq()"},
{ "trigger": "CCPoint_normalize\tCCPoint:normalize()", "contents": "CCPoint:normalize()"},
{ "trigger": ":normalize\tCCPoint:normalize()", "contents": "normalize()"},
{ "trigger": "CCPoint_project\tCCPoint:project(_CCPoint)", "contents": "CCPoint:project(_CCPoint)"},
{ "trigger": ":project\tCCPoint:project(_CCPoint)", "contents": "project(_CCPoint)"},
{ "trigger": "CCPoint_new\tCCPoint:new()", "contents": "CCPoint:new()"},
{ "trigger": ":new\tCCPoint:new()", "contents": "new()"},
{ "trigger": "CCPoint_getDistance\tCCPoint:getDistance(_CCPoint)", "contents": "CCPoint:getDistance(_CCPoint)"},
{ "trigger": ":getDistance\tCCPoint:getDistance(_CCPoint)", "contents": "getDistance(_CCPoint)"},
{ "trigger": "CCPoint_new_local\tCCPoint:new_local()", "contents": "CCPoint:new_local()"},
{ "trigger": ":new_local\tCCPoint:new_local()", "contents": "new_local()"},
{ "trigger": "CCPoint_getPerp\tCCPoint:getPerp()", "contents": "CCPoint:getPerp()"},
{ "trigger": ":getPerp\tCCPoint:getPerp()", "contents": "getPerp()"},
{ "trigger": "CCPoint_getLength\tCCPoint:getLength()", "contents": "CCPoint:getLength()"},
{ "trigger": ":getLength\tCCPoint:getLength()", "contents": "getLength()"},
{ "trigger": "CCPoint_setPoint\tCCPoint:setPoint(_num,_num)", "contents": "CCPoint:setPoint(_num,_num)"},
{ "trigger": ":setPoint\tCCPoint:setPoint(_num,_num)", "contents": "setPoint(_num,_num)"},
{ "trigger": "CCPoint_getDistanceSq\tCCPoint:getDistanceSq(_CCPoint)", "contents": "CCPoint:getDistanceSq(_CCPoint)"},
{ "trigger": ":getDistanceSq\tCCPoint:getDistanceSq(_CCPoint)", "contents": "getDistanceSq(_CCPoint)"},
{ "trigger": "CCPoint_lerp\tCCPoint:lerp(_CCPoint,_num)", "contents": "CCPoint:lerp(_CCPoint,_num)"},
{ "trigger": ":lerp\tCCPoint:lerp(_CCPoint,_num)", "contents": "lerp(_CCPoint,_num)"},
{ "trigger": "CCPoint_cross\tCCPoint:cross(_CCPoint)", "contents": "CCPoint:cross(_CCPoint)"},
{ "trigger": ":cross\tCCPoint:cross(_CCPoint)", "contents": "cross(_CCPoint)"},
{ "trigger": "CCLabelTTF\t", "contents": "CCLabelTTF"},
{ "trigger": "CCLabelTTF_call\tCCLabelTTF:call()", "contents": "CCLabelTTF:call()"},
{ "trigger": ":call\tCCLabelTTF:call()", "contents": "call()"},
{ "trigger": "CCLabelTTF_initWithStringAndTextDefinition\tCCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)", "contents": "CCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)"},
{ "trigger": ":initWithStringAndTextDefinition\tCCLabelTTF:initWithStringAndTextDefinition(_str,_ccFontDefinition)", "contents": "initWithStringAndTextDefinition(_str,_ccFontDefinition)"},
{ "trigger": "CCLabelTTF_setString\tCCLabelTTF:setString(_str)", "contents": "CCLabelTTF:setString(_str)"},
{ "trigger": ":setString\tCCLabelTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelTTF_enableShadow\tCCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)", "contents": "CCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)"},
{ "trigger": ":enableShadow\tCCLabelTTF:enableShadow(_CCSize,_num,_num,_boo)", "contents": "enableShadow(_CCSize,_num,_num,_boo)"},
{ "trigger": "CCLabelTTF_getTextDefinition\tCCLabelTTF:getTextDefinition()", "contents": "CCLabelTTF:getTextDefinition()"},
{ "trigger": ":getTextDefinition\tCCLabelTTF:getTextDefinition()", "contents": "getTextDefinition()"},
{ "trigger": "CCLabelTTF_disableShadow\tCCLabelTTF:disableShadow(_boo)", "contents": "CCLabelTTF:disableShadow(_boo)"},
{ "trigger": ":disableShadow\tCCLabelTTF:disableShadow(_boo)", "contents": "disableShadow(_boo)"},
{ "trigger": "CCLabelTTF_enableStroke\tCCLabelTTF:enableStroke(_ccColor3B,_num,_boo)", "contents": "CCLabelTTF:enableStroke(_ccColor3B,_num,_boo)"},
{ "trigger": ":enableStroke\tCCLabelTTF:enableStroke(_ccColor3B,_num,_boo)", "contents": "enableStroke(_ccColor3B,_num,_boo)"},
{ "trigger": "CCLabelTTF_delete\tCCLabelTTF:delete()", "contents": "CCLabelTTF:delete()"},
{ "trigger": ":delete\tCCLabelTTF:delete()", "contents": "delete()"},
{ "trigger": "CCLabelTTF_initWithString\tCCLabelTTF:initWithString(_str,_str,_num)", "contents": "CCLabelTTF:initWithString(_str,_str,_num)"},
{ "trigger": ":initWithString\tCCLabelTTF:initWithString(_str,_str,_num)", "contents": "initWithString(_str,_str,_num)"},
{ "trigger": "CCLabelTTF_setFontFillColor\tCCLabelTTF:setFontFillColor(_ccColor3B,_boo)", "contents": "CCLabelTTF:setFontFillColor(_ccColor3B,_boo)"},
{ "trigger": ":setFontFillColor\tCCLabelTTF:setFontFillColor(_ccColor3B,_boo)", "contents": "setFontFillColor(_ccColor3B,_boo)"},
{ "trigger": "CCLabelTTF_getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "CCLabelTTF:getVerticalAlignment()"},
{ "trigger": ":getVerticalAlignment\tCCLabelTTF:getVerticalAlignment()", "contents": "getVerticalAlignment()"},
{ "trigger": "CCLabelTTF_getFontName\tCCLabelTTF:getFontName()", "contents": "CCLabelTTF:getFontName()"},
{ "trigger": ":getFontName\tCCLabelTTF:getFontName()", "contents": "getFontName()"},
{ "trigger": "CCLabelTTF_setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "CCLabelTTF:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCLabelTTF:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCLabelTTF_getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "CCLabelTTF:getHorizontalAlignment()"},
{ "trigger": ":getHorizontalAlignment\tCCLabelTTF:getHorizontalAlignment()", "contents": "getHorizontalAlignment()"},
{ "trigger": "CCLabelTTF_setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "CCLabelTTF:setVerticalAlignment(_num)"},
{ "trigger": ":setVerticalAlignment\tCCLabelTTF:setVerticalAlignment(_num)", "contents": "setVerticalAlignment(_num)"},
{ "trigger": "CCLabelTTF_setTextDefinition\tCCLabelTTF:setTextDefinition(_ccFontDefinition)", "contents": "CCLabelTTF:setTextDefinition(_ccFontDefinition)"},
{ "trigger": ":setTextDefinition\tCCLabelTTF:setTextDefinition(_ccFontDefinition)", "contents": "setTextDefinition(_ccFontDefinition)"},
{ "trigger": "CCLabelTTF_init\tCCLabelTTF:init()", "contents": "CCLabelTTF:init()"},
{ "trigger": ":init\tCCLabelTTF:init()", "contents": "init()"},
{ "trigger": "CCLabelTTF_create\tCCLabelTTF:create()", "contents": "CCLabelTTF:create()"},
{ "trigger": ":create\tCCLabelTTF:create()", "contents": "create()"},
{ "trigger": "CCLabelTTF_setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "CCLabelTTF:setHorizontalAlignment(_num)"},
{ "trigger": ":setHorizontalAlignment\tCCLabelTTF:setHorizontalAlignment(_num)", "contents": "setHorizontalAlignment(_num)"},
{ "trigger": "CCLabelTTF_new\tCCLabelTTF:new()", "contents": "CCLabelTTF:new()"},
{ "trigger": ":new\tCCLabelTTF:new()", "contents": "new()"},
{ "trigger": "CCLabelTTF_setFontName\tCCLabelTTF:setFontName(_str)", "contents": "CCLabelTTF:setFontName(_str)"},
{ "trigger": ":setFontName\tCCLabelTTF:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCLabelTTF_new_local\tCCLabelTTF:new_local()", "contents": "CCLabelTTF:new_local()"},
{ "trigger": ":new_local\tCCLabelTTF:new_local()", "contents": "new_local()"},
{ "trigger": "CCLabelTTF_getFontSize\tCCLabelTTF:getFontSize()", "contents": "CCLabelTTF:getFontSize()"},
{ "trigger": ":getFontSize\tCCLabelTTF:getFontSize()", "contents": "getFontSize()"},
{ "trigger": "CCLabelTTF_getDimensions\tCCLabelTTF:getDimensions()", "contents": "CCLabelTTF:getDimensions()"},
{ "trigger": ":getDimensions\tCCLabelTTF:getDimensions()", "contents": "getDimensions()"},
{ "trigger": "CCLabelTTF_setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "CCLabelTTF:setDimensions(_CCSize)"},
{ "trigger": ":setDimensions\tCCLabelTTF:setDimensions(_CCSize)", "contents": "setDimensions(_CCSize)"},
{ "trigger": "CCLabelTTF_getString\tCCLabelTTF:getString()", "contents": "CCLabelTTF:getString()"},
{ "trigger": ":getString\tCCLabelTTF:getString()", "contents": "getString()"},
{ "trigger": "CCLabelTTF_disableStroke\tCCLabelTTF:disableStroke(_boo)", "contents": "CCLabelTTF:disableStroke(_boo)"},
{ "trigger": ":disableStroke\tCCLabelTTF:disableStroke(_boo)", "contents": "disableStroke(_boo)"},
{ "trigger": "CCActionManager\t", "contents": "CCActionManager"},
{ "trigger": "CCActionManager_resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "CCActionManager:resumeTargets(_CCSet)"},
{ "trigger": ":resumeTargets\tCCActionManager:resumeTargets(_CCSet)", "contents": "resumeTargets(_CCSet)"},
{ "trigger": "CCActionManager_resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "CCActionManager:resumeTarget(_CCObject)"},
{ "trigger": ":resumeTarget\tCCActionManager:resumeTarget(_CCObject)", "contents": "resumeTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeAllActions\tCCActionManager:removeAllActions()", "contents": "CCActionManager:removeAllActions()"},
{ "trigger": ":removeAllActions\tCCActionManager:removeAllActions()", "contents": "removeAllActions()"},
{ "trigger": "CCActionManager_pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "CCActionManager:pauseTarget(_CCObject)"},
{ "trigger": ":pauseTarget\tCCActionManager:pauseTarget(_CCObject)", "contents": "pauseTarget(_CCObject)"},
{ "trigger": "CCActionManager_numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "CCActionManager:numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": ":numberOfRunningActionsInTarget\tCCActionManager:numberOfRunningActionsInTarget(_CCObject)", "contents": "numberOfRunningActionsInTarget(_CCObject)"},
{ "trigger": "CCActionManager_removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "CCActionManager:removeActionByTag(_num,_CCObject)"},
{ "trigger": ":removeActionByTag\tCCActionManager:removeActionByTag(_num,_CCObject)", "contents": "removeActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "CCActionManager:removeAllActionsFromTarget(_CCObject)"},
{ "trigger": ":removeAllActionsFromTarget\tCCActionManager:removeAllActionsFromTarget(_CCObject)", "contents": "removeAllActionsFromTarget(_CCObject)"},
{ "trigger": "CCActionManager_pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "CCActionManager:pauseAllRunningActions()"},
{ "trigger": ":pauseAllRunningActions\tCCActionManager:pauseAllRunningActions()", "contents": "pauseAllRunningActions()"},
{ "trigger": "CCActionManager_getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "CCActionManager:getActionByTag(_num,_CCObject)"},
{ "trigger": ":getActionByTag\tCCActionManager:getActionByTag(_num,_CCObject)", "contents": "getActionByTag(_num,_CCObject)"},
{ "trigger": "CCActionManager_addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "CCActionManager:addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": ":addAction\tCCActionManager:addAction(_CCAction,_CCNode,_boo)", "contents": "addAction(_CCAction,_CCNode,_boo)"},
{ "trigger": "CCActionManager_removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "CCActionManager:removeAction(_CCAction)"},
{ "trigger": ":removeAction\tCCActionManager:removeAction(_CCAction)", "contents": "removeAction(_CCAction)"},
{ "trigger": "CCParticleMeteor\t", "contents": "CCParticleMeteor"},
{ "trigger": "CCParticleMeteor_createWithTotalParticles\tCCParticleMeteor:createWithTotalParticles(_num)", "contents": "CCParticleMeteor:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleMeteor:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleMeteor_create\tCCParticleMeteor:create()", "contents": "CCParticleMeteor:create()"},
{ "trigger": ":create\tCCParticleMeteor:create()", "contents": "create()"},
{ "trigger": "CCTransitionPageTurn\t", "contents": "CCTransitionPageTurn"},
{ "trigger": "CCTransitionPageTurn_create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "CCTransitionPageTurn:create(_num,_CCScene,_boo)"},
{ "trigger": ":create\tCCTransitionPageTurn:create(_num,_CCScene,_boo)", "contents": "create(_num,_CCScene,_boo)"},
{ "trigger": "CCRepeat\t", "contents": "CCRepeat"},
{ "trigger": "CCRepeat_create\tCCRepeat:create(_CCFiniteTimeAction,_num)", "contents": "CCRepeat:create(_CCFiniteTimeAction,_num)"},
{ "trigger": ":create\tCCRepeat:create(_CCFiniteTimeAction,_num)", "contents": "create(_CCFiniteTimeAction,_num)"},
{ "trigger": "CCEaseExponentialIn\t", "contents": "CCEaseExponentialIn"},
{ "trigger": "CCEaseExponentialIn_create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "CCEaseExponentialIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseExponentialIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCScaleBy\t", "contents": "CCScaleBy"},
{ "trigger": "CCScaleBy_create\tCCScaleBy:create(_num,_num)", "contents": "CCScaleBy:create(_num,_num)"},
{ "trigger": ":create\tCCScaleBy:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCDirector\t", "contents": "CCDirector"},
{ "trigger": "CCDirector_getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "CCDirector:getTouchDispatcher()"},
{ "trigger": ":getTouchDispatcher\tCCDirector:getTouchDispatcher()", "contents": "getTouchDispatcher()"},
{ "trigger": "CCDirector_replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "CCDirector:replaceScene(_CCScene)"},
{ "trigger": ":replaceScene\tCCDirector:replaceScene(_CCScene)", "contents": "replaceScene(_CCScene)"},
{ "trigger": "CCDirector_getOpenGLView\tCCDirector:getOpenGLView()", "contents": "CCDirector:getOpenGLView()"},
{ "trigger": ":getOpenGLView\tCCDirector:getOpenGLView()", "contents": "getOpenGLView()"},
{ "trigger": "CCDirector_getDeltaTime\tCCDirector:getDeltaTime()", "contents": "CCDirector:getDeltaTime()"},
{ "trigger": ":getDeltaTime\tCCDirector:getDeltaTime()", "contents": "getDeltaTime()"},
{ "trigger": "CCDirector_getScheduler\tCCDirector:getScheduler()", "contents": "CCDirector:getScheduler()"},
{ "trigger": ":getScheduler\tCCDirector:getScheduler()", "contents": "getScheduler()"},
{ "trigger": "CCDirector_stopAnimation\tCCDirector:stopAnimation()", "contents": "CCDirector:stopAnimation()"},
{ "trigger": ":stopAnimation\tCCDirector:stopAnimation()", "contents": "stopAnimation()"},
{ "trigger": "CCDirector_getProjection\tCCDirector:getProjection()", "contents": "CCDirector:getProjection()"},
{ "trigger": ":getProjection\tCCDirector:getProjection()", "contents": "getProjection()"},
{ "trigger": "CCDirector_getKeypadDispatcher\tCCDirector:getKeypadDispatcher()", "contents": "CCDirector:getKeypadDispatcher()"},
{ "trigger": ":getKeypadDispatcher\tCCDirector:getKeypadDispatcher()", "contents": "getKeypadDispatcher()"},
{ "trigger": "CCDirector_runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "CCDirector:runWithScene(_CCScene)"},
{ "trigger": ":runWithScene\tCCDirector:runWithScene(_CCScene)", "contents": "runWithScene(_CCScene)"},
{ "trigger": "CCDirector_setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "CCDirector:setContentScaleFactor(_num)"},
{ "trigger": ":setContentScaleFactor\tCCDirector:setContentScaleFactor(_num)", "contents": "setContentScaleFactor(_num)"},
{ "trigger": "CCDirector_setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "CCDirector:setDepthTest(_boo)"},
{ "trigger": ":setDepthTest\tCCDirector:setDepthTest(_boo)", "contents": "setDepthTest(_boo)"},
{ "trigger": "CCDirector_pause\tCCDirector:pause()", "contents": "CCDirector:pause()"},
{ "trigger": ":pause\tCCDirector:pause()", "contents": "pause()"},
{ "trigger": "CCDirector_getTotalFrames\tCCDirector:getTotalFrames()", "contents": "CCDirector:getTotalFrames()"},
{ "trigger": ":getTotalFrames\tCCDirector:getTotalFrames()", "contents": "getTotalFrames()"},
{ "trigger": "CCDirector_setProjection\tCCDirector:setProjection(_num)", "contents": "CCDirector:setProjection(_num)"},
{ "trigger": ":setProjection\tCCDirector:setProjection(_num)", "contents": "setProjection(_num)"},
{ "trigger": "CCDirector_popToRootScene\tCCDirector:popToRootScene()", "contents": "CCDirector:popToRootScene()"},
{ "trigger": ":popToRootScene\tCCDirector:popToRootScene()", "contents": "popToRootScene()"},
{ "trigger": "CCDirector_startAnimation\tCCDirector:startAnimation()", "contents": "CCDirector:startAnimation()"},
{ "trigger": ":startAnimation\tCCDirector:startAnimation()", "contents": "startAnimation()"},
{ "trigger": "CCDirector_getVisibleSize\tCCDirector:getVisibleSize()", "contents": "CCDirector:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCDirector:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCDirector_setAnimationInterval\tCCDirector:setAnimationInterval(_num)", "contents": "CCDirector:setAnimationInterval(_num)"},
{ "trigger": ":setAnimationInterval\tCCDirector:setAnimationInterval(_num)", "contents": "setAnimationInterval(_num)"},
{ "trigger": "CCDirector_setGLDefaultValues\tCCDirector:setGLDefaultValues()", "contents": "CCDirector:setGLDefaultValues()"},
{ "trigger": ":setGLDefaultValues\tCCDirector:setGLDefaultValues()", "contents": "setGLDefaultValues()"},
{ "trigger": "CCDirector_pushScene\tCCDirector:pushScene(_CCScene)", "contents": "CCDirector:pushScene(_CCScene)"},
{ "trigger": ":pushScene\tCCDirector:pushScene(_CCScene)", "contents": "pushScene(_CCScene)"},
{ "trigger": "CCDirector_sharedDirector\tCCDirector:sharedDirector()", "contents": "CCDirector:sharedDirector()"},
{ "trigger": ":sharedDirector\tCCDirector:sharedDirector()", "contents": "sharedDirector()"},
{ "trigger": "CCDirector_endToLua\tCCDirector:endToLua()", "contents": "CCDirector:endToLua()"},
{ "trigger": ":endToLua\tCCDirector:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCDirector_convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "CCDirector:convertToGL(_CCPoint)"},
{ "trigger": ":convertToGL\tCCDirector:convertToGL(_CCPoint)", "contents": "convertToGL(_CCPoint)"},
{ "trigger": "CCDirector_getRunningScene\tCCDirector:getRunningScene()", "contents": "CCDirector:getRunningScene()"},
{ "trigger": ":getRunningScene\tCCDirector:getRunningScene()", "contents": "getRunningScene()"},
{ "trigger": "CCDirector_getWinSize\tCCDirector:getWinSize()", "contents": "CCDirector:getWinSize()"},
{ "trigger": ":getWinSize\tCCDirector:getWinSize()", "contents": "getWinSize()"},
{ "trigger": "CCDirector_getActionManager\tCCDirector:getActionManager()", "contents": "CCDirector:getActionManager()"},
{ "trigger": ":getActionManager\tCCDirector:getActionManager()", "contents": "getActionManager()"},
{ "trigger": "CCDirector_isPaused\tCCDirector:isPaused()", "contents": "CCDirector:isPaused()"},
{ "trigger": ":isPaused\tCCDirector:isPaused()", "contents": "isPaused()"},
{ "trigger": "CCDirector_popScene\tCCDirector:popScene()", "contents": "CCDirector:popScene()"},
{ "trigger": ":popScene\tCCDirector:popScene()", "contents": "popScene()"},
{ "trigger": "CCDirector_setAlphaBlending\tCCDirector:setAlphaBlending(_boo)", "contents": "CCDirector:setAlphaBlending(_boo)"},
{ "trigger": ":setAlphaBlending\tCCDirector:setAlphaBlending(_boo)", "contents": "setAlphaBlending(_boo)"},
{ "trigger": "CCDirector_convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "CCDirector:convertToUI(_CCPoint)"},
{ "trigger": ":convertToUI\tCCDirector:convertToUI(_CCPoint)", "contents": "convertToUI(_CCPoint)"},
{ "trigger": "CCDirector_getSecondsPerFrame\tCCDirector:getSecondsPerFrame()", "contents": "CCDirector:getSecondsPerFrame()"},
{ "trigger": ":getSecondsPerFrame\tCCDirector:getSecondsPerFrame()", "contents": "getSecondsPerFrame()"},
{ "trigger": "CCDirector_getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "CCDirector:getAnimationInterval()"},
{ "trigger": ":getAnimationInterval\tCCDirector:getAnimationInterval()", "contents": "getAnimationInterval()"},
{ "trigger": "CCDirector_purgeCachedData\tCCDirector:purgeCachedData()", "contents": "CCDirector:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCDirector:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCDirector_setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "CCDirector:setDisplayStats(_boo)"},
{ "trigger": ":setDisplayStats\tCCDirector:setDisplayStats(_boo)", "contents": "setDisplayStats(_boo)"},
{ "trigger": "CCDirector_getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "CCDirector:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCDirector:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCDirector_resume\tCCDirector:resume()", "contents": "CCDirector:resume()"},
{ "trigger": ":resume\tCCDirector:resume()", "contents": "resume()"},
{ "trigger": "CCDirector_setNextDeltaTimeZero\tCCDirector:setNextDeltaTimeZero(_boo)", "contents": "CCDirector:setNextDeltaTimeZero(_boo)"},
{ "trigger": ":setNextDeltaTimeZero\tCCDirector:setNextDeltaTimeZero(_boo)", "contents": "setNextDeltaTimeZero(_boo)"},
{ "trigger": "CCDirector_getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "CCDirector:getContentScaleFactor()"},
{ "trigger": ":getContentScaleFactor\tCCDirector:getContentScaleFactor()", "contents": "getContentScaleFactor()"},
{ "trigger": "CCDirector_getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "CCDirector:getWinSizeInPixels()"},
{ "trigger": ":getWinSizeInPixels\tCCDirector:getWinSizeInPixels()", "contents": "getWinSizeInPixels()"},
{ "trigger": "CCDirector_isDisplayStats\tCCDirector:isDisplayStats()", "contents": "CCDirector:isDisplayStats()"},
{ "trigger": ":isDisplayStats\tCCDirector:isDisplayStats()", "contents": "isDisplayStats()"},
{ "trigger": "CCDirector_getAccelerometer\tCCDirector:getAccelerometer()", "contents": "CCDirector:getAccelerometer()"},
{ "trigger": ":getAccelerometer\tCCDirector:getAccelerometer()", "contents": "getAccelerometer()"},
{ "trigger": "CCDirector_isNextDeltaTimeZero\tCCDirector:isNextDeltaTimeZero()", "contents": "CCDirector:isNextDeltaTimeZero()"},
{ "trigger": ":isNextDeltaTimeZero\tCCDirector:isNextDeltaTimeZero()", "contents": "isNextDeltaTimeZero()"},
{ "trigger": "CCDirector_popToSceneStackLevel\tCCDirector:popToSceneStackLevel(_num)", "contents": "CCDirector:popToSceneStackLevel(_num)"},
{ "trigger": ":popToSceneStackLevel\tCCDirector:popToSceneStackLevel(_num)", "contents": "popToSceneStackLevel(_num)"},
{ "trigger": "CCBReader\t", "contents": "CCBReader"},
{ "trigger": "CCBReader_getOwner\tCCBReader:getOwner()", "contents": "CCBReader:getOwner()"},
{ "trigger": ":getOwner\tCCBReader:getOwner()", "contents": "getOwner()"},
{ "trigger": "CCBReader_call\tCCBReader:call()", "contents": "CCBReader:call()"},
{ "trigger": ":call\tCCBReader:call()", "contents": "call()"},
{ "trigger": "CCBReader_getNodesWithAnimationManagers\tCCBReader:getNodesWithAnimationManagers()", "contents": "CCBReader:getNodesWithAnimationManagers()"},
{ "trigger": ":getNodesWithAnimationManagers\tCCBReader:getNodesWithAnimationManagers()", "contents": "getNodesWithAnimationManagers()"},
{ "trigger": "CCBReader_getAnimationManagersForNodes\tCCBReader:getAnimationManagersForNodes()", "contents": "CCBReader:getAnimationManagersForNodes()"},
{ "trigger": ":getAnimationManagersForNodes\tCCBReader:getAnimationManagersForNodes()", "contents": "getAnimationManagersForNodes()"},
{ "trigger": "CCBReader_getOwnerOutletNodes\tCCBReader:getOwnerOutletNodes()", "contents": "CCBReader:getOwnerOutletNodes()"},
{ "trigger": ":getOwnerOutletNodes\tCCBReader:getOwnerOutletNodes()", "contents": "getOwnerOutletNodes()"},
{ "trigger": "CCBReader_setCCBRootPath\tCCBReader:setCCBRootPath(_str)", "contents": "CCBReader:setCCBRootPath(_str)"},
{ "trigger": ":setCCBRootPath\tCCBReader:setCCBRootPath(_str)", "contents": "setCCBRootPath(_str)"},
{ "trigger": "CCBReader_getAnimationManager\tCCBReader:getAnimationManager()", "contents": "CCBReader:getAnimationManager()"},
{ "trigger": ":getAnimationManager\tCCBReader:getAnimationManager()", "contents": "getAnimationManager()"},
{ "trigger": "CCBReader_getCCBRootPath\tCCBReader:getCCBRootPath()", "contents": "CCBReader:getCCBRootPath()"},
{ "trigger": ":getCCBRootPath\tCCBReader:getCCBRootPath()", "contents": "getCCBRootPath()"},
{ "trigger": "CCBReader_setAnimationManagers\tCCBReader:setAnimationManagers(_CCDictionary)", "contents": "CCBReader:setAnimationManagers(_CCDictionary)"},
{ "trigger": ":setAnimationManagers\tCCBReader:setAnimationManagers(_CCDictionary)", "contents": "setAnimationManagers(_CCDictionary)"},
{ "trigger": "CCBReader_getOwnerOutletNames\tCCBReader:getOwnerOutletNames()", "contents": "CCBReader:getOwnerOutletNames()"},
{ "trigger": ":getOwnerOutletNames\tCCBReader:getOwnerOutletNames()", "contents": "getOwnerOutletNames()"},
{ "trigger": "CCBReader_new\tCCBReader:new()", "contents": "CCBReader:new()"},
{ "trigger": ":new\tCCBReader:new()", "contents": "new()"},
{ "trigger": "CCBReader_readUTF8\tCCBReader:readUTF8()", "contents": "CCBReader:readUTF8()"},
{ "trigger": ":readUTF8\tCCBReader:readUTF8()", "contents": "readUTF8()"},
{ "trigger": "CCBReader_new_local\tCCBReader:new_local()", "contents": "CCBReader:new_local()"},
{ "trigger": ":new_local\tCCBReader:new_local()", "contents": "new_local()"},
{ "trigger": "CCBReader_setResolutionScale\tCCBReader:setResolutionScale(_num)", "contents": "CCBReader:setResolutionScale(_num)"},
{ "trigger": ":setResolutionScale\tCCBReader:setResolutionScale(_num)", "contents": "setResolutionScale(_num)"},
{ "trigger": "CCBReader_delete\tCCBReader:delete()", "contents": "CCBReader:delete()"},
{ "trigger": ":delete\tCCBReader:delete()", "contents": "delete()"},
{ "trigger": "CCBReader_getOwnerCallbackNames\tCCBReader:getOwnerCallbackNames()", "contents": "CCBReader:getOwnerCallbackNames()"},
{ "trigger": ":getOwnerCallbackNames\tCCBReader:getOwnerCallbackNames()", "contents": "getOwnerCallbackNames()"},
{ "trigger": "CCBReader_getOwnerCallbackNodes\tCCBReader:getOwnerCallbackNodes()", "contents": "CCBReader:getOwnerCallbackNodes()"},
{ "trigger": ":getOwnerCallbackNodes\tCCBReader:getOwnerCallbackNodes()", "contents": "getOwnerCallbackNodes()"},
{ "trigger": "CCControlStepper\t", "contents": "CCControlStepper"},
{ "trigger": "CCControlStepper_getValue\tCCControlStepper:getValue()", "contents": "CCControlStepper:getValue()"},
{ "trigger": ":getValue\tCCControlStepper:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlStepper_setMinimumValue\tCCControlStepper:setMinimumValue(_num)", "contents": "CCControlStepper:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlStepper:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlStepper_setMaximumValue\tCCControlStepper:setMaximumValue(_num)", "contents": "CCControlStepper:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlStepper:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlStepper_setWraps\tCCControlStepper:setWraps(_boo)", "contents": "CCControlStepper:setWraps(_boo)"},
{ "trigger": ":setWraps\tCCControlStepper:setWraps(_boo)", "contents": "setWraps(_boo)"},
{ "trigger": "CCControlStepper_setStepValue\tCCControlStepper:setStepValue(_num)", "contents": "CCControlStepper:setStepValue(_num)"},
{ "trigger": ":setStepValue\tCCControlStepper:setStepValue(_num)", "contents": "setStepValue(_num)"},
{ "trigger": "CCControlStepper_setValue\tCCControlStepper:setValue(_num)", "contents": "CCControlStepper:setValue(_num)"},
{ "trigger": ":setValue\tCCControlStepper:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlStepper_create\tCCControlStepper:create(_CCSprite,_CCSprite)", "contents": "CCControlStepper:create(_CCSprite,_CCSprite)"},
{ "trigger": ":create\tCCControlStepper:create(_CCSprite,_CCSprite)", "contents": "create(_CCSprite,_CCSprite)"},
{ "trigger": "CCControlStepper_isContinuous\tCCControlStepper:isContinuous()", "contents": "CCControlStepper:isContinuous()"},
{ "trigger": ":isContinuous\tCCControlStepper:isContinuous()", "contents": "isContinuous()"},
{ "trigger": "CCControlStepper_setValueWithSendingEvent\tCCControlStepper:setValueWithSendingEvent(_num,_boo)", "contents": "CCControlStepper:setValueWithSendingEvent(_num,_boo)"},
{ "trigger": ":setValueWithSendingEvent\tCCControlStepper:setValueWithSendingEvent(_num,_boo)", "contents": "setValueWithSendingEvent(_num,_boo)"},
{ "trigger": "CCSet\t", "contents": "CCSet"},
{ "trigger": "CCSet_anyObject\tCCSet:anyObject()", "contents": "CCSet:anyObject()"},
{ "trigger": ":anyObject\tCCSet:anyObject()", "contents": "anyObject()"},
{ "trigger": "CCSet_count\tCCSet:count()", "contents": "CCSet:count()"},
{ "trigger": ":count\tCCSet:count()", "contents": "count()"},
{ "trigger": "CCSet_containsObject\tCCSet:containsObject(_CCObject)", "contents": "CCSet:containsObject(_CCObject)"},
{ "trigger": ":containsObject\tCCSet:containsObject(_CCObject)", "contents": "containsObject(_CCObject)"},
{ "trigger": "CCSet_removeAllObjects\tCCSet:removeAllObjects()", "contents": "CCSet:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCSet:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCSet_removeObject\tCCSet:removeObject(_CCObject)", "contents": "CCSet:removeObject(_CCObject)"},
{ "trigger": ":removeObject\tCCSet:removeObject(_CCObject)", "contents": "removeObject(_CCObject)"},
{ "trigger": "CCSet_mutableCopy\tCCSet:mutableCopy()", "contents": "CCSet:mutableCopy()"},
{ "trigger": ":mutableCopy\tCCSet:mutableCopy()", "contents": "mutableCopy()"},
{ "trigger": "CCSet_addObject\tCCSet:addObject(_CCObject)", "contents": "CCSet:addObject(_CCObject)"},
{ "trigger": ":addObject\tCCSet:addObject(_CCObject)", "contents": "addObject(_CCObject)"},
{ "trigger": "CCSet_create\tCCSet:create()", "contents": "CCSet:create()"},
{ "trigger": ":create\tCCSet:create()", "contents": "create()"},
{ "trigger": "CCSet_copy\tCCSet:copy()", "contents": "CCSet:copy()"},
{ "trigger": ":copy\tCCSet:copy()", "contents": "copy()"},
{ "trigger": "CCParticleSnow\t", "contents": "CCParticleSnow"},
{ "trigger": "CCParticleSnow_createWithTotalParticles\tCCParticleSnow:createWithTotalParticles(_num)", "contents": "CCParticleSnow:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSnow:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSnow_create\tCCParticleSnow:create()", "contents": "CCParticleSnow:create()"},
{ "trigger": ":create\tCCParticleSnow:create()", "contents": "create()"},
{ "trigger": "CCPhysicsWorld\t", "contents": "CCPhysicsWorld"},
{ "trigger": "CCPhysicsWorld_addCollisionScriptListener\tCCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)", "contents": "CCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)"},
{ "trigger": ":addCollisionScriptListener\tCCPhysicsWorld:addCollisionScriptListener(_listener,_num,_num)", "contents": "addCollisionScriptListener(_listener,_num,_num)"},
{ "trigger": "CCPhysicsWorld_stop\tCCPhysicsWorld:stop()", "contents": "CCPhysicsWorld:stop()"},
{ "trigger": ":stop\tCCPhysicsWorld:stop()", "contents": "stop()"},
{ "trigger": "CCPhysicsWorld_setGravity\tCCPhysicsWorld:setGravity(_num,_num)", "contents": "CCPhysicsWorld:setGravity(_num,_num)"},
{ "trigger": ":setGravity\tCCPhysicsWorld:setGravity(_num,_num)", "contents": "setGravity(_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeBody\tCCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)", "contents": "CCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)"},
{ "trigger": ":removeBody\tCCPhysicsWorld:removeBody(_CCPhysicsBody,_boo)", "contents": "removeBody(_CCPhysicsBody,_boo)"},
{ "trigger": "CCPhysicsWorld_getGravity\tCCPhysicsWorld:getGravity(_num,_num)", "contents": "CCPhysicsWorld:getGravity(_num,_num)"},
{ "trigger": ":getGravity\tCCPhysicsWorld:getGravity(_num,_num)", "contents": "getGravity(_num,_num)"},
{ "trigger": "CCPhysicsWorld_createCircleBody\tCCPhysicsWorld:createCircleBody(_num,_num,_num,_num)", "contents": "CCPhysicsWorld:createCircleBody(_num,_num,_num,_num)"},
{ "trigger": ":createCircleBody\tCCPhysicsWorld:createCircleBody(_num,_num,_num,_num)", "contents": "createCircleBody(_num,_num,_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeCollisionScriptListener\tCCPhysicsWorld:removeCollisionScriptListener(_num,_num)", "contents": "CCPhysicsWorld:removeCollisionScriptListener(_num,_num)"},
{ "trigger": ":removeCollisionScriptListener\tCCPhysicsWorld:removeCollisionScriptListener(_num,_num)", "contents": "removeCollisionScriptListener(_num,_num)"},
{ "trigger": "CCPhysicsWorld_createDebugNode\tCCPhysicsWorld:createDebugNode()", "contents": "CCPhysicsWorld:createDebugNode()"},
{ "trigger": ":createDebugNode\tCCPhysicsWorld:createDebugNode()", "contents": "createDebugNode()"},
{ "trigger": "CCPhysicsWorld_create\tCCPhysicsWorld:create()", "contents": "CCPhysicsWorld:create()"},
{ "trigger": ":create\tCCPhysicsWorld:create()", "contents": "create()"},
{ "trigger": "CCPhysicsWorld_getDamping\tCCPhysicsWorld:getDamping()", "contents": "CCPhysicsWorld:getDamping()"},
{ "trigger": ":getDamping\tCCPhysicsWorld:getDamping()", "contents": "getDamping()"},
{ "trigger": "CCPhysicsWorld_setDamping\tCCPhysicsWorld:setDamping(_num)", "contents": "CCPhysicsWorld:setDamping(_num)"},
{ "trigger": ":setDamping\tCCPhysicsWorld:setDamping(_num)", "contents": "setDamping(_num)"},
{ "trigger": "CCPhysicsWorld_createBoxBody\tCCPhysicsWorld:createBoxBody(_num,_num,_num)", "contents": "CCPhysicsWorld:createBoxBody(_num,_num,_num)"},
{ "trigger": ":createBoxBody\tCCPhysicsWorld:createBoxBody(_num,_num,_num)", "contents": "createBoxBody(_num,_num,_num)"},
{ "trigger": "CCPhysicsWorld_getBodyByTag\tCCPhysicsWorld:getBodyByTag(_num)", "contents": "CCPhysicsWorld:getBodyByTag(_num)"},
{ "trigger": ":getBodyByTag\tCCPhysicsWorld:getBodyByTag(_num)", "contents": "getBodyByTag(_num)"},
{ "trigger": "CCPhysicsWorld_createPolygonBody\tCCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)", "contents": "CCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)"},
{ "trigger": ":createPolygonBody\tCCPhysicsWorld:createPolygonBody(_num,_val,_num,_num)", "contents": "createPolygonBody(_num,_val,_num,_num)"},
{ "trigger": "CCPhysicsWorld_removeAllCollisionListeners\tCCPhysicsWorld:removeAllCollisionListeners()", "contents": "CCPhysicsWorld:removeAllCollisionListeners()"},
{ "trigger": ":removeAllCollisionListeners\tCCPhysicsWorld:removeAllCollisionListeners()", "contents": "removeAllCollisionListeners()"},
{ "trigger": "CCPhysicsWorld_start\tCCPhysicsWorld:start()", "contents": "CCPhysicsWorld:start()"},
{ "trigger": ":start\tCCPhysicsWorld:start()", "contents": "start()"},
{ "trigger": "CCPhysicsWorld_getIdleSpeedThreshold\tCCPhysicsWorld:getIdleSpeedThreshold()", "contents": "CCPhysicsWorld:getIdleSpeedThreshold()"},
{ "trigger": ":getIdleSpeedThreshold\tCCPhysicsWorld:getIdleSpeedThreshold()", "contents": "getIdleSpeedThreshold()"},
{ "trigger": "CCPhysicsWorld_setIdleSpeedThreshold\tCCPhysicsWorld:setIdleSpeedThreshold(_num)", "contents": "CCPhysicsWorld:setIdleSpeedThreshold(_num)"},
{ "trigger": ":setIdleSpeedThreshold\tCCPhysicsWorld:setIdleSpeedThreshold(_num)", "contents": "setIdleSpeedThreshold(_num)"},
{ "trigger": "CCPhysicsWorld_removeBodyByTag\tCCPhysicsWorld:removeBodyByTag(_num,_boo)", "contents": "CCPhysicsWorld:removeBodyByTag(_num,_boo)"},
{ "trigger": ":removeBodyByTag\tCCPhysicsWorld:removeBodyByTag(_num,_boo)", "contents": "removeBodyByTag(_num,_boo)"},
{ "trigger": "CCPhysicsWorld_removeAllBodies\tCCPhysicsWorld:removeAllBodies(_boo)", "contents": "CCPhysicsWorld:removeAllBodies(_boo)"},
{ "trigger": ":removeAllBodies\tCCPhysicsWorld:removeAllBodies(_boo)", "contents": "removeAllBodies(_boo)"},
{ "trigger": "CCPhysicsWorld_addBody\tCCPhysicsWorld:addBody(_CCPhysicsBody)", "contents": "CCPhysicsWorld:addBody(_CCPhysicsBody)"},
{ "trigger": ":addBody\tCCPhysicsWorld:addBody(_CCPhysicsBody)", "contents": "addBody(_CCPhysicsBody)"},
{ "trigger": "CCPhysicsWorld_step\tCCPhysicsWorld:step(_num)", "contents": "CCPhysicsWorld:step(_num)"},
{ "trigger": ":step\tCCPhysicsWorld:step(_num)", "contents": "step(_num)"},
{ "trigger": "CCControlHuePicker\t", "contents": "CCControlHuePicker"},
{ "trigger": "CCControlHuePicker_getHuePercentage\tCCControlHuePicker:getHuePercentage()", "contents": "CCControlHuePicker:getHuePercentage()"},
{ "trigger": ":getHuePercentage\tCCControlHuePicker:getHuePercentage()", "contents": "getHuePercentage()"},
{ "trigger": "CCControlHuePicker_getHue\tCCControlHuePicker:getHue()", "contents": "CCControlHuePicker:getHue()"},
{ "trigger": ":getHue\tCCControlHuePicker:getHue()", "contents": "getHue()"},
{ "trigger": "CCControlHuePicker_setHue\tCCControlHuePicker:setHue(_num)", "contents": "CCControlHuePicker:setHue(_num)"},
{ "trigger": ":setHue\tCCControlHuePicker:setHue(_num)", "contents": "setHue(_num)"},
{ "trigger": "CCControlHuePicker_setHuePercentage\tCCControlHuePicker:setHuePercentage(_num)", "contents": "CCControlHuePicker:setHuePercentage(_num)"},
{ "trigger": ":setHuePercentage\tCCControlHuePicker:setHuePercentage(_num)", "contents": "setHuePercentage(_num)"},
{ "trigger": "CCControlHuePicker_create\tCCControlHuePicker:create(_CCNode,_CCPoint)", "contents": "CCControlHuePicker:create(_CCNode,_CCPoint)"},
{ "trigger": ":create\tCCControlHuePicker:create(_CCNode,_CCPoint)", "contents": "create(_CCNode,_CCPoint)"},
{ "trigger": "CCBProxy\t", "contents": "CCBProxy"},
{ "trigger": "CCBProxy_call\tCCBProxy:call()", "contents": "CCBProxy:call()"},
{ "trigger": ":call\tCCBProxy:call()", "contents": "call()"},
{ "trigger": "CCBProxy_new\tCCBProxy:new()", "contents": "CCBProxy:new()"},
{ "trigger": ":new\tCCBProxy:new()", "contents": "new()"},
{ "trigger": "CCBProxy_getNodeTypeName\tCCBProxy:getNodeTypeName(_CCNode)", "contents": "CCBProxy:getNodeTypeName(_CCNode)"},
{ "trigger": ":getNodeTypeName\tCCBProxy:getNodeTypeName(_CCNode)", "contents": "getNodeTypeName(_CCNode)"},
{ "trigger": "CCBProxy_new_local\tCCBProxy:new_local()", "contents": "CCBProxy:new_local()"},
{ "trigger": ":new_local\tCCBProxy:new_local()", "contents": "new_local()"},
{ "trigger": "CCBProxy_delete\tCCBProxy:delete()", "contents": "CCBProxy:delete()"},
{ "trigger": ":delete\tCCBProxy:delete()", "contents": "delete()"},
{ "trigger": "CCBProxy_createCCBReader\tCCBProxy:createCCBReader()", "contents": "CCBProxy:createCCBReader()"},
{ "trigger": ":createCCBReader\tCCBProxy:createCCBReader()", "contents": "createCCBReader()"},
{ "trigger": "CCBProxy_create\tCCBProxy:create()", "contents": "CCBProxy:create()"},
{ "trigger": ":create\tCCBProxy:create()", "contents": "create()"},
{ "trigger": "CCBProxy_setCallback\tCCBProxy:setCallback(_CCNode)", "contents": "CCBProxy:setCallback(_CCNode)"},
{ "trigger": ":setCallback\tCCBProxy:setCallback(_CCNode)", "contents": "setCallback(_CCNode)"},
{ "trigger": "CCBProxy_readCCBFromFile\tCCBProxy:readCCBFromFile(_str,_CCBReader,_boo)", "contents": "CCBProxy:readCCBFromFile(_str,_CCBReader,_boo)"},
{ "trigger": ":readCCBFromFile\tCCBProxy:readCCBFromFile(_str,_CCBReader,_boo)", "contents": "readCCBFromFile(_str,_CCBReader,_boo)"},
{ "trigger": "ccTexParams\t", "contents": "ccTexParams"},
{ "trigger": "ccTexParams_call\tccTexParams:call()", "contents": "ccTexParams:call()"},
{ "trigger": ":call\tccTexParams:call()", "contents": "call()"},
{ "trigger": "ccTexParams_new\tccTexParams:new()", "contents": "ccTexParams:new()"},
{ "trigger": ":new\tccTexParams:new()", "contents": "new()"},
{ "trigger": "ccTexParams_new_local\tccTexParams:new_local()", "contents": "ccTexParams:new_local()"},
{ "trigger": ":new_local\tccTexParams:new_local()", "contents": "new_local()"},
{ "trigger": "ccTexParams_delete\tccTexParams:delete()", "contents": "ccTexParams:delete()"},
{ "trigger": ":delete\tccTexParams:delete()", "contents": "delete()"},
{ "trigger": "CCCardinalSplineTo\t", "contents": "CCCardinalSplineTo"},
{ "trigger": "CCCardinalSplineTo_getPoints\tCCCardinalSplineTo:getPoints()", "contents": "CCCardinalSplineTo:getPoints()"},
{ "trigger": ":getPoints\tCCCardinalSplineTo:getPoints()", "contents": "getPoints()"},
{ "trigger": "CCCardinalSplineTo_setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "CCCardinalSplineTo:setPoints(_CCPointArray)"},
{ "trigger": ":setPoints\tCCCardinalSplineTo:setPoints(_CCPointArray)", "contents": "setPoints(_CCPointArray)"},
{ "trigger": "CCCardinalSplineTo_create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "CCCardinalSplineTo:create(_num,_CCPointArray,_num)"},
{ "trigger": ":create\tCCCardinalSplineTo:create(_num,_CCPointArray,_num)", "contents": "create(_num,_CCPointArray,_num)"},
{ "trigger": "CCTransitionFadeBL\t", "contents": "CCTransitionFadeBL"},
{ "trigger": "CCTransitionFadeBL_create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "CCTransitionFadeBL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeBL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCEaseInOut\t", "contents": "CCEaseInOut"},
{ "trigger": "CCEaseInOut_create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "CCEaseInOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseInOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCActionEase\t", "contents": "CCActionEase"},
{ "trigger": "CCActionEase_create\tCCActionEase:create(_CCActionInterval)", "contents": "CCActionEase:create(_CCActionInterval)"},
{ "trigger": ":create\tCCActionEase:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleFlower\t", "contents": "CCParticleFlower"},
{ "trigger": "CCParticleFlower_createWithTotalParticles\tCCParticleFlower:createWithTotalParticles(_num)", "contents": "CCParticleFlower:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleFlower:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleFlower_create\tCCParticleFlower:create()", "contents": "CCParticleFlower:create()"},
{ "trigger": ":create\tCCParticleFlower:create()", "contents": "create()"},
{ "trigger": "CCCamera\t", "contents": "CCCamera"},
{ "trigger": "CCCamera_call\tCCCamera:call()", "contents": "CCCamera:call()"},
{ "trigger": ":call\tCCCamera:call()", "contents": "call()"},
{ "trigger": "CCCamera_setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "CCCamera:setCenterXYZ(_num,_num,_num)"},
{ "trigger": ":setCenterXYZ\tCCCamera:setCenterXYZ(_num,_num,_num)", "contents": "setCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_isDirty\tCCCamera:isDirty()", "contents": "CCCamera:isDirty()"},
{ "trigger": ":isDirty\tCCCamera:isDirty()", "contents": "isDirty()"},
{ "trigger": "CCCamera_setDirty\tCCCamera:setDirty(_boo)", "contents": "CCCamera:setDirty(_boo)"},
{ "trigger": ":setDirty\tCCCamera:setDirty(_boo)", "contents": "setDirty(_boo)"},
{ "trigger": "CCCamera_init\tCCCamera:init()", "contents": "CCCamera:init()"},
{ "trigger": ":init\tCCCamera:init()", "contents": "init()"},
{ "trigger": "CCCamera_getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "CCCamera:getEyeXYZ(_num,_num,_num)"},
{ "trigger": ":getEyeXYZ\tCCCamera:getEyeXYZ(_num,_num,_num)", "contents": "getEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_new\tCCCamera:new()", "contents": "CCCamera:new()"},
{ "trigger": ":new\tCCCamera:new()", "contents": "new()"},
{ "trigger": "CCCamera_getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "CCCamera:getUpXYZ(_num,_num,_num)"},
{ "trigger": ":getUpXYZ\tCCCamera:getUpXYZ(_num,_num,_num)", "contents": "getUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "CCCamera:getCenterXYZ(_num,_num,_num)"},
{ "trigger": ":getCenterXYZ\tCCCamera:getCenterXYZ(_num,_num,_num)", "contents": "getCenterXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_restore\tCCCamera:restore()", "contents": "CCCamera:restore()"},
{ "trigger": ":restore\tCCCamera:restore()", "contents": "restore()"},
{ "trigger": "CCCamera_new_local\tCCCamera:new_local()", "contents": "CCCamera:new_local()"},
{ "trigger": ":new_local\tCCCamera:new_local()", "contents": "new_local()"},
{ "trigger": "CCCamera_delete\tCCCamera:delete()", "contents": "CCCamera:delete()"},
{ "trigger": ":delete\tCCCamera:delete()", "contents": "delete()"},
{ "trigger": "CCCamera_setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "CCCamera:setUpXYZ(_num,_num,_num)"},
{ "trigger": ":setUpXYZ\tCCCamera:setUpXYZ(_num,_num,_num)", "contents": "setUpXYZ(_num,_num,_num)"},
{ "trigger": "CCCamera_getZEye\tCCCamera:getZEye()", "contents": "CCCamera:getZEye()"},
{ "trigger": ":getZEye\tCCCamera:getZEye()", "contents": "getZEye()"},
{ "trigger": "CCCamera_locate\tCCCamera:locate()", "contents": "CCCamera:locate()"},
{ "trigger": ":locate\tCCCamera:locate()", "contents": "locate()"},
{ "trigger": "CCCamera_setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "CCCamera:setEyeXYZ(_num,_num,_num)"},
{ "trigger": ":setEyeXYZ\tCCCamera:setEyeXYZ(_num,_num,_num)", "contents": "setEyeXYZ(_num,_num,_num)"},
{ "trigger": "CCTMXMapInfo\t", "contents": "CCTMXMapInfo"},
{ "trigger": "CCTMXMapInfo_call\tCCTMXMapInfo:call()", "contents": "CCTMXMapInfo:call()"},
{ "trigger": ":call\tCCTMXMapInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXMapInfo_initWithXML\tCCTMXMapInfo:initWithXML(_str,_str)", "contents": "CCTMXMapInfo:initWithXML(_str,_str)"},
{ "trigger": ":initWithXML\tCCTMXMapInfo:initWithXML(_str,_str)", "contents": "initWithXML(_str,_str)"},
{ "trigger": "CCTMXMapInfo_setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "CCTMXMapInfo:setTileProperties(_CCDictionary)"},
{ "trigger": ":setTileProperties\tCCTMXMapInfo:setTileProperties(_CCDictionary)", "contents": "setTileProperties(_CCDictionary)"},
{ "trigger": "CCTMXMapInfo_getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "CCTMXMapInfo:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXMapInfo:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXMapInfo_initWithTMXFile\tCCTMXMapInfo:initWithTMXFile(_str)", "contents": "CCTMXMapInfo:initWithTMXFile(_str)"},
{ "trigger": ":initWithTMXFile\tCCTMXMapInfo:initWithTMXFile(_str)", "contents": "initWithTMXFile(_str)"},
{ "trigger": "CCTMXMapInfo_parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "CCTMXMapInfo:parseXMLString(_str)"},
{ "trigger": ":parseXMLString\tCCTMXMapInfo:parseXMLString(_str)", "contents": "parseXMLString(_str)"},
{ "trigger": "CCTMXMapInfo_getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "CCTMXMapInfo:getStoringCharacters()"},
{ "trigger": ":getStoringCharacters\tCCTMXMapInfo:getStoringCharacters()", "contents": "getStoringCharacters()"},
{ "trigger": "CCTMXMapInfo_delete\tCCTMXMapInfo:delete()", "contents": "CCTMXMapInfo:delete()"},
{ "trigger": ":delete\tCCTMXMapInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXMapInfo_getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "CCTMXMapInfo:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXMapInfo:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXMapInfo_formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "CCTMXMapInfo:formatWithXML(_str,_str)"},
{ "trigger": ":formatWithXML\tCCTMXMapInfo:formatWithXML(_str,_str)", "contents": "formatWithXML(_str,_str)"},
{ "trigger": "CCTMXMapInfo_getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "CCTMXMapInfo:getLayerAttribs()"},
{ "trigger": ":getLayerAttribs\tCCTMXMapInfo:getLayerAttribs()", "contents": "getLayerAttribs()"},
{ "trigger": "CCTMXMapInfo_getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "CCTMXMapInfo:getOrientation()"},
{ "trigger": ":getOrientation\tCCTMXMapInfo:getOrientation()", "contents": "getOrientation()"},
{ "trigger": "CCTMXMapInfo_getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "CCTMXMapInfo:getParentGID()"},
{ "trigger": ":getParentGID\tCCTMXMapInfo:getParentGID()", "contents": "getParentGID()"},
{ "trigger": "CCTMXMapInfo_getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "CCTMXMapInfo:getCurrentString()"},
{ "trigger": ":getCurrentString\tCCTMXMapInfo:getCurrentString()", "contents": "getCurrentString()"},
{ "trigger": "CCTMXMapInfo_getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "CCTMXMapInfo:getParentElement()"},
{ "trigger": ":getParentElement\tCCTMXMapInfo:getParentElement()", "contents": "getParentElement()"},
{ "trigger": "CCTMXMapInfo_getProperties\tCCTMXMapInfo:getProperties()", "contents": "CCTMXMapInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXMapInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXMapInfo_getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "CCTMXMapInfo:getTilesets()"},
{ "trigger": ":getTilesets\tCCTMXMapInfo:getTilesets()", "contents": "getTilesets()"},
{ "trigger": "CCTMXMapInfo_setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "CCTMXMapInfo:setCurrentString(_str)"},
{ "trigger": ":setCurrentString\tCCTMXMapInfo:setCurrentString(_str)", "contents": "setCurrentString(_str)"},
{ "trigger": "CCTMXMapInfo_parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "CCTMXMapInfo:parseXMLFile(_str)"},
{ "trigger": ":parseXMLFile\tCCTMXMapInfo:parseXMLFile(_str)", "contents": "parseXMLFile(_str)"},
{ "trigger": "CCTMXMapInfo_new\tCCTMXMapInfo:new()", "contents": "CCTMXMapInfo:new()"},
{ "trigger": ":new\tCCTMXMapInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXMapInfo_getLayers\tCCTMXMapInfo:getLayers()", "contents": "CCTMXMapInfo:getLayers()"},
{ "trigger": ":getLayers\tCCTMXMapInfo:getLayers()", "contents": "getLayers()"},
{ "trigger": "CCTMXMapInfo_formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "CCTMXMapInfo:formatWithTMXFile(_str)"},
{ "trigger": ":formatWithTMXFile\tCCTMXMapInfo:formatWithTMXFile(_str)", "contents": "formatWithTMXFile(_str)"},
{ "trigger": "CCTMXMapInfo_getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "CCTMXMapInfo:getTileProperties()"},
{ "trigger": ":getTileProperties\tCCTMXMapInfo:getTileProperties()", "contents": "getTileProperties()"},
{ "trigger": "CCTMXMapInfo_new_local\tCCTMXMapInfo:new_local()", "contents": "CCTMXMapInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXMapInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXMapInfo_getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "CCTMXMapInfo:getTMXFileName()"},
{ "trigger": ":getTMXFileName\tCCTMXMapInfo:getTMXFileName()", "contents": "getTMXFileName()"},
{ "trigger": "CCTMXMapInfo_getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "CCTMXMapInfo:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXMapInfo:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCTMXMapInfo_setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "CCTMXMapInfo:setTMXFileName(_str)"},
{ "trigger": ":setTMXFileName\tCCTMXMapInfo:setTMXFileName(_str)", "contents": "setTMXFileName(_str)"},
{ "trigger": "CCTwirl\t", "contents": "CCTwirl"},
{ "trigger": "CCTwirl_create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "CCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": ":create\tCCTwirl:create(_num,_CCSize,_CCPoint,_num,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num,_num)"},
{ "trigger": "CCPhysicsBody\t", "contents": "CCPhysicsBody"},
{ "trigger": "CCPhysicsBody_setCollisionGroup\tCCPhysicsBody:setCollisionGroup(_num)", "contents": "CCPhysicsBody:setCollisionGroup(_num)"},
{ "trigger": ":setCollisionGroup\tCCPhysicsBody:setCollisionGroup(_num)", "contents": "setCollisionGroup(_num)"},
{ "trigger": "CCPhysicsBody_addSegmentShape\tCCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)", "contents": "CCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": ":addSegmentShape\tCCPhysicsBody:addSegmentShape(_const_CCPoint,_const_CCPoint,_num)", "contents": "addSegmentShape(_const_CCPoint,_const_CCPoint,_num)"},
{ "trigger": "CCPhysicsBody_setForce\tCCPhysicsBody:setForce(_CCPhysicsVector)", "contents": "CCPhysicsBody:setForce(_CCPhysicsVector)"},
{ "trigger": ":setForce\tCCPhysicsBody:setForce(_CCPhysicsVector)", "contents": "setForce(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsBody_setTorque\tCCPhysicsBody:setTorque(_num)", "contents": "CCPhysicsBody:setTorque(_num)"},
{ "trigger": ":setTorque\tCCPhysicsBody:setTorque(_num)", "contents": "setTorque(_num)"},
{ "trigger": "CCPhysicsBody_setAngle\tCCPhysicsBody:setAngle(_num)", "contents": "CCPhysicsBody:setAngle(_num)"},
{ "trigger": ":setAngle\tCCPhysicsBody:setAngle(_num)", "contents": "setAngle(_num)"},
{ "trigger": "CCPhysicsBody_getAngleVelocityLimit\tCCPhysicsBody:getAngleVelocityLimit()", "contents": "CCPhysicsBody:getAngleVelocityLimit()"},
{ "trigger": ":getAngleVelocityLimit\tCCPhysicsBody:getAngleVelocityLimit()", "contents": "getAngleVelocityLimit()"},
{ "trigger": "CCPhysicsBody_createStaticBody\tCCPhysicsBody:createStaticBody(_CCPhysicsWorld)", "contents": "CCPhysicsBody:createStaticBody(_CCPhysicsWorld)"},
{ "trigger": ":createStaticBody\tCCPhysicsBody:createStaticBody(_CCPhysicsWorld)", "contents": "createStaticBody(_CCPhysicsWorld)"},
{ "trigger": "CCPhysicsBody_activate\tCCPhysicsBody:activate()", "contents": "CCPhysicsBody:activate()"},
{ "trigger": ":activate\tCCPhysicsBody:activate()", "contents": "activate()"},
{ "trigger": "CCPhysicsBody_setRotation\tCCPhysicsBody:setRotation(_num)", "contents": "CCPhysicsBody:setRotation(_num)"},
{ "trigger": ":setRotation\tCCPhysicsBody:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCPhysicsBody_setTag\tCCPhysicsBody:setTag(_num)", "contents": "CCPhysicsBody:setTag(_num)"},
{ "trigger": ":setTag\tCCPhysicsBody:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCPhysicsBody_setCollisionType\tCCPhysicsBody:setCollisionType(_num)", "contents": "CCPhysicsBody:setCollisionType(_num)"},
{ "trigger": ":setCollisionType\tCCPhysicsBody:setCollisionType(_num)", "contents": "setCollisionType(_num)"},
{ "trigger": "CCPhysicsBody_setElasticity\tCCPhysicsBody:setElasticity(_num)", "contents": "CCPhysicsBody:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsBody:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsBody_setVelocity\tCCPhysicsBody:setVelocity(_CCPhysicsVector)", "contents": "CCPhysicsBody:setVelocity(_CCPhysicsVector)"},
{ "trigger": ":setVelocity\tCCPhysicsBody:setVelocity(_CCPhysicsVector)", "contents": "setVelocity(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsBody_getCollisionLayers\tCCPhysicsBody:getCollisionLayers()", "contents": "CCPhysicsBody:getCollisionLayers()"},
{ "trigger": ":getCollisionLayers\tCCPhysicsBody:getCollisionLayers()", "contents": "getCollisionLayers()"},
{ "trigger": "CCPhysicsBody_getVelocity\tCCPhysicsBody:getVelocity(_num,_num)", "contents": "CCPhysicsBody:getVelocity(_num,_num)"},
{ "trigger": ":getVelocity\tCCPhysicsBody:getVelocity(_num,_num)", "contents": "getVelocity(_num,_num)"},
{ "trigger": "CCPhysicsBody_isSensor\tCCPhysicsBody:isSensor()", "contents": "CCPhysicsBody:isSensor()"},
{ "trigger": ":isSensor\tCCPhysicsBody:isSensor()", "contents": "isSensor()"},
{ "trigger": "CCPhysicsBody_unbind\tCCPhysicsBody:unbind()", "contents": "CCPhysicsBody:unbind()"},
{ "trigger": ":unbind\tCCPhysicsBody:unbind()", "contents": "unbind()"},
{ "trigger": "CCPhysicsBody_setPosition\tCCPhysicsBody:setPosition(_const_CCPoint)", "contents": "CCPhysicsBody:setPosition(_const_CCPoint)"},
{ "trigger": ":setPosition\tCCPhysicsBody:setPosition(_const_CCPoint)", "contents": "setPosition(_const_CCPoint)"},
{ "trigger": "CCPhysicsBody_getRotation\tCCPhysicsBody:getRotation()", "contents": "CCPhysicsBody:getRotation()"},
{ "trigger": ":getRotation\tCCPhysicsBody:getRotation()", "contents": "getRotation()"},
{ "trigger": "CCPhysicsBody_sleep\tCCPhysicsBody:sleep()", "contents": "CCPhysicsBody:sleep()"},
{ "trigger": ":sleep\tCCPhysicsBody:sleep()", "contents": "sleep()"},
{ "trigger": "CCPhysicsBody_getFriction\tCCPhysicsBody:getFriction()", "contents": "CCPhysicsBody:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsBody:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsBody_getNode\tCCPhysicsBody:getNode()", "contents": "CCPhysicsBody:getNode()"},
{ "trigger": ":getNode\tCCPhysicsBody:getNode()", "contents": "getNode()"},
{ "trigger": "CCPhysicsBody_create\tCCPhysicsBody:create(_CCPhysicsWorld,_num,_num)", "contents": "CCPhysicsBody:create(_CCPhysicsWorld,_num,_num)"},
{ "trigger": ":create\tCCPhysicsBody:create(_CCPhysicsWorld,_num,_num)", "contents": "create(_CCPhysicsWorld,_num,_num)"},
{ "trigger": "CCPhysicsBody_getCollisionGroup\tCCPhysicsBody:getCollisionGroup()", "contents": "CCPhysicsBody:getCollisionGroup()"},
{ "trigger": ":getCollisionGroup\tCCPhysicsBody:getCollisionGroup()", "contents": "getCollisionGroup()"},
{ "trigger": "CCPhysicsBody_setMass\tCCPhysicsBody:setMass(_num)", "contents": "CCPhysicsBody:setMass(_num)"},
{ "trigger": ":setMass\tCCPhysicsBody:setMass(_num)", "contents": "setMass(_num)"},
{ "trigger": "CCPhysicsBody_setIsSensor\tCCPhysicsBody:setIsSensor(_boo)", "contents": "CCPhysicsBody:setIsSensor(_boo)"},
{ "trigger": ":setIsSensor\tCCPhysicsBody:setIsSensor(_boo)", "contents": "setIsSensor(_boo)"},
{ "trigger": "CCPhysicsBody_getTorque\tCCPhysicsBody:getTorque()", "contents": "CCPhysicsBody:getTorque()"},
{ "trigger": ":getTorque\tCCPhysicsBody:getTorque()", "contents": "getTorque()"},
{ "trigger": "CCPhysicsBody_getVelocityLimit\tCCPhysicsBody:getVelocityLimit()", "contents": "CCPhysicsBody:getVelocityLimit()"},
{ "trigger": ":getVelocityLimit\tCCPhysicsBody:getVelocityLimit()", "contents": "getVelocityLimit()"},
{ "trigger": "CCPhysicsBody_setName\tCCPhysicsBody:setName(_str)", "contents": "CCPhysicsBody:setName(_str)"},
{ "trigger": ":setName\tCCPhysicsBody:setName(_str)", "contents": "setName(_str)"},
{ "trigger": "CCPhysicsBody_removeShape\tCCPhysicsBody:removeShape(_CCPhysicsShape)", "contents": "CCPhysicsBody:removeShape(_CCPhysicsShape)"},
{ "trigger": ":removeShape\tCCPhysicsBody:removeShape(_CCPhysicsShape)", "contents": "removeShape(_CCPhysicsShape)"},
{ "trigger": "CCPhysicsBody_isSleeping\tCCPhysicsBody:isSleeping()", "contents": "CCPhysicsBody:isSleeping()"},
{ "trigger": ":isSleeping\tCCPhysicsBody:isSleeping()", "contents": "isSleeping()"},
{ "trigger": "CCPhysicsBody_removeShapeAtIndex\tCCPhysicsBody:removeShapeAtIndex(_num)", "contents": "CCPhysicsBody:removeShapeAtIndex(_num)"},
{ "trigger": ":removeShapeAtIndex\tCCPhysicsBody:removeShapeAtIndex(_num)", "contents": "removeShapeAtIndex(_num)"},
{ "trigger": "CCPhysicsBody_setFriction\tCCPhysicsBody:setFriction(_num)", "contents": "CCPhysicsBody:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsBody:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCPhysicsBody_dist\tCCPhysicsBody:dist(_CCPhysicsBody)", "contents": "CCPhysicsBody:dist(_CCPhysicsBody)"},
{ "trigger": ":dist\tCCPhysicsBody:dist(_CCPhysicsBody)", "contents": "dist(_CCPhysicsBody)"},
{ "trigger": "CCPhysicsBody_getAngle\tCCPhysicsBody:getAngle()", "contents": "CCPhysicsBody:getAngle()"},
{ "trigger": ":getAngle\tCCPhysicsBody:getAngle()", "contents": "getAngle()"},
{ "trigger": "CCPhysicsBody_setCollisionLayers\tCCPhysicsBody:setCollisionLayers(_num)", "contents": "CCPhysicsBody:setCollisionLayers(_num)"},
{ "trigger": ":setCollisionLayers\tCCPhysicsBody:setCollisionLayers(_num)", "contents": "setCollisionLayers(_num)"},
{ "trigger": "CCPhysicsBody_getTag\tCCPhysicsBody:getTag()", "contents": "CCPhysicsBody:getTag()"},
{ "trigger": ":getTag\tCCPhysicsBody:getTag()", "contents": "getTag()"},
{ "trigger": "CCPhysicsBody_setAngleVelocityLimit\tCCPhysicsBody:setAngleVelocityLimit(_num)", "contents": "CCPhysicsBody:setAngleVelocityLimit(_num)"},
{ "trigger": ":setAngleVelocityLimit\tCCPhysicsBody:setAngleVelocityLimit(_num)", "contents": "setAngleVelocityLimit(_num)"},
{ "trigger": "CCPhysicsBody_getMass\tCCPhysicsBody:getMass()", "contents": "CCPhysicsBody:getMass()"},
{ "trigger": ":getMass\tCCPhysicsBody:getMass()", "contents": "getMass()"},
{ "trigger": "CCPhysicsBody_getPosition\tCCPhysicsBody:getPosition(_num,_num)", "contents": "CCPhysicsBody:getPosition(_num,_num)"},
{ "trigger": ":getPosition\tCCPhysicsBody:getPosition(_num,_num)", "contents": "getPosition(_num,_num)"},
{ "trigger": "CCPhysicsBody_getElasticity\tCCPhysicsBody:getElasticity()", "contents": "CCPhysicsBody:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsBody:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsBody_resetForces\tCCPhysicsBody:resetForces()", "contents": "CCPhysicsBody:resetForces()"},
{ "trigger": ":resetForces\tCCPhysicsBody:resetForces()", "contents": "resetForces()"},
{ "trigger": "CCPhysicsBody_applyForce\tCCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)", "contents": "CCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)"},
{ "trigger": ":applyForce\tCCPhysicsBody:applyForce(_CCPhysicsVector,_num,_num)", "contents": "applyForce(_CCPhysicsVector,_num,_num)"},
{ "trigger": "CCPhysicsBody_addBoxShape\tCCPhysicsBody:addBoxShape(_num,_num)", "contents": "CCPhysicsBody:addBoxShape(_num,_num)"},
{ "trigger": ":addBoxShape\tCCPhysicsBody:addBoxShape(_num,_num)", "contents": "addBoxShape(_num,_num)"},
{ "trigger": "CCPhysicsBody_setAngleVelocity\tCCPhysicsBody:setAngleVelocity(_num)", "contents": "CCPhysicsBody:setAngleVelocity(_num)"},
{ "trigger": ":setAngleVelocity\tCCPhysicsBody:setAngleVelocity(_num)", "contents": "setAngleVelocity(_num)"},
{ "trigger": "CCPhysicsBody_setInertia\tCCPhysicsBody:setInertia(_num)", "contents": "CCPhysicsBody:setInertia(_num)"},
{ "trigger": ":setInertia\tCCPhysicsBody:setInertia(_num)", "contents": "setInertia(_num)"},
{ "trigger": "CCPhysicsBody_getAngleVelocity\tCCPhysicsBody:getAngleVelocity()", "contents": "CCPhysicsBody:getAngleVelocity()"},
{ "trigger": ":getAngleVelocity\tCCPhysicsBody:getAngleVelocity()", "contents": "getAngleVelocity()"},
{ "trigger": "CCPhysicsBody_setVelocityLimit\tCCPhysicsBody:setVelocityLimit(_num)", "contents": "CCPhysicsBody:setVelocityLimit(_num)"},
{ "trigger": ":setVelocityLimit\tCCPhysicsBody:setVelocityLimit(_num)", "contents": "setVelocityLimit(_num)"},
{ "trigger": "CCPhysicsBody_defaultStaticBody\tCCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)", "contents": "CCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)"},
{ "trigger": ":defaultStaticBody\tCCPhysicsBody:defaultStaticBody(_CCPhysicsWorld)", "contents": "defaultStaticBody(_CCPhysicsWorld)"},
{ "trigger": "CCPhysicsBody_getForce\tCCPhysicsBody:getForce(_num,_num)", "contents": "CCPhysicsBody:getForce(_num,_num)"},
{ "trigger": ":getForce\tCCPhysicsBody:getForce(_num,_num)", "contents": "getForce(_num,_num)"},
{ "trigger": "CCPhysicsBody_getInertia\tCCPhysicsBody:getInertia()", "contents": "CCPhysicsBody:getInertia()"},
{ "trigger": ":getInertia\tCCPhysicsBody:getInertia()", "contents": "getInertia()"},
{ "trigger": "CCPhysicsBody_addPolygonShape\tCCPhysicsBody:addPolygonShape(_num,_num,_num)", "contents": "CCPhysicsBody:addPolygonShape(_num,_num,_num)"},
{ "trigger": ":addPolygonShape\tCCPhysicsBody:addPolygonShape(_num,_num,_num)", "contents": "addPolygonShape(_num,_num,_num)"},
{ "trigger": "CCPhysicsBody_applyImpulse\tCCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)", "contents": "CCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)"},
{ "trigger": ":applyImpulse\tCCPhysicsBody:applyImpulse(_CCPhysicsVector,_num,_num)", "contents": "applyImpulse(_CCPhysicsVector,_num,_num)"},
{ "trigger": "CCPhysicsBody_removeAllShape\tCCPhysicsBody:removeAllShape()", "contents": "CCPhysicsBody:removeAllShape()"},
{ "trigger": ":removeAllShape\tCCPhysicsBody:removeAllShape()", "contents": "removeAllShape()"},
{ "trigger": "CCPhysicsBody_removeSelf\tCCPhysicsBody:removeSelf(_boo)", "contents": "CCPhysicsBody:removeSelf(_boo)"},
{ "trigger": ":removeSelf\tCCPhysicsBody:removeSelf(_boo)", "contents": "removeSelf(_boo)"},
{ "trigger": "CCPhysicsBody_addCircleShape\tCCPhysicsBody:addCircleShape(_num,_num,_num)", "contents": "CCPhysicsBody:addCircleShape(_num,_num,_num)"},
{ "trigger": ":addCircleShape\tCCPhysicsBody:addCircleShape(_num,_num,_num)", "contents": "addCircleShape(_num,_num,_num)"},
{ "trigger": "CCPhysicsBody_getName\tCCPhysicsBody:getName()", "contents": "CCPhysicsBody:getName()"},
{ "trigger": ":getName\tCCPhysicsBody:getName()", "contents": "getName()"},
{ "trigger": "CCPhysicsBody_getCollisionType\tCCPhysicsBody:getCollisionType()", "contents": "CCPhysicsBody:getCollisionType()"},
{ "trigger": ":getCollisionType\tCCPhysicsBody:getCollisionType()", "contents": "getCollisionType()"},
{ "trigger": "CCPhysicsBody_bind\tCCPhysicsBody:bind(_CCNode)", "contents": "CCPhysicsBody:bind(_CCNode)"},
{ "trigger": ":bind\tCCPhysicsBody:bind(_CCNode)", "contents": "bind(_CCNode)"},
{ "trigger": "CCTransitionShrinkGrow\t", "contents": "CCTransitionShrinkGrow"},
{ "trigger": "CCTransitionShrinkGrow_create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "CCTransitionShrinkGrow:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionShrinkGrow:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCMenuItemFont\t", "contents": "CCMenuItemFont"},
{ "trigger": "CCMenuItemFont_fontName\tCCMenuItemFont:fontName()", "contents": "CCMenuItemFont:fontName()"},
{ "trigger": ":fontName\tCCMenuItemFont:fontName()", "contents": "fontName()"},
{ "trigger": "CCMenuItemFont_setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "CCMenuItemFont:setFontName(_str)"},
{ "trigger": ":setFontName\tCCMenuItemFont:setFontName(_str)", "contents": "setFontName(_str)"},
{ "trigger": "CCMenuItemFont_setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "CCMenuItemFont:setFontNameObj(_str)"},
{ "trigger": ":setFontNameObj\tCCMenuItemFont:setFontNameObj(_str)", "contents": "setFontNameObj(_str)"},
{ "trigger": "CCMenuItemFont_setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "CCMenuItemFont:setFontSize(_num)"},
{ "trigger": ":setFontSize\tCCMenuItemFont:setFontSize(_num)", "contents": "setFontSize(_num)"},
{ "trigger": "CCMenuItemFont_setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "CCMenuItemFont:setFontSizeObj(_num)"},
{ "trigger": ":setFontSizeObj\tCCMenuItemFont:setFontSizeObj(_num)", "contents": "setFontSizeObj(_num)"},
{ "trigger": "CCMenuItemFont_fontSize\tCCMenuItemFont:fontSize()", "contents": "CCMenuItemFont:fontSize()"},
{ "trigger": ":fontSize\tCCMenuItemFont:fontSize()", "contents": "fontSize()"},
{ "trigger": "CCMenuItemFont_create\tCCMenuItemFont:create(_str)", "contents": "CCMenuItemFont:create(_str)"},
{ "trigger": ":create\tCCMenuItemFont:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCMenuItemFont_fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "CCMenuItemFont:fontNameObj()"},
{ "trigger": ":fontNameObj\tCCMenuItemFont:fontNameObj()", "contents": "fontNameObj()"},
{ "trigger": "CCMenuItemFont_fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "CCMenuItemFont:fontSizeObj()"},
{ "trigger": ":fontSizeObj\tCCMenuItemFont:fontSizeObj()", "contents": "fontSizeObj()"},
{ "trigger": "CCActionCamera\t", "contents": "CCActionCamera"},
{ "trigger": "ProcessBase\t", "contents": "ProcessBase"},
{ "trigger": "ProcessBase_stop\tProcessBase:stop()", "contents": "ProcessBase:stop()"},
{ "trigger": ":stop\tProcessBase:stop()", "contents": "stop()"},
{ "trigger": "ProcessBase_gotoFrame\tProcessBase:gotoFrame(_num)", "contents": "ProcessBase:gotoFrame(_num)"},
{ "trigger": ":gotoFrame\tProcessBase:gotoFrame(_num)", "contents": "gotoFrame(_num)"},
{ "trigger": "ProcessBase_getIsComplete\tProcessBase:getIsComplete()", "contents": "ProcessBase:getIsComplete()"},
{ "trigger": ":getIsComplete\tProcessBase:getIsComplete()", "contents": "getIsComplete()"},
{ "trigger": "ProcessBase_setIsComplete\tProcessBase:setIsComplete(_boo)", "contents": "ProcessBase:setIsComplete(_boo)"},
{ "trigger": ":setIsComplete\tProcessBase:setIsComplete(_boo)", "contents": "setIsComplete(_boo)"},
{ "trigger": "ProcessBase_setLoopType\tProcessBase:setLoopType(_num)", "contents": "ProcessBase:setLoopType(_num)"},
{ "trigger": ":setLoopType\tProcessBase:setLoopType(_num)", "contents": "setLoopType(_num)"},
{ "trigger": "ProcessBase_setRawDuration\tProcessBase:setRawDuration(_num)", "contents": "ProcessBase:setRawDuration(_num)"},
{ "trigger": ":setRawDuration\tProcessBase:setRawDuration(_num)", "contents": "setRawDuration(_num)"},
{ "trigger": "ProcessBase_play\tProcessBase:play(_userdata,_num,_num,_num,_num)", "contents": "ProcessBase:play(_userdata,_num,_num,_num,_num)"},
{ "trigger": ":play\tProcessBase:play(_userdata,_num,_num,_num,_num)", "contents": "play(_userdata,_num,_num,_num,_num)"},
{ "trigger": "ProcessBase_setAnimationScale\tProcessBase:setAnimationScale(_num)", "contents": "ProcessBase:setAnimationScale(_num)"},
{ "trigger": ":setAnimationScale\tProcessBase:setAnimationScale(_num)", "contents": "setAnimationScale(_num)"},
{ "trigger": "ProcessBase_setIsPlaying\tProcessBase:setIsPlaying(_boo)", "contents": "ProcessBase:setIsPlaying(_boo)"},
{ "trigger": ":setIsPlaying\tProcessBase:setIsPlaying(_boo)", "contents": "setIsPlaying(_boo)"},
{ "trigger": "ProcessBase_setAnimationInternal\tProcessBase:setAnimationInternal(_num)", "contents": "ProcessBase:setAnimationInternal(_num)"},
{ "trigger": ":setAnimationInternal\tProcessBase:setAnimationInternal(_num)", "contents": "setAnimationInternal(_num)"},
{ "trigger": "ProcessBase_getIsPlaying\tProcessBase:getIsPlaying()", "contents": "ProcessBase:getIsPlaying()"},
{ "trigger": ":getIsPlaying\tProcessBase:getIsPlaying()", "contents": "getIsPlaying()"},
{ "trigger": "ProcessBase_getAnimationScale\tProcessBase:getAnimationScale()", "contents": "ProcessBase:getAnimationScale()"},
{ "trigger": ":getAnimationScale\tProcessBase:getAnimationScale()", "contents": "getAnimationScale()"},
{ "trigger": "ProcessBase_getAnimationInternal\tProcessBase:getAnimationInternal()", "contents": "ProcessBase:getAnimationInternal()"},
{ "trigger": ":getAnimationInternal\tProcessBase:getAnimationInternal()", "contents": "getAnimationInternal()"},
{ "trigger": "ProcessBase_getCurrentFrameIndex\tProcessBase:getCurrentFrameIndex()", "contents": "ProcessBase:getCurrentFrameIndex()"},
{ "trigger": ":getCurrentFrameIndex\tProcessBase:getCurrentFrameIndex()", "contents": "getCurrentFrameIndex()"},
{ "trigger": "ProcessBase_pause\tProcessBase:pause()", "contents": "ProcessBase:pause()"},
{ "trigger": ":pause\tProcessBase:pause()", "contents": "pause()"},
{ "trigger": "ProcessBase_getIsPause\tProcessBase:getIsPause()", "contents": "ProcessBase:getIsPause()"},
{ "trigger": ":getIsPause\tProcessBase:getIsPause()", "contents": "getIsPause()"},
{ "trigger": "ProcessBase_getRawDuration\tProcessBase:getRawDuration()", "contents": "ProcessBase:getRawDuration()"},
{ "trigger": ":getRawDuration\tProcessBase:getRawDuration()", "contents": "getRawDuration()"},
{ "trigger": "ProcessBase_resume\tProcessBase:resume()", "contents": "ProcessBase:resume()"},
{ "trigger": ":resume\tProcessBase:resume()", "contents": "resume()"},
{ "trigger": "ProcessBase_setCurrentPercent\tProcessBase:setCurrentPercent(_num)", "contents": "ProcessBase:setCurrentPercent(_num)"},
{ "trigger": ":setCurrentPercent\tProcessBase:setCurrentPercent(_num)", "contents": "setCurrentPercent(_num)"},
{ "trigger": "ProcessBase_getLoopType\tProcessBase:getLoopType()", "contents": "ProcessBase:getLoopType()"},
{ "trigger": ":getLoopType\tProcessBase:getLoopType()", "contents": "getLoopType()"},
{ "trigger": "ProcessBase_getCurrentPercent\tProcessBase:getCurrentPercent()", "contents": "ProcessBase:getCurrentPercent()"},
{ "trigger": ":getCurrentPercent\tProcessBase:getCurrentPercent()", "contents": "getCurrentPercent()"},
{ "trigger": "ProcessBase_getTweenEasing\tProcessBase:getTweenEasing()", "contents": "ProcessBase:getTweenEasing()"},
{ "trigger": ":getTweenEasing\tProcessBase:getTweenEasing()", "contents": "getTweenEasing()"},
{ "trigger": "ProcessBase_setIsPause\tProcessBase:setIsPause(_boo)", "contents": "ProcessBase:setIsPause(_boo)"},
{ "trigger": ":setIsPause\tProcessBase:setIsPause(_boo)", "contents": "setIsPause(_boo)"},
{ "trigger": "ProcessBase_setTweenEasing\tProcessBase:setTweenEasing(_num)", "contents": "ProcessBase:setTweenEasing(_num)"},
{ "trigger": ":setTweenEasing\tProcessBase:setTweenEasing(_num)", "contents": "setTweenEasing(_num)"},
{ "trigger": "HSV\t", "contents": "HSV"},
{ "trigger": "CCTransitionFade\t", "contents": "CCTransitionFade"},
{ "trigger": "CCTransitionFade_create\tCCTransitionFade:create(_num,_CCScene)", "contents": "CCTransitionFade:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFade:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCKeypadDispatcher\t", "contents": "CCKeypadDispatcher"},
{ "trigger": "CCKeypadDispatcher_dispatchKeypadMSG\tCCKeypadDispatcher:dispatchKeypadMSG(_num)", "contents": "CCKeypadDispatcher:dispatchKeypadMSG(_num)"},
{ "trigger": ":dispatchKeypadMSG\tCCKeypadDispatcher:dispatchKeypadMSG(_num)", "contents": "dispatchKeypadMSG(_num)"},
{ "trigger": "CCNetwork\t", "contents": "CCNetwork"},
{ "trigger": "CCNetwork_isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "CCNetwork:isHostNameReachable(_str)"},
{ "trigger": ":isHostNameReachable\tCCNetwork:isHostNameReachable(_str)", "contents": "isHostNameReachable(_str)"},
{ "trigger": "CCNetwork_createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "CCNetwork:createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": ":createHTTPRequestLua\tCCNetwork:createHTTPRequestLua(_listener,_str,_num)", "contents": "createHTTPRequestLua(_listener,_str,_num)"},
{ "trigger": "CCNetwork_isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "CCNetwork:isInternetConnectionAvailable()"},
{ "trigger": ":isInternetConnectionAvailable\tCCNetwork:isInternetConnectionAvailable()", "contents": "isInternetConnectionAvailable()"},
{ "trigger": "CCNetwork_isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "CCNetwork:isLocalWiFiAvailable()"},
{ "trigger": ":isLocalWiFiAvailable\tCCNetwork:isLocalWiFiAvailable()", "contents": "isLocalWiFiAvailable()"},
{ "trigger": "CCNetwork_getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "CCNetwork:getInternetConnectionStatus()"},
{ "trigger": ":getInternetConnectionStatus\tCCNetwork:getInternetConnectionStatus()", "contents": "getInternetConnectionStatus()"},
{ "trigger": "CCClippingNode\t", "contents": "CCClippingNode"},
{ "trigger": "CCClippingNode_setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "CCClippingNode:setAlphaThreshold(_num)"},
{ "trigger": ":setAlphaThreshold\tCCClippingNode:setAlphaThreshold(_num)", "contents": "setAlphaThreshold(_num)"},
{ "trigger": "CCClippingNode_getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "CCClippingNode:getAlphaThreshold()"},
{ "trigger": ":getAlphaThreshold\tCCClippingNode:getAlphaThreshold()", "contents": "getAlphaThreshold()"},
{ "trigger": "CCClippingNode_getStencil\tCCClippingNode:getStencil()", "contents": "CCClippingNode:getStencil()"},
{ "trigger": ":getStencil\tCCClippingNode:getStencil()", "contents": "getStencil()"},
{ "trigger": "CCClippingNode_setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "CCClippingNode:setStencil(_CCNode)"},
{ "trigger": ":setStencil\tCCClippingNode:setStencil(_CCNode)", "contents": "setStencil(_CCNode)"},
{ "trigger": "CCClippingNode_setInverted\tCCClippingNode:setInverted(_boo)", "contents": "CCClippingNode:setInverted(_boo)"},
{ "trigger": ":setInverted\tCCClippingNode:setInverted(_boo)", "contents": "setInverted(_boo)"},
{ "trigger": "CCClippingNode_isInverted\tCCClippingNode:isInverted()", "contents": "CCClippingNode:isInverted()"},
{ "trigger": ":isInverted\tCCClippingNode:isInverted()", "contents": "isInverted()"},
{ "trigger": "CCClippingNode_create\tCCClippingNode:create()", "contents": "CCClippingNode:create()"},
{ "trigger": ":create\tCCClippingNode:create()", "contents": "create()"},
{ "trigger": "CCNodeRGBA\t", "contents": "CCNodeRGBA"},
{ "trigger": "CCNodeRGBA_getColor\tCCNodeRGBA:getColor()", "contents": "CCNodeRGBA:getColor()"},
{ "trigger": ":getColor\tCCNodeRGBA:getColor()", "contents": "getColor()"},
{ "trigger": "CCNodeRGBA_setOpacity\tCCNodeRGBA:setOpacity(_num)", "contents": "CCNodeRGBA:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCNodeRGBA:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCNodeRGBA_getDisplayedColor\tCCNodeRGBA:getDisplayedColor()", "contents": "CCNodeRGBA:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCNodeRGBA:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCNodeRGBA_isOpacityModifyRGB\tCCNodeRGBA:isOpacityModifyRGB()", "contents": "CCNodeRGBA:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCNodeRGBA:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCNodeRGBA_setOpacityModifyRGB\tCCNodeRGBA:setOpacityModifyRGB(_boo)", "contents": "CCNodeRGBA:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCNodeRGBA:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCNodeRGBA_create\tCCNodeRGBA:create()", "contents": "CCNodeRGBA:create()"},
{ "trigger": ":create\tCCNodeRGBA:create()", "contents": "create()"},
{ "trigger": "CCNodeRGBA_setColor\tCCNodeRGBA:setColor(_ccColor3B)", "contents": "CCNodeRGBA:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCNodeRGBA:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCNodeRGBA_updateDisplayedOpacity\tCCNodeRGBA:updateDisplayedOpacity(_num)", "contents": "CCNodeRGBA:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCNodeRGBA:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCNodeRGBA_getDisplayedOpacity\tCCNodeRGBA:getDisplayedOpacity()", "contents": "CCNodeRGBA:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCNodeRGBA:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCNodeRGBA_isCascadeColorEnabled\tCCNodeRGBA:isCascadeColorEnabled()", "contents": "CCNodeRGBA:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCNodeRGBA:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCNodeRGBA_isCascadeOpacityEnabled\tCCNodeRGBA:isCascadeOpacityEnabled()", "contents": "CCNodeRGBA:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCNodeRGBA:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCNodeRGBA_setCascadeOpacityEnabled\tCCNodeRGBA:setCascadeOpacityEnabled(_boo)", "contents": "CCNodeRGBA:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCNodeRGBA:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCNodeRGBA_setCascadeColorEnabled\tCCNodeRGBA:setCascadeColorEnabled(_boo)", "contents": "CCNodeRGBA:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCNodeRGBA:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCNodeRGBA_getOpacity\tCCNodeRGBA:getOpacity()", "contents": "CCNodeRGBA:getOpacity()"},
{ "trigger": ":getOpacity\tCCNodeRGBA:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCNodeRGBA_updateDisplayedColor\tCCNodeRGBA:updateDisplayedColor(_ccColor3B)", "contents": "CCNodeRGBA:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCNodeRGBA:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "cc_timeval\t", "contents": "cc_timeval"},
{ "trigger": "CCProgressTimer\t", "contents": "CCProgressTimer"},
{ "trigger": "CCProgressTimer_setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "CCProgressTimer:setSprite(_CCSprite)"},
{ "trigger": ":setSprite\tCCProgressTimer:setSprite(_CCSprite)", "contents": "setSprite(_CCSprite)"},
{ "trigger": "CCProgressTimer_isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "CCProgressTimer:isReverseDirection()"},
{ "trigger": ":isReverseDirection\tCCProgressTimer:isReverseDirection()", "contents": "isReverseDirection()"},
{ "trigger": "CCProgressTimer_setType\tCCProgressTimer:setType(_num)", "contents": "CCProgressTimer:setType(_num)"},
{ "trigger": ":setType\tCCProgressTimer:setType(_num)", "contents": "setType(_num)"},
{ "trigger": "CCProgressTimer_getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "CCProgressTimer:getBarChangeRate()"},
{ "trigger": ":getBarChangeRate\tCCProgressTimer:getBarChangeRate()", "contents": "getBarChangeRate()"},
{ "trigger": "CCProgressTimer_setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "CCProgressTimer:setMidpoint(_CCPoint)"},
{ "trigger": ":setMidpoint\tCCProgressTimer:setMidpoint(_CCPoint)", "contents": "setMidpoint(_CCPoint)"},
{ "trigger": "CCProgressTimer_create\tCCProgressTimer:create(_CCSprite)", "contents": "CCProgressTimer:create(_CCSprite)"},
{ "trigger": ":create\tCCProgressTimer:create(_CCSprite)", "contents": "create(_CCSprite)"},
{ "trigger": "CCProgressTimer_getType\tCCProgressTimer:getType()", "contents": "CCProgressTimer:getType()"},
{ "trigger": ":getType\tCCProgressTimer:getType()", "contents": "getType()"},
{ "trigger": "CCProgressTimer_getPercentage\tCCProgressTimer:getPercentage()", "contents": "CCProgressTimer:getPercentage()"},
{ "trigger": ":getPercentage\tCCProgressTimer:getPercentage()", "contents": "getPercentage()"},
{ "trigger": "CCProgressTimer_setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "CCProgressTimer:setBarChangeRate(_CCPoint)"},
{ "trigger": ":setBarChangeRate\tCCProgressTimer:setBarChangeRate(_CCPoint)", "contents": "setBarChangeRate(_CCPoint)"},
{ "trigger": "CCProgressTimer_setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "CCProgressTimer:setPercentage(_num)"},
{ "trigger": ":setPercentage\tCCProgressTimer:setPercentage(_num)", "contents": "setPercentage(_num)"},
{ "trigger": "CCProgressTimer_setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "CCProgressTimer:setReverseProgress(_boo)"},
{ "trigger": ":setReverseProgress\tCCProgressTimer:setReverseProgress(_boo)", "contents": "setReverseProgress(_boo)"},
{ "trigger": "CCProgressTimer_getSprite\tCCProgressTimer:getSprite()", "contents": "CCProgressTimer:getSprite()"},
{ "trigger": ":getSprite\tCCProgressTimer:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCProgressTimer_getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "CCProgressTimer:getMidpoint()"},
{ "trigger": ":getMidpoint\tCCProgressTimer:getMidpoint()", "contents": "getMidpoint()"},
{ "trigger": "CCProgressTimer_setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "CCProgressTimer:setReverseDirection(_boo)"},
{ "trigger": ":setReverseDirection\tCCProgressTimer:setReverseDirection(_boo)", "contents": "setReverseDirection(_boo)"},
{ "trigger": "CCTransitionTurnOffTiles\t", "contents": "CCTransitionTurnOffTiles"},
{ "trigger": "CCTransitionTurnOffTiles_create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "CCTransitionTurnOffTiles:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionTurnOffTiles:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCEaseSineInOut\t", "contents": "CCEaseSineInOut"},
{ "trigger": "CCEaseSineInOut_create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "CCEaseSineInOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseSineInOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCParticleGalaxy\t", "contents": "CCParticleGalaxy"},
{ "trigger": "CCParticleGalaxy_createWithTotalParticles\tCCParticleGalaxy:createWithTotalParticles(_num)", "contents": "CCParticleGalaxy:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleGalaxy:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleGalaxy_create\tCCParticleGalaxy:create()", "contents": "CCParticleGalaxy:create()"},
{ "trigger": ":create\tCCParticleGalaxy:create()", "contents": "create()"},
{ "trigger": "CCTileMapAtlas\t", "contents": "CCTileMapAtlas"},
{ "trigger": "CCTileMapAtlas_call\tCCTileMapAtlas:call()", "contents": "CCTileMapAtlas:call()"},
{ "trigger": ":call\tCCTileMapAtlas:call()", "contents": "call()"},
{ "trigger": "CCTileMapAtlas_new\tCCTileMapAtlas:new()", "contents": "CCTileMapAtlas:new()"},
{ "trigger": ":new\tCCTileMapAtlas:new()", "contents": "new()"},
{ "trigger": "CCTileMapAtlas_releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "CCTileMapAtlas:releaseMap()"},
{ "trigger": ":releaseMap\tCCTileMapAtlas:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTileMapAtlas_new_local\tCCTileMapAtlas:new_local()", "contents": "CCTileMapAtlas:new_local()"},
{ "trigger": ":new_local\tCCTileMapAtlas:new_local()", "contents": "new_local()"},
{ "trigger": "CCTileMapAtlas_setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "CCTileMapAtlas:setTile(_ccColor3B,_CCPoint)"},
{ "trigger": ":setTile\tCCTileMapAtlas:setTile(_ccColor3B,_CCPoint)", "contents": "setTile(_ccColor3B,_CCPoint)"},
{ "trigger": "CCTileMapAtlas_delete\tCCTileMapAtlas:delete()", "contents": "CCTileMapAtlas:delete()"},
{ "trigger": ":delete\tCCTileMapAtlas:delete()", "contents": "delete()"},
{ "trigger": "CCTileMapAtlas_initWithTileFile\tCCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)", "contents": "CCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)"},
{ "trigger": ":initWithTileFile\tCCTileMapAtlas:initWithTileFile(_str,_str,_num,_num)", "contents": "initWithTileFile(_str,_str,_num,_num)"},
{ "trigger": "CCTileMapAtlas_tileAt\tCCTileMapAtlas:tileAt(_CCPoint)", "contents": "CCTileMapAtlas:tileAt(_CCPoint)"},
{ "trigger": ":tileAt\tCCTileMapAtlas:tileAt(_CCPoint)", "contents": "tileAt(_CCPoint)"},
{ "trigger": "CCTileMapAtlas_create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "CCTileMapAtlas:create(_str,_str,_num,_num)"},
{ "trigger": ":create\tCCTileMapAtlas:create(_str,_str,_num,_num)", "contents": "create(_str,_str,_num,_num)"},
{ "trigger": "ccFontDefinition\t", "contents": "ccFontDefinition"},
{ "trigger": "ccFontDefinition_call\tccFontDefinition:call()", "contents": "ccFontDefinition:call()"},
{ "trigger": ":call\tccFontDefinition:call()", "contents": "call()"},
{ "trigger": "ccFontDefinition_new\tccFontDefinition:new()", "contents": "ccFontDefinition:new()"},
{ "trigger": ":new\tccFontDefinition:new()", "contents": "new()"},
{ "trigger": "ccFontDefinition_new_local\tccFontDefinition:new_local()", "contents": "ccFontDefinition:new_local()"},
{ "trigger": ":new_local\tccFontDefinition:new_local()", "contents": "new_local()"},
{ "trigger": "CCTransitionFlipX\t", "contents": "CCTransitionFlipX"},
{ "trigger": "CCTransitionFlipX_create\tCCTransitionFlipX:create(_num,_CCScene)", "contents": "CCTransitionFlipX:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipX:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCOrbitCamera\t", "contents": "CCOrbitCamera"},
{ "trigger": "CCOrbitCamera_sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "CCOrbitCamera:sphericalRadius(_num,_num,_num)"},
{ "trigger": ":sphericalRadius\tCCOrbitCamera:sphericalRadius(_num,_num,_num)", "contents": "sphericalRadius(_num,_num,_num)"},
{ "trigger": "CCOrbitCamera_create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "CCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": ":create\tCCOrbitCamera:create(_num,_num,_num,_num,_num,_num,_num)", "contents": "create(_num,_num,_num,_num,_num,_num,_num)"},
{ "trigger": "CCTransitionFlipY\t", "contents": "CCTransitionFlipY"},
{ "trigger": "CCTransitionFlipY_create\tCCTransitionFlipY:create(_num,_CCScene)", "contents": "CCTransitionFlipY:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFlipY:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCToggleVisibility\t", "contents": "CCToggleVisibility"},
{ "trigger": "CCToggleVisibility_create\tCCToggleVisibility:create()", "contents": "CCToggleVisibility:create()"},
{ "trigger": ":create\tCCToggleVisibility:create()", "contents": "create()"},
{ "trigger": "CCShaky3D\t", "contents": "CCShaky3D"},
{ "trigger": "CCShaky3D_create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShaky3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShaky3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCCatmullRomTo\t", "contents": "CCCatmullRomTo"},
{ "trigger": "CCCatmullRomTo_create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "CCCatmullRomTo:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomTo:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCWaves\t", "contents": "CCWaves"},
{ "trigger": "CCWaves_create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "CCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": ":create\tCCWaves:create(_num,_CCSize,_num,_num,_boo,_boo)", "contents": "create(_num,_CCSize,_num,_num,_boo,_boo)"},
{ "trigger": "CCSpriteBatchNode\t", "contents": "CCSpriteBatchNode"},
{ "trigger": "CCSpriteBatchNode_getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "CCSpriteBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCSpriteBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCSpriteBatchNode_insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:insertChild(_CCSprite,_num)"},
{ "trigger": ":insertChild\tCCSpriteBatchNode:insertChild(_CCSprite,_num)", "contents": "insertChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "CCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": ":atlasIndexForChild\tCCSpriteBatchNode:atlasIndexForChild(_CCSprite,_num)", "contents": "atlasIndexForChild(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:createWithTexture(_CCTexture2D)"},
{ "trigger": ":createWithTexture\tCCSpriteBatchNode:createWithTexture(_CCTexture2D)", "contents": "createWithTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "CCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": ":rebuildIndexInOrder\tCCSpriteBatchNode:rebuildIndexInOrder(_CCSprite,_num)", "contents": "rebuildIndexInOrder(_CCSprite,_num)"},
{ "trigger": "CCSpriteBatchNode_appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "CCSpriteBatchNode:appendChild(_CCSprite)"},
{ "trigger": ":appendChild\tCCSpriteBatchNode:appendChild(_CCSprite)", "contents": "appendChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_create\tCCSpriteBatchNode:create(_str)", "contents": "CCSpriteBatchNode:create(_str)"},
{ "trigger": ":create\tCCSpriteBatchNode:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCSpriteBatchNode_setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "CCSpriteBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteBatchNode_removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "CCSpriteBatchNode:removeChildAtIndex(_num,_boo)"},
{ "trigger": ":removeChildAtIndex\tCCSpriteBatchNode:removeChildAtIndex(_num,_boo)", "contents": "removeChildAtIndex(_num,_boo)"},
{ "trigger": "CCSpriteBatchNode_lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":lowestAtlasIndexInChild\tCCSpriteBatchNode:lowestAtlasIndexInChild(_CCSprite)", "contents": "lowestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCSpriteBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCSpriteBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCSpriteBatchNode_removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "CCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": ":removeSpriteFromAtlas\tCCSpriteBatchNode:removeSpriteFromAtlas(_CCSprite)", "contents": "removeSpriteFromAtlas(_CCSprite)"},
{ "trigger": "CCSpriteBatchNode_getTexture\tCCSpriteBatchNode:getTexture()", "contents": "CCSpriteBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteBatchNode_highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "CCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": ":highestAtlasIndexInChild\tCCSpriteBatchNode:highestAtlasIndexInChild(_CCSprite)", "contents": "highestAtlasIndexInChild(_CCSprite)"},
{ "trigger": "CCEaseBounce\t", "contents": "CCEaseBounce"},
{ "trigger": "CCEaseBounce_create\tCCEaseBounce:create(_CCActionInterval)", "contents": "CCEaseBounce:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounce:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCStopGrid\t", "contents": "CCStopGrid"},
{ "trigger": "CCStopGrid_create\tCCStopGrid:create()", "contents": "CCStopGrid:create()"},
{ "trigger": ":create\tCCStopGrid:create()", "contents": "create()"},
{ "trigger": "CCSize\t", "contents": "CCSize"},
{ "trigger": "CCSize_call\tCCSize:call()", "contents": "CCSize:call()"},
{ "trigger": ":call\tCCSize:call()", "contents": "call()"},
{ "trigger": "CCSize_new\tCCSize:new()", "contents": "CCSize:new()"},
{ "trigger": ":new\tCCSize:new()", "contents": "new()"},
{ "trigger": "CCSize_setSize\tCCSize:setSize(_num,_num)", "contents": "CCSize:setSize(_num,_num)"},
{ "trigger": ":setSize\tCCSize:setSize(_num,_num)", "contents": "setSize(_num,_num)"},
{ "trigger": "CCSize_equals\tCCSize:equals(_CCSize)", "contents": "CCSize:equals(_CCSize)"},
{ "trigger": ":equals\tCCSize:equals(_CCSize)", "contents": "equals(_CCSize)"},
{ "trigger": "CCSize_new_local\tCCSize:new_local()", "contents": "CCSize:new_local()"},
{ "trigger": ":new_local\tCCSize:new_local()", "contents": "new_local()"},
{ "trigger": "CCArray\t", "contents": "CCArray"},
{ "trigger": "CCArray_count\tCCArray:count()", "contents": "CCArray:count()"},
{ "trigger": ":count\tCCArray:count()", "contents": "count()"},
{ "trigger": "CCArray_fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "CCArray:fastRemoveObject(_CCObject)"},
{ "trigger": ":fastRemoveObject\tCCArray:fastRemoveObject(_CCObject)", "contents": "fastRemoveObject(_CCObject)"},
{ "trigger": "CCArray_exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "CCArray:exchangeObjectAtIndex(_num,_num)"},
{ "trigger": ":exchangeObjectAtIndex\tCCArray:exchangeObjectAtIndex(_num,_num)", "contents": "exchangeObjectAtIndex(_num,_num)"},
{ "trigger": "CCArray_containsObject\tCCArray:containsObject(_CCObject)", "contents": "CCArray:containsObject(_CCObject)"},
{ "trigger": ":containsObject\tCCArray:containsObject(_CCObject)", "contents": "containsObject(_CCObject)"},
{ "trigger": "CCArray_removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "CCArray:removeLastObject(_boo)"},
{ "trigger": ":removeLastObject\tCCArray:removeLastObject(_boo)", "contents": "removeLastObject(_boo)"},
{ "trigger": "CCArray_objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "CCArray:objectAtIndex(_num)"},
{ "trigger": ":objectAtIndex\tCCArray:objectAtIndex(_num)", "contents": "objectAtIndex(_num)"},
{ "trigger": "CCArray_addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "CCArray:addObjectsFromArray(_CCArray)"},
{ "trigger": ":addObjectsFromArray\tCCArray:addObjectsFromArray(_CCArray)", "contents": "addObjectsFromArray(_CCArray)"},
{ "trigger": "CCArray_fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "CCArray:fastRemoveObjectAtIndex(_num)"},
{ "trigger": ":fastRemoveObjectAtIndex\tCCArray:fastRemoveObjectAtIndex(_num)", "contents": "fastRemoveObjectAtIndex(_num)"},
{ "trigger": "CCArray_createWithContentsOfFileThreadSafe\tCCArray:createWithContentsOfFileThreadSafe(_str)", "contents": "CCArray:createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": ":createWithContentsOfFileThreadSafe\tCCArray:createWithContentsOfFileThreadSafe(_str)", "contents": "createWithContentsOfFileThreadSafe(_str)"},
{ "trigger": "CCArray_createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "CCArray:createWithObject(_CCObject)"},
{ "trigger": ":createWithObject\tCCArray:createWithObject(_CCObject)", "contents": "createWithObject(_CCObject)"},
{ "trigger": "CCArray_createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "CCArray:createWithCapacity(_num)"},
{ "trigger": ":createWithCapacity\tCCArray:createWithCapacity(_num)", "contents": "createWithCapacity(_num)"},
{ "trigger": "CCArray_capacity\tCCArray:capacity()", "contents": "CCArray:capacity()"},
{ "trigger": ":capacity\tCCArray:capacity()", "contents": "capacity()"},
{ "trigger": "CCArray_replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "CCArray:replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": ":replaceObjectAtIndex\tCCArray:replaceObjectAtIndex(_num,_CCObject,_boo)", "contents": "replaceObjectAtIndex(_num,_CCObject,_boo)"},
{ "trigger": "CCArray_removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "CCArray:removeObjectsInArray(_CCArray)"},
{ "trigger": ":removeObjectsInArray\tCCArray:removeObjectsInArray(_CCArray)", "contents": "removeObjectsInArray(_CCArray)"},
{ "trigger": "CCArray_randomObject\tCCArray:randomObject()", "contents": "CCArray:randomObject()"},
{ "trigger": ":randomObject\tCCArray:randomObject()", "contents": "randomObject()"},
{ "trigger": "CCArray_createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "CCArray:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCArray:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "CCArray_reverseObjects\tCCArray:reverseObjects()", "contents": "CCArray:reverseObjects()"},
{ "trigger": ":reverseObjects\tCCArray:reverseObjects()", "contents": "reverseObjects()"},
{ "trigger": "CCArray_createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "CCArray:createWithArray(_CCArray)"},
{ "trigger": ":createWithArray\tCCArray:createWithArray(_CCArray)", "contents": "createWithArray(_CCArray)"},
{ "trigger": "CCArray_removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "CCArray:removeObjectAtIndex(_num,_boo)"},
{ "trigger": ":removeObjectAtIndex\tCCArray:removeObjectAtIndex(_num,_boo)", "contents": "removeObjectAtIndex(_num,_boo)"},
{ "trigger": "CCArray_isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "CCArray:isEqualToArray(_CCArray)"},
{ "trigger": ":isEqualToArray\tCCArray:isEqualToArray(_CCArray)", "contents": "isEqualToArray(_CCArray)"},
{ "trigger": "CCArray_removeAllObjects\tCCArray:removeAllObjects()", "contents": "CCArray:removeAllObjects()"},
{ "trigger": ":removeAllObjects\tCCArray:removeAllObjects()", "contents": "removeAllObjects()"},
{ "trigger": "CCArray_reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "CCArray:reduceMemoryFootprint()"},
{ "trigger": ":reduceMemoryFootprint\tCCArray:reduceMemoryFootprint()", "contents": "reduceMemoryFootprint()"},
{ "trigger": "CCArray_create\tCCArray:create()", "contents": "CCArray:create()"},
{ "trigger": ":create\tCCArray:create()", "contents": "create()"},
{ "trigger": "CCArray_lastObject\tCCArray:lastObject()", "contents": "CCArray:lastObject()"},
{ "trigger": ":lastObject\tCCArray:lastObject()", "contents": "lastObject()"},
{ "trigger": "CCArray_indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "CCArray:indexOfObject(_CCObject)"},
{ "trigger": ":indexOfObject\tCCArray:indexOfObject(_CCObject)", "contents": "indexOfObject(_CCObject)"},
{ "trigger": "CCArray_removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "CCArray:removeObject(_CCObject,_boo)"},
{ "trigger": ":removeObject\tCCArray:removeObject(_CCObject,_boo)", "contents": "removeObject(_CCObject,_boo)"},
{ "trigger": "CCArray_exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "CCArray:exchangeObject(_CCObject,_CCObject)"},
{ "trigger": ":exchangeObject\tCCArray:exchangeObject(_CCObject,_CCObject)", "contents": "exchangeObject(_CCObject,_CCObject)"},
{ "trigger": "CCArray_addObject\tCCArray:addObject(_CCObject)", "contents": "CCArray:addObject(_CCObject)"},
{ "trigger": ":addObject\tCCArray:addObject(_CCObject)", "contents": "addObject(_CCObject)"},
{ "trigger": "CCArray_insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "CCArray:insertObject(_CCObject,_num)"},
{ "trigger": ":insertObject\tCCArray:insertObject(_CCObject,_num)", "contents": "insertObject(_CCObject,_num)"},
{ "trigger": "CCParticleSmoke\t", "contents": "CCParticleSmoke"},
{ "trigger": "CCParticleSmoke_createWithTotalParticles\tCCParticleSmoke:createWithTotalParticles(_num)", "contents": "CCParticleSmoke:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleSmoke:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleSmoke_create\tCCParticleSmoke:create()", "contents": "CCParticleSmoke:create()"},
{ "trigger": ":create\tCCParticleSmoke:create()", "contents": "create()"},
{ "trigger": "Animation\t", "contents": "Animation"},
{ "trigger": "Animation_pause\tAnimation:pause()", "contents": "Animation:pause()"},
{ "trigger": ":pause\tAnimation:pause()", "contents": "pause()"},
{ "trigger": "Animation_stop\tAnimation:stop()", "contents": "Animation:stop()"},
{ "trigger": ":stop\tAnimation:stop()", "contents": "stop()"},
{ "trigger": "Animation_resume\tAnimation:resume()", "contents": "Animation:resume()"},
{ "trigger": ":resume\tAnimation:resume()", "contents": "resume()"},
{ "trigger": "Animation_playByIndex\tAnimation:playByIndex(_num,_num,_num,_num,_num)", "contents": "Animation:playByIndex(_num,_num,_num,_num,_num)"},
{ "trigger": ":playByIndex\tAnimation:playByIndex(_num,_num,_num,_num,_num)", "contents": "playByIndex(_num,_num,_num,_num,_num)"},
{ "trigger": "Animation_getMovementCount\tAnimation:getMovementCount()", "contents": "Animation:getMovementCount()"},
{ "trigger": ":getMovementCount\tAnimation:getMovementCount()", "contents": "getMovementCount()"},
{ "trigger": "Animation_play\tAnimation:play(_str,_num,_num,_num,_num)", "contents": "Animation:play(_str,_num,_num,_num,_num)"},
{ "trigger": ":play\tAnimation:play(_str,_num,_num,_num,_num)", "contents": "play(_str,_num,_num,_num,_num)"},
{ "trigger": "Animation_setAnimationScale\tAnimation:setAnimationScale(_num)", "contents": "Animation:setAnimationScale(_num)"},
{ "trigger": ":setAnimationScale\tAnimation:setAnimationScale(_num)", "contents": "setAnimationScale(_num)"},
{ "trigger": "Animation_create\tAnimation:create(_Armature)", "contents": "Animation:create(_Armature)"},
{ "trigger": ":create\tAnimation:create(_Armature)", "contents": "create(_Armature)"},
{ "trigger": "CCTransitionFadeUp\t", "contents": "CCTransitionFadeUp"},
{ "trigger": "CCTransitionFadeUp_create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "CCTransitionFadeUp:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeUp:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressVertical\t", "contents": "CCTransitionProgressVertical"},
{ "trigger": "CCTransitionProgressVertical_create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "CCTransitionProgressVertical:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressVertical:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDouble\t", "contents": "CCDouble"},
{ "trigger": "CCDouble_getValue\tCCDouble:getValue()", "contents": "CCDouble:getValue()"},
{ "trigger": ":getValue\tCCDouble:getValue()", "contents": "getValue()"},
{ "trigger": "CCDouble_call\tCCDouble:call(_num)", "contents": "CCDouble:call(_num)"},
{ "trigger": ":call\tCCDouble:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCDouble_new\tCCDouble:new(_num)", "contents": "CCDouble:new(_num)"},
{ "trigger": ":new\tCCDouble:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCDouble_new_local\tCCDouble:new_local(_num)", "contents": "CCDouble:new_local(_num)"},
{ "trigger": ":new_local\tCCDouble:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCDouble_create\tCCDouble:create(_num)", "contents": "CCDouble:create(_num)"},
{ "trigger": ":create\tCCDouble:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCTurnOffTiles\t", "contents": "CCTurnOffTiles"},
{ "trigger": "CCTurnOffTiles_create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "CCTurnOffTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCTurnOffTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCAtlasNode\t", "contents": "CCAtlasNode"},
{ "trigger": "CCAtlasNode_call\tCCAtlasNode:call()", "contents": "CCAtlasNode:call()"},
{ "trigger": ":call\tCCAtlasNode:call()", "contents": "call()"},
{ "trigger": "CCAtlasNode_getColor\tCCAtlasNode:getColor()", "contents": "CCAtlasNode:getColor()"},
{ "trigger": ":getColor\tCCAtlasNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCAtlasNode_setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "CCAtlasNode:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCAtlasNode:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCAtlasNode_getBlendFunc\tCCAtlasNode:getBlendFunc()", "contents": "CCAtlasNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCAtlasNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCAtlasNode_getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "CCAtlasNode:getQuadsToDraw()"},
{ "trigger": ":getQuadsToDraw\tCCAtlasNode:getQuadsToDraw()", "contents": "getQuadsToDraw()"},
{ "trigger": "CCAtlasNode_isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "CCAtlasNode:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCAtlasNode:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCAtlasNode_getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "CCAtlasNode:getTextureAtlas()"},
{ "trigger": ":getTextureAtlas\tCCAtlasNode:getTextureAtlas()", "contents": "getTextureAtlas()"},
{ "trigger": "CCAtlasNode_initWithTileFile\tCCAtlasNode:initWithTileFile(_str,_num,_num,_num)", "contents": "CCAtlasNode:initWithTileFile(_str,_num,_num,_num)"},
{ "trigger": ":initWithTileFile\tCCAtlasNode:initWithTileFile(_str,_num,_num,_num)", "contents": "initWithTileFile(_str,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "CCAtlasNode:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCAtlasNode:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCAtlasNode_create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "CCAtlasNode:create(_str,_num,_num,_num)"},
{ "trigger": ":create\tCCAtlasNode:create(_str,_num,_num,_num)", "contents": "create(_str,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "CCAtlasNode:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCAtlasNode:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCAtlasNode_new\tCCAtlasNode:new()", "contents": "CCAtlasNode:new()"},
{ "trigger": ":new\tCCAtlasNode:new()", "contents": "new()"},
{ "trigger": "CCAtlasNode_setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "CCAtlasNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCAtlasNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCAtlasNode_updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "CCAtlasNode:updateAtlasValues()"},
{ "trigger": ":updateAtlasValues\tCCAtlasNode:updateAtlasValues()", "contents": "updateAtlasValues()"},
{ "trigger": "CCAtlasNode_new_local\tCCAtlasNode:new_local()", "contents": "CCAtlasNode:new_local()"},
{ "trigger": ":new_local\tCCAtlasNode:new_local()", "contents": "new_local()"},
{ "trigger": "CCAtlasNode_delete\tCCAtlasNode:delete()", "contents": "CCAtlasNode:delete()"},
{ "trigger": ":delete\tCCAtlasNode:delete()", "contents": "delete()"},
{ "trigger": "CCAtlasNode_initWithTexture\tCCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)", "contents": "CCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)"},
{ "trigger": ":initWithTexture\tCCAtlasNode:initWithTexture(_CCTexture2D,_num,_num,_num)", "contents": "initWithTexture(_CCTexture2D,_num,_num,_num)"},
{ "trigger": "CCAtlasNode_getTexture\tCCAtlasNode:getTexture()", "contents": "CCAtlasNode:getTexture()"},
{ "trigger": ":getTexture\tCCAtlasNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCShakyTiles3D\t", "contents": "CCShakyTiles3D"},
{ "trigger": "CCShakyTiles3D_create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShakyTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShakyTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCTransitionCrossFade\t", "contents": "CCTransitionCrossFade"},
{ "trigger": "CCTransitionCrossFade_create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "CCTransitionCrossFade:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionCrossFade:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTargetedAction\t", "contents": "CCTargetedAction"},
{ "trigger": "CCTargetedAction_create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "CCTargetedAction:create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCTargetedAction:create(_CCNode,_CCFiniteTimeAction)", "contents": "create(_CCNode,_CCFiniteTimeAction)"},
{ "trigger": "CCSpriteFrame\t", "contents": "CCSpriteFrame"},
{ "trigger": "CCSpriteFrame_setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "CCSpriteFrame:setRect(_CCRect)"},
{ "trigger": ":setRect\tCCSpriteFrame:setRect(_CCRect)", "contents": "setRect(_CCRect)"},
{ "trigger": "CCSpriteFrame_getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "CCSpriteFrame:getRectInPixels()"},
{ "trigger": ":getRectInPixels\tCCSpriteFrame:getRectInPixels()", "contents": "getRectInPixels()"},
{ "trigger": "CCSpriteFrame_setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "CCSpriteFrame:setOffsetInPixels(_CCPoint)"},
{ "trigger": ":setOffsetInPixels\tCCSpriteFrame:setOffsetInPixels(_CCPoint)", "contents": "setOffsetInPixels(_CCPoint)"},
{ "trigger": "CCSpriteFrame_createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "CCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": ":createWithTexture\tCCSpriteFrame:createWithTexture(_CCTexture2D,_CCRect)", "contents": "createWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "CCSpriteFrame:setOriginalSizeInPixels(_CCSize)"},
{ "trigger": ":setOriginalSizeInPixels\tCCSpriteFrame:setOriginalSizeInPixels(_CCSize)", "contents": "setOriginalSizeInPixels(_CCSize)"},
{ "trigger": "CCSpriteFrame_create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "CCSpriteFrame:create(_str,_CCRect)"},
{ "trigger": ":create\tCCSpriteFrame:create(_str,_CCRect)", "contents": "create(_str,_CCRect)"},
{ "trigger": "CCSpriteFrame_setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "CCSpriteFrame:setRectInPixels(_CCRect)"},
{ "trigger": ":setRectInPixels\tCCSpriteFrame:setRectInPixels(_CCRect)", "contents": "setRectInPixels(_CCRect)"},
{ "trigger": "CCSpriteFrame_setOriginalSize\tCCSpriteFrame:setOriginalSize(_CCSize)", "contents": "CCSpriteFrame:setOriginalSize(_CCSize)"},
{ "trigger": ":setOriginalSize\tCCSpriteFrame:setOriginalSize(_CCSize)", "contents": "setOriginalSize(_CCSize)"},
{ "trigger": "CCSpriteFrame_getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "CCSpriteFrame:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCSpriteFrame:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCSpriteFrame_isRotated\tCCSpriteFrame:isRotated()", "contents": "CCSpriteFrame:isRotated()"},
{ "trigger": ":isRotated\tCCSpriteFrame:isRotated()", "contents": "isRotated()"},
{ "trigger": "CCSpriteFrame_setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "CCSpriteFrame:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCSpriteFrame:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrame_getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "CCSpriteFrame:getOriginalSizeInPixels()"},
{ "trigger": ":getOriginalSizeInPixels\tCCSpriteFrame:getOriginalSizeInPixels()", "contents": "getOriginalSizeInPixels()"},
{ "trigger": "CCSpriteFrame_setOffset\tCCSpriteFrame:setOffset(_CCPoint)", "contents": "CCSpriteFrame:setOffset(_CCPoint)"},
{ "trigger": ":setOffset\tCCSpriteFrame:setOffset(_CCPoint)", "contents": "setOffset(_CCPoint)"},
{ "trigger": "CCSpriteFrame_setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "CCSpriteFrame:setRotated(_boo)"},
{ "trigger": ":setRotated\tCCSpriteFrame:setRotated(_boo)", "contents": "setRotated(_boo)"},
{ "trigger": "CCSpriteFrame_getOffset\tCCSpriteFrame:getOffset()", "contents": "CCSpriteFrame:getOffset()"},
{ "trigger": ":getOffset\tCCSpriteFrame:getOffset()", "contents": "getOffset()"},
{ "trigger": "CCSpriteFrame_getTexture\tCCSpriteFrame:getTexture()", "contents": "CCSpriteFrame:getTexture()"},
{ "trigger": ":getTexture\tCCSpriteFrame:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCSpriteFrame_getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "CCSpriteFrame:getOffsetInPixels()"},
{ "trigger": ":getOffsetInPixels\tCCSpriteFrame:getOffsetInPixels()", "contents": "getOffsetInPixels()"},
{ "trigger": "CCSpriteFrame_getRect\tCCSpriteFrame:getRect()", "contents": "CCSpriteFrame:getRect()"},
{ "trigger": ":getRect\tCCSpriteFrame:getRect()", "contents": "getRect()"},
{ "trigger": "CCScale9Sprite\t", "contents": "CCScale9Sprite"},
{ "trigger": "CCScale9Sprite_getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "CCScale9Sprite:getCapInsets()"},
{ "trigger": ":getCapInsets\tCCScale9Sprite:getCapInsets()", "contents": "getCapInsets()"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "CCScale9Sprite:createWithSpriteFrameName(_str)"},
{ "trigger": ":createWithSpriteFrameName\tCCScale9Sprite:createWithSpriteFrameName(_str)", "contents": "createWithSpriteFrameName(_str)"},
{ "trigger": "CCScale9Sprite_setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "CCScale9Sprite:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCScale9Sprite:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCScale9Sprite_setInsetTop\tCCScale9Sprite:setInsetTop(_num)", "contents": "CCScale9Sprite:setInsetTop(_num)"},
{ "trigger": ":setInsetTop\tCCScale9Sprite:setInsetTop(_num)", "contents": "setInsetTop(_num)"},
{ "trigger": "CCScale9Sprite_resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "CCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": ":resizableSpriteWithCapInsets\tCCScale9Sprite:resizableSpriteWithCapInsets(_CCRect)", "contents": "resizableSpriteWithCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_isOpacityModifyRGB\tCCScale9Sprite:isOpacityModifyRGB()", "contents": "CCScale9Sprite:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCScale9Sprite:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCScale9Sprite_setOpacityModifyRGB\tCCScale9Sprite:setOpacityModifyRGB(_boo)", "contents": "CCScale9Sprite:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCScale9Sprite:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCScale9Sprite_setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCScale9Sprite:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_setColor\tCCScale9Sprite:setColor(_ccColor3B)", "contents": "CCScale9Sprite:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCScale9Sprite:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCScale9Sprite_setInsetLeft\tCCScale9Sprite:setInsetLeft(_num)", "contents": "CCScale9Sprite:setInsetLeft(_num)"},
{ "trigger": ":setInsetLeft\tCCScale9Sprite:setInsetLeft(_num)", "contents": "setInsetLeft(_num)"},
{ "trigger": "CCScale9Sprite_getOpacity\tCCScale9Sprite:getOpacity()", "contents": "CCScale9Sprite:getOpacity()"},
{ "trigger": ":getOpacity\tCCScale9Sprite:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCScale9Sprite_getInsetLeft\tCCScale9Sprite:getInsetLeft()", "contents": "CCScale9Sprite:getInsetLeft()"},
{ "trigger": ":getInsetLeft\tCCScale9Sprite:getInsetLeft()", "contents": "getInsetLeft()"},
{ "trigger": "CCScale9Sprite_setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "CCScale9Sprite:setPreferredSize(_CCSize)"},
{ "trigger": ":setPreferredSize\tCCScale9Sprite:setPreferredSize(_CCSize)", "contents": "setPreferredSize(_CCSize)"},
{ "trigger": "CCScale9Sprite_setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "CCScale9Sprite:setCapInsets(_CCRect)"},
{ "trigger": ":setCapInsets\tCCScale9Sprite:setCapInsets(_CCRect)", "contents": "setCapInsets(_CCRect)"},
{ "trigger": "CCScale9Sprite_getColor\tCCScale9Sprite:getColor()", "contents": "CCScale9Sprite:getColor()"},
{ "trigger": ":getColor\tCCScale9Sprite:getColor()", "contents": "getColor()"},
{ "trigger": "CCScale9Sprite_create\tCCScale9Sprite:create()", "contents": "CCScale9Sprite:create()"},
{ "trigger": ":create\tCCScale9Sprite:create()", "contents": "create()"},
{ "trigger": "CCScale9Sprite_getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "CCScale9Sprite:getOriginalSize()"},
{ "trigger": ":getOriginalSize\tCCScale9Sprite:getOriginalSize()", "contents": "getOriginalSize()"},
{ "trigger": "CCScale9Sprite_setInsetRight\tCCScale9Sprite:setInsetRight(_num)", "contents": "CCScale9Sprite:setInsetRight(_num)"},
{ "trigger": ":setInsetRight\tCCScale9Sprite:setInsetRight(_num)", "contents": "setInsetRight(_num)"},
{ "trigger": "CCScale9Sprite_setInsetBottom\tCCScale9Sprite:setInsetBottom(_num)", "contents": "CCScale9Sprite:setInsetBottom(_num)"},
{ "trigger": ":setInsetBottom\tCCScale9Sprite:setInsetBottom(_num)", "contents": "setInsetBottom(_num)"},
{ "trigger": "CCScale9Sprite_getInsetBottom\tCCScale9Sprite:getInsetBottom()", "contents": "CCScale9Sprite:getInsetBottom()"},
{ "trigger": ":getInsetBottom\tCCScale9Sprite:getInsetBottom()", "contents": "getInsetBottom()"},
{ "trigger": "CCScale9Sprite_getInsetRight\tCCScale9Sprite:getInsetRight()", "contents": "CCScale9Sprite:getInsetRight()"},
{ "trigger": ":getInsetRight\tCCScale9Sprite:getInsetRight()", "contents": "getInsetRight()"},
{ "trigger": "CCScale9Sprite_getInsetTop\tCCScale9Sprite:getInsetTop()", "contents": "CCScale9Sprite:getInsetTop()"},
{ "trigger": ":getInsetTop\tCCScale9Sprite:getInsetTop()", "contents": "getInsetTop()"},
{ "trigger": "CCScale9Sprite_getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "CCScale9Sprite:getPreferredSize()"},
{ "trigger": ":getPreferredSize\tCCScale9Sprite:getPreferredSize()", "contents": "getPreferredSize()"},
{ "trigger": "CCScale9Sprite_createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "CCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":createWithSpriteFrame\tCCScale9Sprite:createWithSpriteFrame(_CCSpriteFrame)", "contents": "createWithSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCScale9Sprite_setContentSize\tCCScale9Sprite:setContentSize(_CCSize)", "contents": "CCScale9Sprite:setContentSize(_CCSize)"},
{ "trigger": ":setContentSize\tCCScale9Sprite:setContentSize(_CCSize)", "contents": "setContentSize(_CCSize)"},
{ "trigger": "CCPageTurn3D\t", "contents": "CCPageTurn3D"},
{ "trigger": "CCPageTurn3D_create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "CCPageTurn3D:create(_num,_CCSize)"},
{ "trigger": ":create\tCCPageTurn3D:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCParticleRain\t", "contents": "CCParticleRain"},
{ "trigger": "CCParticleRain_createWithTotalParticles\tCCParticleRain:createWithTotalParticles(_num)", "contents": "CCParticleRain:createWithTotalParticles(_num)"},
{ "trigger": ":createWithTotalParticles\tCCParticleRain:createWithTotalParticles(_num)", "contents": "createWithTotalParticles(_num)"},
{ "trigger": "CCParticleRain_create\tCCParticleRain:create()", "contents": "CCParticleRain:create()"},
{ "trigger": ":create\tCCParticleRain:create()", "contents": "create()"},
{ "trigger": "CCLayerRGBA\t", "contents": "CCLayerRGBA"},
{ "trigger": "CCLayerRGBA_getColor\tCCLayerRGBA:getColor()", "contents": "CCLayerRGBA:getColor()"},
{ "trigger": ":getColor\tCCLayerRGBA:getColor()", "contents": "getColor()"},
{ "trigger": "CCLayerRGBA_setOpacity\tCCLayerRGBA:setOpacity(_num)", "contents": "CCLayerRGBA:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLayerRGBA:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLayerRGBA_getDisplayedColor\tCCLayerRGBA:getDisplayedColor()", "contents": "CCLayerRGBA:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCLayerRGBA:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCLayerRGBA_isOpacityModifyRGB\tCCLayerRGBA:isOpacityModifyRGB()", "contents": "CCLayerRGBA:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLayerRGBA:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLayerRGBA_setOpacityModifyRGB\tCCLayerRGBA:setOpacityModifyRGB(_boo)", "contents": "CCLayerRGBA:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLayerRGBA:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLayerRGBA_create\tCCLayerRGBA:create()", "contents": "CCLayerRGBA:create()"},
{ "trigger": ":create\tCCLayerRGBA:create()", "contents": "create()"},
{ "trigger": "CCLayerRGBA_setColor\tCCLayerRGBA:setColor(_ccColor3B)", "contents": "CCLayerRGBA:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLayerRGBA:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLayerRGBA_updateDisplayedOpacity\tCCLayerRGBA:updateDisplayedOpacity(_num)", "contents": "CCLayerRGBA:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCLayerRGBA:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCLayerRGBA_getDisplayedOpacity\tCCLayerRGBA:getDisplayedOpacity()", "contents": "CCLayerRGBA:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCLayerRGBA:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCLayerRGBA_isCascadeColorEnabled\tCCLayerRGBA:isCascadeColorEnabled()", "contents": "CCLayerRGBA:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCLayerRGBA:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCLayerRGBA_isCascadeOpacityEnabled\tCCLayerRGBA:isCascadeOpacityEnabled()", "contents": "CCLayerRGBA:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCLayerRGBA:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCLayerRGBA_setCascadeOpacityEnabled\tCCLayerRGBA:setCascadeOpacityEnabled(_boo)", "contents": "CCLayerRGBA:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCLayerRGBA:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCLayerRGBA_setCascadeColorEnabled\tCCLayerRGBA:setCascadeColorEnabled(_boo)", "contents": "CCLayerRGBA:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCLayerRGBA:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCLayerRGBA_getOpacity\tCCLayerRGBA:getOpacity()", "contents": "CCLayerRGBA:getOpacity()"},
{ "trigger": ":getOpacity\tCCLayerRGBA:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLayerRGBA_updateDisplayedColor\tCCLayerRGBA:updateDisplayedColor(_ccColor3B)", "contents": "CCLayerRGBA:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCLayerRGBA:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "CCString\t", "contents": "CCString"},
{ "trigger": "CCString_getCString\tCCString:getCString()", "contents": "CCString:getCString()"},
{ "trigger": ":getCString\tCCString:getCString()", "contents": "getCString()"},
{ "trigger": "CCString_isEqual\tCCString:isEqual(_CCObject)", "contents": "CCString:isEqual(_CCObject)"},
{ "trigger": ":isEqual\tCCString:isEqual(_CCObject)", "contents": "isEqual(_CCObject)"},
{ "trigger": "CCString_compare\tCCString:compare(_str)", "contents": "CCString:compare(_str)"},
{ "trigger": ":compare\tCCString:compare(_str)", "contents": "compare(_str)"},
{ "trigger": "CCString_length\tCCString:length()", "contents": "CCString:length()"},
{ "trigger": ":length\tCCString:length()", "contents": "length()"},
{ "trigger": "CCString_doubleValue\tCCString:doubleValue()", "contents": "CCString:doubleValue()"},
{ "trigger": ":doubleValue\tCCString:doubleValue()", "contents": "doubleValue()"},
{ "trigger": "CCString_boolValue\tCCString:boolValue()", "contents": "CCString:boolValue()"},
{ "trigger": ":boolValue\tCCString:boolValue()", "contents": "boolValue()"},
{ "trigger": "CCString_floatValue\tCCString:floatValue()", "contents": "CCString:floatValue()"},
{ "trigger": ":floatValue\tCCString:floatValue()", "contents": "floatValue()"},
{ "trigger": "CCString_create\tCCString:create(_str)", "contents": "CCString:create(_str)"},
{ "trigger": ":create\tCCString:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCString_uintValue\tCCString:uintValue()", "contents": "CCString:uintValue()"},
{ "trigger": ":uintValue\tCCString:uintValue()", "contents": "uintValue()"},
{ "trigger": "CCString_intValue\tCCString:intValue()", "contents": "CCString:intValue()"},
{ "trigger": ":intValue\tCCString:intValue()", "contents": "intValue()"},
{ "trigger": "CCString_createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "CCString:createWithContentsOfFile(_str)"},
{ "trigger": ":createWithContentsOfFile\tCCString:createWithContentsOfFile(_str)", "contents": "createWithContentsOfFile(_str)"},
{ "trigger": "AssetsManager\t", "contents": "AssetsManager"},
{ "trigger": "AssetsManager_update\tAssetsManager:update()", "contents": "AssetsManager:update()"},
{ "trigger": ":update\tAssetsManager:update()", "contents": "update()"},
{ "trigger": "AssetsManager_call\tAssetsManager:call(_str,_str,_str)", "contents": "AssetsManager:call(_str,_str,_str)"},
{ "trigger": ":call\tAssetsManager:call(_str,_str,_str)", "contents": "call(_str,_str,_str)"},
{ "trigger": "AssetsManager_deleteVersion\tAssetsManager:deleteVersion()", "contents": "AssetsManager:deleteVersion()"},
{ "trigger": ":deleteVersion\tAssetsManager:deleteVersion()", "contents": "deleteVersion()"},
{ "trigger": "AssetsManager_setConnectionTimeout\tAssetsManager:setConnectionTimeout(_num)", "contents": "AssetsManager:setConnectionTimeout(_num)"},
{ "trigger": ":setConnectionTimeout\tAssetsManager:setConnectionTimeout(_num)", "contents": "setConnectionTimeout(_num)"},
{ "trigger": "AssetsManager_setPackageUrl\tAssetsManager:setPackageUrl(_str)", "contents": "AssetsManager:setPackageUrl(_str)"},
{ "trigger": ":setPackageUrl\tAssetsManager:setPackageUrl(_str)", "contents": "setPackageUrl(_str)"},
{ "trigger": "AssetsManager_checkUpdate\tAssetsManager:checkUpdate()", "contents": "AssetsManager:checkUpdate()"},
{ "trigger": ":checkUpdate\tAssetsManager:checkUpdate()", "contents": "checkUpdate()"},
{ "trigger": "AssetsManager_getPackageUrl\tAssetsManager:getPackageUrl()", "contents": "AssetsManager:getPackageUrl()"},
{ "trigger": ":getPackageUrl\tAssetsManager:getPackageUrl()", "contents": "getPackageUrl()"},
{ "trigger": "AssetsManager_getVersionFileUrl\tAssetsManager:getVersionFileUrl()", "contents": "AssetsManager:getVersionFileUrl()"},
{ "trigger": ":getVersionFileUrl\tAssetsManager:getVersionFileUrl()", "contents": "getVersionFileUrl()"},
{ "trigger": "AssetsManager_getConnectionTimeout\tAssetsManager:getConnectionTimeout()", "contents": "AssetsManager:getConnectionTimeout()"},
{ "trigger": ":getConnectionTimeout\tAssetsManager:getConnectionTimeout()", "contents": "getConnectionTimeout()"},
{ "trigger": "AssetsManager_getStoragePath\tAssetsManager:getStoragePath()", "contents": "AssetsManager:getStoragePath()"},
{ "trigger": ":getStoragePath\tAssetsManager:getStoragePath()", "contents": "getStoragePath()"},
{ "trigger": "AssetsManager_registerScriptHandler\tAssetsManager:registerScriptHandler(_listener)", "contents": "AssetsManager:registerScriptHandler(_listener)"},
{ "trigger": ":registerScriptHandler\tAssetsManager:registerScriptHandler(_listener)", "contents": "registerScriptHandler(_listener)"},
{ "trigger": "AssetsManager_new\tAssetsManager:new(_str,_str,_str)", "contents": "AssetsManager:new(_str,_str,_str)"},
{ "trigger": ":new\tAssetsManager:new(_str,_str,_str)", "contents": "new(_str,_str,_str)"},
{ "trigger": "AssetsManager_getVersion\tAssetsManager:getVersion()", "contents": "AssetsManager:getVersion()"},
{ "trigger": ":getVersion\tAssetsManager:getVersion()", "contents": "getVersion()"},
{ "trigger": "AssetsManager_new_local\tAssetsManager:new_local(_str,_str,_str)", "contents": "AssetsManager:new_local(_str,_str,_str)"},
{ "trigger": ":new_local\tAssetsManager:new_local(_str,_str,_str)", "contents": "new_local(_str,_str,_str)"},
{ "trigger": "AssetsManager_setStoragePath\tAssetsManager:setStoragePath(_str)", "contents": "AssetsManager:setStoragePath(_str)"},
{ "trigger": ":setStoragePath\tAssetsManager:setStoragePath(_str)", "contents": "setStoragePath(_str)"},
{ "trigger": "AssetsManager_delete\tAssetsManager:delete()", "contents": "AssetsManager:delete()"},
{ "trigger": ":delete\tAssetsManager:delete()", "contents": "delete()"},
{ "trigger": "AssetsManager_setVersionFileUrl\tAssetsManager:setVersionFileUrl(_str)", "contents": "AssetsManager:setVersionFileUrl(_str)"},
{ "trigger": ":setVersionFileUrl\tAssetsManager:setVersionFileUrl(_str)", "contents": "setVersionFileUrl(_str)"},
{ "trigger": "AssetsManager_unregisterScriptHandler\tAssetsManager:unregisterScriptHandler()", "contents": "AssetsManager:unregisterScriptHandler()"},
{ "trigger": ":unregisterScriptHandler\tAssetsManager:unregisterScriptHandler()", "contents": "unregisterScriptHandler()"},
{ "trigger": "CCCrypto\t", "contents": "CCCrypto"},
{ "trigger": "CCCrypto_encryptXXTEALua\tCCCrypto:encryptXXTEALua(_str,_num,_str,_num)", "contents": "CCCrypto:encryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": ":encryptXXTEALua\tCCCrypto:encryptXXTEALua(_str,_num,_str,_num)", "contents": "encryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":decryptAES256Lua\tCCCrypto:decryptAES256Lua(_str,_num,_str,_num)", "contents": "decryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "CCCrypto:MD5Lua(_str,_boo)"},
{ "trigger": ":MD5Lua\tCCCrypto:MD5Lua(_str,_boo)", "contents": "MD5Lua(_str,_boo)"},
{ "trigger": "CCCrypto_encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "CCCrypto:encodeBase64Lua(_str,_num)"},
{ "trigger": ":encodeBase64Lua\tCCCrypto:encodeBase64Lua(_str,_num)", "contents": "encodeBase64Lua(_str,_num)"},
{ "trigger": "CCCrypto_decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "CCCrypto:decodeBase64Lua(_str)"},
{ "trigger": ":decodeBase64Lua\tCCCrypto:decodeBase64Lua(_str)", "contents": "decodeBase64Lua(_str)"},
{ "trigger": "CCCrypto_encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "CCCrypto:encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": ":encryptAES256Lua\tCCCrypto:encryptAES256Lua(_str,_num,_str,_num)", "contents": "encryptAES256Lua(_str,_num,_str,_num)"},
{ "trigger": "CCCrypto_getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "CCCrypto:getAES256KeyLength()"},
{ "trigger": ":getAES256KeyLength\tCCCrypto:getAES256KeyLength()", "contents": "getAES256KeyLength()"},
{ "trigger": "CCCrypto_sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "CCCrypto:sha1Lua(_str,_str,_boo)"},
{ "trigger": ":sha1Lua\tCCCrypto:sha1Lua(_str,_str,_boo)", "contents": "sha1Lua(_str,_str,_boo)"},
{ "trigger": "CCCrypto_decryptXXTEALua\tCCCrypto:decryptXXTEALua(_str,_num,_str,_num)", "contents": "CCCrypto:decryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": ":decryptXXTEALua\tCCCrypto:decryptXXTEALua(_str,_num,_str,_num)", "contents": "decryptXXTEALua(_str,_num,_str,_num)"},
{ "trigger": "CCFlipY\t", "contents": "CCFlipY"},
{ "trigger": "CCFlipY_create\tCCFlipY:create(_boo)", "contents": "CCFlipY:create(_boo)"},
{ "trigger": ":create\tCCFlipY:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCMenuItemToggle\t", "contents": "CCMenuItemToggle"},
{ "trigger": "CCMenuItemToggle_selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "CCMenuItemToggle:selectedItem()"},
{ "trigger": ":selectedItem\tCCMenuItemToggle:selectedItem()", "contents": "selectedItem()"},
{ "trigger": "CCMenuItemToggle_addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "CCMenuItemToggle:addSubItem(_CCMenuItem)"},
{ "trigger": ":addSubItem\tCCMenuItemToggle:addSubItem(_CCMenuItem)", "contents": "addSubItem(_CCMenuItem)"},
{ "trigger": "CCMenuItemToggle_setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "CCMenuItemToggle:setSelectedIndex(_num)"},
{ "trigger": ":setSelectedIndex\tCCMenuItemToggle:setSelectedIndex(_num)", "contents": "setSelectedIndex(_num)"},
{ "trigger": "CCMenuItemToggle_getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "CCMenuItemToggle:getSelectedIndex()"},
{ "trigger": ":getSelectedIndex\tCCMenuItemToggle:getSelectedIndex()", "contents": "getSelectedIndex()"},
{ "trigger": "CCMenuItemToggle_create\tCCMenuItemToggle:create()", "contents": "CCMenuItemToggle:create()"},
{ "trigger": ":create\tCCMenuItemToggle:create()", "contents": "create()"},
{ "trigger": "CCMenuItemToggle_getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "CCMenuItemToggle:getSubItems()"},
{ "trigger": ":getSubItems\tCCMenuItemToggle:getSubItems()", "contents": "getSubItems()"},
{ "trigger": "CCPolygonShape\t", "contents": "CCPolygonShape"},
{ "trigger": "CCPolygonShape_setFill\tCCPolygonShape:setFill(_boo)", "contents": "CCPolygonShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCPolygonShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCPolygonShape_setClose\tCCPolygonShape:setClose(_boo)", "contents": "CCPolygonShape:setClose(_boo)"},
{ "trigger": ":setClose\tCCPolygonShape:setClose(_boo)", "contents": "setClose(_boo)"},
{ "trigger": "CCPolygonShape_isFill\tCCPolygonShape:isFill()", "contents": "CCPolygonShape:isFill()"},
{ "trigger": ":isFill\tCCPolygonShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCPolygonShape_create\tCCPolygonShape:create(_CCPointArray)", "contents": "CCPolygonShape:create(_CCPointArray)"},
{ "trigger": ":create\tCCPolygonShape:create(_CCPointArray)", "contents": "create(_CCPointArray)"},
{ "trigger": "CCPolygonShape_isClose\tCCPolygonShape:isClose()", "contents": "CCPolygonShape:isClose()"},
{ "trigger": ":isClose\tCCPolygonShape:isClose()", "contents": "isClose()"},
{ "trigger": "CCAnimate\t", "contents": "CCAnimate"},
{ "trigger": "CCAnimate_create\tCCAnimate:create(_CCAnimation)", "contents": "CCAnimate:create(_CCAnimation)"},
{ "trigger": ":create\tCCAnimate:create(_CCAnimation)", "contents": "create(_CCAnimation)"},
{ "trigger": "CCFlipX\t", "contents": "CCFlipX"},
{ "trigger": "CCFlipX_create\tCCFlipX:create(_boo)", "contents": "CCFlipX:create(_boo)"},
{ "trigger": ":create\tCCFlipX:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCParticleBatchNode\t", "contents": "CCParticleBatchNode"},
{ "trigger": "CCParticleBatchNode_disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "CCParticleBatchNode:disableParticle(_num)"},
{ "trigger": ":disableParticle\tCCParticleBatchNode:disableParticle(_num)", "contents": "disableParticle(_num)"},
{ "trigger": "CCParticleBatchNode_setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "CCParticleBatchNode:setTexture(_CCTexture2D)"},
{ "trigger": ":setTexture\tCCParticleBatchNode:setTexture(_CCTexture2D)", "contents": "setTexture(_CCTexture2D)"},
{ "trigger": "CCParticleBatchNode_getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "CCParticleBatchNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCParticleBatchNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCParticleBatchNode_insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "CCParticleBatchNode:insertChild(_CCParticleSystem,_num)"},
{ "trigger": ":insertChild\tCCParticleBatchNode:insertChild(_CCParticleSystem,_num)", "contents": "insertChild(_CCParticleSystem,_num)"},
{ "trigger": "CCParticleBatchNode_setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "CCParticleBatchNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCParticleBatchNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCParticleBatchNode_createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "CCParticleBatchNode:createWithTexture(_CCTexture2D,_num)"},
{ "trigger": ":createWithTexture\tCCParticleBatchNode:createWithTexture(_CCTexture2D,_num)", "contents": "createWithTexture(_CCTexture2D,_num)"},
{ "trigger": "CCParticleBatchNode_getTexture\tCCParticleBatchNode:getTexture()", "contents": "CCParticleBatchNode:getTexture()"},
{ "trigger": ":getTexture\tCCParticleBatchNode:getTexture()", "contents": "getTexture()"},
{ "trigger": "CCParticleBatchNode_create\tCCParticleBatchNode:create(_str,_num)", "contents": "CCParticleBatchNode:create(_str,_num)"},
{ "trigger": ":create\tCCParticleBatchNode:create(_str,_num)", "contents": "create(_str,_num)"},
{ "trigger": "CCEaseElasticOut\t", "contents": "CCEaseElasticOut"},
{ "trigger": "CCEaseElasticOut_create\tCCEaseElasticOut:create(_CCActionInterval)", "contents": "CCEaseElasticOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseElasticOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTextureCache\t", "contents": "CCTextureCache"},
{ "trigger": "CCTextureCache_removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "CCTextureCache:removeUnusedTextures()"},
{ "trigger": ":removeUnusedTextures\tCCTextureCache:removeUnusedTextures()", "contents": "removeUnusedTextures()"},
{ "trigger": "CCTextureCache_dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "CCTextureCache:dumpCachedTextureInfo()"},
{ "trigger": ":dumpCachedTextureInfo\tCCTextureCache:dumpCachedTextureInfo()", "contents": "dumpCachedTextureInfo()"},
{ "trigger": "CCTextureCache_removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "CCTextureCache:removeAllTextures()"},
{ "trigger": ":removeAllTextures\tCCTextureCache:removeAllTextures()", "contents": "removeAllTextures()"},
{ "trigger": "CCTextureCache_addImage\tCCTextureCache:addImage(_str)", "contents": "CCTextureCache:addImage(_str)"},
{ "trigger": ":addImage\tCCTextureCache:addImage(_str)", "contents": "addImage(_str)"},
{ "trigger": "CCTextureCache_purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "CCTextureCache:purgeSharedTextureCache()"},
{ "trigger": ":purgeSharedTextureCache\tCCTextureCache:purgeSharedTextureCache()", "contents": "purgeSharedTextureCache()"},
{ "trigger": "CCTextureCache_snapshotTextures\tCCTextureCache:snapshotTextures()", "contents": "CCTextureCache:snapshotTextures()"},
{ "trigger": ":snapshotTextures\tCCTextureCache:snapshotTextures()", "contents": "snapshotTextures()"},
{ "trigger": "CCTextureCache_removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "CCTextureCache:removeTexture(_CCTexture2D)"},
{ "trigger": ":removeTexture\tCCTextureCache:removeTexture(_CCTexture2D)", "contents": "removeTexture(_CCTexture2D)"},
{ "trigger": "CCTextureCache_removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "CCTextureCache:removeTextureForKey(_str)"},
{ "trigger": ":removeTextureForKey\tCCTextureCache:removeTextureForKey(_str)", "contents": "removeTextureForKey(_str)"},
{ "trigger": "CCTextureCache_addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "CCTextureCache:addPVRImage(_str)"},
{ "trigger": ":addPVRImage\tCCTextureCache:addPVRImage(_str)", "contents": "addPVRImage(_str)"},
{ "trigger": "CCTextureCache_textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "CCTextureCache:textureForKey(_str)"},
{ "trigger": ":textureForKey\tCCTextureCache:textureForKey(_str)", "contents": "textureForKey(_str)"},
{ "trigger": "CCTextureCache_addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "CCTextureCache:addUIImage(_CCImage,_str)"},
{ "trigger": ":addUIImage\tCCTextureCache:addUIImage(_CCImage,_str)", "contents": "addUIImage(_CCImage,_str)"},
{ "trigger": "CCTextureCache_reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "CCTextureCache:reloadAllTextures()"},
{ "trigger": ":reloadAllTextures\tCCTextureCache:reloadAllTextures()", "contents": "reloadAllTextures()"},
{ "trigger": "CCTextureCache_addETCImage\tCCTextureCache:addETCImage(_str)", "contents": "CCTextureCache:addETCImage(_str)"},
{ "trigger": ":addETCImage\tCCTextureCache:addETCImage(_str)", "contents": "addETCImage(_str)"},
{ "trigger": "CCTextureCache_sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "CCTextureCache:sharedTextureCache()"},
{ "trigger": ":sharedTextureCache\tCCTextureCache:sharedTextureCache()", "contents": "sharedTextureCache()"},
{ "trigger": "CCCallFunc\t", "contents": "CCCallFunc"},
{ "trigger": "CCCallFunc_create\tCCCallFunc:create(_listener)", "contents": "CCCallFunc:create(_listener)"},
{ "trigger": ":create\tCCCallFunc:create(_listener)", "contents": "create(_listener)"},
{ "trigger": "CCProgressFromTo\t", "contents": "CCProgressFromTo"},
{ "trigger": "CCProgressFromTo_create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "CCProgressFromTo:create(_num,_num,_num)"},
{ "trigger": ":create\tCCProgressFromTo:create(_num,_num,_num)", "contents": "create(_num,_num,_num)"},
{ "trigger": "CCAnimationFrame\t", "contents": "CCAnimationFrame"},
{ "trigger": "CCAnimationFrame_setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "CCAnimationFrame:setDelayUnits(_num)"},
{ "trigger": ":setDelayUnits\tCCAnimationFrame:setDelayUnits(_num)", "contents": "setDelayUnits(_num)"},
{ "trigger": "CCAnimationFrame_getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "CCAnimationFrame:getSpriteFrame()"},
{ "trigger": ":getSpriteFrame\tCCAnimationFrame:getSpriteFrame()", "contents": "getSpriteFrame()"},
{ "trigger": "CCAnimationFrame_setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimationFrame:setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":setSpriteFrame\tCCAnimationFrame:setSpriteFrame(_CCSpriteFrame)", "contents": "setSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimationFrame_getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "CCAnimationFrame:getDelayUnits()"},
{ "trigger": ":getDelayUnits\tCCAnimationFrame:getDelayUnits()", "contents": "getDelayUnits()"},
{ "trigger": "CCEaseBounceIn\t", "contents": "CCEaseBounceIn"},
{ "trigger": "CCEaseBounceIn_create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "CCEaseBounceIn:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceIn:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCTransitionFadeTR\t", "contents": "CCTransitionFadeTR"},
{ "trigger": "CCTransitionFadeTR_create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "CCTransitionFadeTR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeTR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionProgressRadialCW\t", "contents": "CCTransitionProgressRadialCW"},
{ "trigger": "CCTransitionProgressRadialCW_create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "CCTransitionProgressRadialCW:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressRadialCW:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCNotificationCenter\t", "contents": "CCNotificationCenter"},
{ "trigger": "CCNotificationCenter_unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver(_CCObject,_str)", "contents": "CCNotificationCenter:unregisterScriptObserver(_CCObject,_str)"},
{ "trigger": ":unregisterScriptObserver\tCCNotificationCenter:unregisterScriptObserver(_CCObject,_str)", "contents": "unregisterScriptObserver(_CCObject,_str)"},
{ "trigger": "CCNotificationCenter_sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "CCNotificationCenter:sharedNotificationCenter()"},
{ "trigger": ":sharedNotificationCenter\tCCNotificationCenter:sharedNotificationCenter()", "contents": "sharedNotificationCenter()"},
{ "trigger": "CCNotificationCenter_registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)", "contents": "CCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)"},
{ "trigger": ":registerScriptObserver\tCCNotificationCenter:registerScriptObserver(_CCObject,_listener,_str)", "contents": "registerScriptObserver(_CCObject,_listener,_str)"},
{ "trigger": "CCNotificationCenter_removeAllObservers\tCCNotificationCenter:removeAllObservers(_CCObject)", "contents": "CCNotificationCenter:removeAllObservers(_CCObject)"},
{ "trigger": ":removeAllObservers\tCCNotificationCenter:removeAllObservers(_CCObject)", "contents": "removeAllObservers(_CCObject)"},
{ "trigger": "CCNotificationCenter_removeObserver\tCCNotificationCenter:removeObserver(_CCObject,_str)", "contents": "CCNotificationCenter:removeObserver(_CCObject,_str)"},
{ "trigger": ":removeObserver\tCCNotificationCenter:removeObserver(_CCObject,_str)", "contents": "removeObserver(_CCObject,_str)"},
{ "trigger": "CCNotificationCenter_postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "CCNotificationCenter:postNotification(_str)"},
{ "trigger": ":postNotification\tCCNotificationCenter:postNotification(_str)", "contents": "postNotification(_str)"},
{ "trigger": "CCNotificationCenter_purgeNotificationCenter\tCCNotificationCenter:purgeNotificationCenter()", "contents": "CCNotificationCenter:purgeNotificationCenter()"},
{ "trigger": ":purgeNotificationCenter\tCCNotificationCenter:purgeNotificationCenter()", "contents": "purgeNotificationCenter()"},
{ "trigger": "CCDrawNode\t", "contents": "CCDrawNode"},
{ "trigger": "CCDrawNode_clear\tCCDrawNode:clear()", "contents": "CCDrawNode:clear()"},
{ "trigger": ":clear\tCCDrawNode:clear()", "contents": "clear()"},
{ "trigger": "CCDrawNode_drawDot\tCCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)", "contents": "CCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)"},
{ "trigger": ":drawDot\tCCDrawNode:drawDot(_CCPoint,_num,_ccColor4F)", "contents": "drawDot(_CCPoint,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "CCDrawNode:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCDrawNode:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCDrawNode_setBlendFunc\tCCDrawNode:setBlendFunc(_ccBlendFunc)", "contents": "CCDrawNode:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCDrawNode:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCDrawNode_drawSegment\tCCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)", "contents": "CCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)"},
{ "trigger": ":drawSegment\tCCDrawNode:drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)", "contents": "drawSegment(_CCPoint,_CCPoint,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)", "contents": "CCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)"},
{ "trigger": ":drawPolygon\tCCDrawNode:drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)", "contents": "drawPolygon(_CCPointArray,_ccColor4F,_num,_ccColor4F)"},
{ "trigger": "CCDrawNode_create\tCCDrawNode:create()", "contents": "CCDrawNode:create()"},
{ "trigger": ":create\tCCDrawNode:create()", "contents": "create()"},
{ "trigger": "CCTouchDispatcher\t", "contents": "CCTouchDispatcher"},
{ "trigger": "CCTouchDispatcher_removeAllDelegates\tCCTouchDispatcher:removeAllDelegates()", "contents": "CCTouchDispatcher:removeAllDelegates()"},
{ "trigger": ":removeAllDelegates\tCCTouchDispatcher:removeAllDelegates()", "contents": "removeAllDelegates()"},
{ "trigger": "CCTransitionProgressHorizontal\t", "contents": "CCTransitionProgressHorizontal"},
{ "trigger": "CCTransitionProgressHorizontal_create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "CCTransitionProgressHorizontal:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionProgressHorizontal:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCProgressTo\t", "contents": "CCProgressTo"},
{ "trigger": "CCProgressTo_create\tCCProgressTo:create(_num,_num)", "contents": "CCProgressTo:create(_num,_num)"},
{ "trigger": ":create\tCCProgressTo:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCAnimation\t", "contents": "CCAnimation"},
{ "trigger": "CCAnimation_setLoops\tCCAnimation:setLoops(_num)", "contents": "CCAnimation:setLoops(_num)"},
{ "trigger": ":setLoops\tCCAnimation:setLoops(_num)", "contents": "setLoops(_num)"},
{ "trigger": "CCAnimation_getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "CCAnimation:getTotalDelayUnits()"},
{ "trigger": ":getTotalDelayUnits\tCCAnimation:getTotalDelayUnits()", "contents": "getTotalDelayUnits()"},
{ "trigger": "CCAnimation_setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "CCAnimation:setRestoreOriginalFrame(_boo)"},
{ "trigger": ":setRestoreOriginalFrame\tCCAnimation:setRestoreOriginalFrame(_boo)", "contents": "setRestoreOriginalFrame(_boo)"},
{ "trigger": "CCAnimation_create\tCCAnimation:create()", "contents": "CCAnimation:create()"},
{ "trigger": ":create\tCCAnimation:create()", "contents": "create()"},
{ "trigger": "CCAnimation_getDuration\tCCAnimation:getDuration()", "contents": "CCAnimation:getDuration()"},
{ "trigger": ":getDuration\tCCAnimation:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCAnimation_addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)", "contents": "CCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": ":addSpriteFrameWithTexture\tCCAnimation:addSpriteFrameWithTexture(_CCTexture2D,_CCRect)", "contents": "addSpriteFrameWithTexture(_CCTexture2D,_CCRect)"},
{ "trigger": "CCAnimation_getLoops\tCCAnimation:getLoops()", "contents": "CCAnimation:getLoops()"},
{ "trigger": ":getLoops\tCCAnimation:getLoops()", "contents": "getLoops()"},
{ "trigger": "CCAnimation_addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "CCAnimation:addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": ":addSpriteFrame\tCCAnimation:addSpriteFrame(_CCSpriteFrame)", "contents": "addSpriteFrame(_CCSpriteFrame)"},
{ "trigger": "CCAnimation_addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "CCAnimation:addSpriteFrameWithFileName(_str)"},
{ "trigger": ":addSpriteFrameWithFileName\tCCAnimation:addSpriteFrameWithFileName(_str)", "contents": "addSpriteFrameWithFileName(_str)"},
{ "trigger": "CCAnimation_getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "CCAnimation:getRestoreOriginalFrame()"},
{ "trigger": ":getRestoreOriginalFrame\tCCAnimation:getRestoreOriginalFrame()", "contents": "getRestoreOriginalFrame()"},
{ "trigger": "CCAnimation_getFrames\tCCAnimation:getFrames()", "contents": "CCAnimation:getFrames()"},
{ "trigger": ":getFrames\tCCAnimation:getFrames()", "contents": "getFrames()"},
{ "trigger": "CCAnimation_setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "CCAnimation:setDelayPerUnit(_num)"},
{ "trigger": ":setDelayPerUnit\tCCAnimation:setDelayPerUnit(_num)", "contents": "setDelayPerUnit(_num)"},
{ "trigger": "CCAnimation_getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "CCAnimation:getDelayPerUnit()"},
{ "trigger": ":getDelayPerUnit\tCCAnimation:getDelayPerUnit()", "contents": "getDelayPerUnit()"},
{ "trigger": "CCAnimation_createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray,_num)", "contents": "CCAnimation:createWithSpriteFrames(_CCArray,_num)"},
{ "trigger": ":createWithSpriteFrames\tCCAnimation:createWithSpriteFrames(_CCArray,_num)", "contents": "createWithSpriteFrames(_CCArray,_num)"},
{ "trigger": "CCAnimation_copy\tCCAnimation:copy()", "contents": "CCAnimation:copy()"},
{ "trigger": ":copy\tCCAnimation:copy()", "contents": "copy()"},
{ "trigger": "CCFiniteTimeAction\t", "contents": "CCFiniteTimeAction"},
{ "trigger": "CCFiniteTimeAction_reverse\tCCFiniteTimeAction:reverse()", "contents": "CCFiniteTimeAction:reverse()"},
{ "trigger": ":reverse\tCCFiniteTimeAction:reverse()", "contents": "reverse()"},
{ "trigger": "CCFiniteTimeAction_getDuration\tCCFiniteTimeAction:getDuration()", "contents": "CCFiniteTimeAction:getDuration()"},
{ "trigger": ":getDuration\tCCFiniteTimeAction:getDuration()", "contents": "getDuration()"},
{ "trigger": "CCFiniteTimeAction_copy\tCCFiniteTimeAction:copy()", "contents": "CCFiniteTimeAction:copy()"},
{ "trigger": ":copy\tCCFiniteTimeAction:copy()", "contents": "copy()"},
{ "trigger": "CCFlipX3D\t", "contents": "CCFlipX3D"},
{ "trigger": "CCFlipX3D_create\tCCFlipX3D:create(_num)", "contents": "CCFlipX3D:create(_num)"},
{ "trigger": ":create\tCCFlipX3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCSplitCols\t", "contents": "CCSplitCols"},
{ "trigger": "CCSplitCols_create\tCCSplitCols:create(_num,_num)", "contents": "CCSplitCols:create(_num,_num)"},
{ "trigger": ":create\tCCSplitCols:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCSequence\t", "contents": "CCSequence"},
{ "trigger": "CCSequence_createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "CCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": ":createWithTwoActions\tCCSequence:createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)", "contents": "createWithTwoActions(_CCFiniteTimeAction,_CCFiniteTimeAction)"},
{ "trigger": "CCSequence_create\tCCSequence:create(_CCArray)", "contents": "CCSequence:create(_CCArray)"},
{ "trigger": ":create\tCCSequence:create(_CCArray)", "contents": "create(_CCArray)"},
{ "trigger": "CCTransitionZoomFlipAngular\t", "contents": "CCTransitionZoomFlipAngular"},
{ "trigger": "CCTransitionZoomFlipAngular_create\tCCTransitionZoomFlipAngular:create(_num,_CCScene)", "contents": "CCTransitionZoomFlipAngular:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionZoomFlipAngular:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCDelayTime\t", "contents": "CCDelayTime"},
{ "trigger": "CCDelayTime_create\tCCDelayTime:create(_num)", "contents": "CCDelayTime:create(_num)"},
{ "trigger": ":create\tCCDelayTime:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCAnimationCache\t", "contents": "CCAnimationCache"},
{ "trigger": "CCAnimationCache_addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "CCAnimationCache:addAnimationsWithFile(_str)"},
{ "trigger": ":addAnimationsWithFile\tCCAnimationCache:addAnimationsWithFile(_str)", "contents": "addAnimationsWithFile(_str)"},
{ "trigger": "CCAnimationCache_animationByName\tCCAnimationCache:animationByName(_str)", "contents": "CCAnimationCache:animationByName(_str)"},
{ "trigger": ":animationByName\tCCAnimationCache:animationByName(_str)", "contents": "animationByName(_str)"},
{ "trigger": "CCAnimationCache_addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "CCAnimationCache:addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": ":addAnimationsWithDictionary\tCCAnimationCache:addAnimationsWithDictionary(_CCDictionary)", "contents": "addAnimationsWithDictionary(_CCDictionary)"},
{ "trigger": "CCAnimationCache_removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "CCAnimationCache:removeAnimationByName(_str)"},
{ "trigger": ":removeAnimationByName\tCCAnimationCache:removeAnimationByName(_str)", "contents": "removeAnimationByName(_str)"},
{ "trigger": "CCAnimationCache_sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "CCAnimationCache:sharedAnimationCache()"},
{ "trigger": ":sharedAnimationCache\tCCAnimationCache:sharedAnimationCache()", "contents": "sharedAnimationCache()"},
{ "trigger": "CCAnimationCache_addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "CCAnimationCache:addAnimation(_CCAnimation,_str)"},
{ "trigger": ":addAnimation\tCCAnimationCache:addAnimation(_CCAnimation,_str)", "contents": "addAnimation(_CCAnimation,_str)"},
{ "trigger": "CCAnimationCache_purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "CCAnimationCache:purgeSharedAnimationCache()"},
{ "trigger": ":purgeSharedAnimationCache\tCCAnimationCache:purgeSharedAnimationCache()", "contents": "purgeSharedAnimationCache()"},
{ "trigger": "CCTMXLayer\t", "contents": "CCTMXLayer"},
{ "trigger": "CCTMXLayer_call\tCCTMXLayer:call()", "contents": "CCTMXLayer:call()"},
{ "trigger": ":call\tCCTMXLayer:call()", "contents": "call()"},
{ "trigger": "CCTMXLayer_removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "CCTMXLayer:removeTileAt(_CCPoint)"},
{ "trigger": ":removeTileAt\tCCTMXLayer:removeTileAt(_CCPoint)", "contents": "removeTileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "CCTMXLayer:getMapTileSize()"},
{ "trigger": ":getMapTileSize\tCCTMXLayer:getMapTileSize()", "contents": "getMapTileSize()"},
{ "trigger": "CCTMXLayer_getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "CCTMXLayer:getLayerOrientation()"},
{ "trigger": ":getLayerOrientation\tCCTMXLayer:getLayerOrientation()", "contents": "getLayerOrientation()"},
{ "trigger": "CCTMXLayer_releaseMap\tCCTMXLayer:releaseMap()", "contents": "CCTMXLayer:releaseMap()"},
{ "trigger": ":releaseMap\tCCTMXLayer:releaseMap()", "contents": "releaseMap()"},
{ "trigger": "CCTMXLayer_tileGIDAt\tCCTMXLayer:tileGIDAt(_CCPoint)", "contents": "CCTMXLayer:tileGIDAt(_CCPoint)"},
{ "trigger": ":tileGIDAt\tCCTMXLayer:tileGIDAt(_CCPoint)", "contents": "tileGIDAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "CCTMXLayer:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXLayer:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXLayer_getProperties\tCCTMXLayer:getProperties()", "contents": "CCTMXLayer:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayer:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXLayer_create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "CCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": ":create\tCCTMXLayer:create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "create(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": "CCTMXLayer_tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "CCTMXLayer:tileAt(_CCPoint)"},
{ "trigger": ":tileAt\tCCTMXLayer:tileAt(_CCPoint)", "contents": "tileAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_getLayerName\tCCTMXLayer:getLayerName()", "contents": "CCTMXLayer:getLayerName()"},
{ "trigger": ":getLayerName\tCCTMXLayer:getLayerName()", "contents": "getLayerName()"},
{ "trigger": "CCTMXLayer_getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "CCTMXLayer:getLayerSize()"},
{ "trigger": ":getLayerSize\tCCTMXLayer:getLayerSize()", "contents": "getLayerSize()"},
{ "trigger": "CCTMXLayer_positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "CCTMXLayer:positionAt(_CCPoint)"},
{ "trigger": ":positionAt\tCCTMXLayer:positionAt(_CCPoint)", "contents": "positionAt(_CCPoint)"},
{ "trigger": "CCTMXLayer_new\tCCTMXLayer:new()", "contents": "CCTMXLayer:new()"},
{ "trigger": ":new\tCCTMXLayer:new()", "contents": "new()"},
{ "trigger": "CCTMXLayer_setTileGID\tCCTMXLayer:setTileGID(_num,_CCPoint)", "contents": "CCTMXLayer:setTileGID(_num,_CCPoint)"},
{ "trigger": ":setTileGID\tCCTMXLayer:setTileGID(_num,_CCPoint)", "contents": "setTileGID(_num,_CCPoint)"},
{ "trigger": "CCTMXLayer_new_local\tCCTMXLayer:new_local()", "contents": "CCTMXLayer:new_local()"},
{ "trigger": ":new_local\tCCTMXLayer:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXLayer_delete\tCCTMXLayer:delete()", "contents": "CCTMXLayer:delete()"},
{ "trigger": ":delete\tCCTMXLayer:delete()", "contents": "delete()"},
{ "trigger": "CCTMXLayer_initWithTilesetInfo\tCCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "CCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": ":initWithTilesetInfo\tCCTMXLayer:initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)", "contents": "initWithTilesetInfo(_CCTMXTilesetInfo,_CCTMXLayerInfo,_CCTMXMapInfo)"},
{ "trigger": "CCTMXLayer_getTileSet\tCCTMXLayer:getTileSet()", "contents": "CCTMXLayer:getTileSet()"},
{ "trigger": ":getTileSet\tCCTMXLayer:getTileSet()", "contents": "getTileSet()"},
{ "trigger": "CCAccelAmplitude\t", "contents": "CCAccelAmplitude"},
{ "trigger": "CCAccelAmplitude_create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCJumpTiles3D\t", "contents": "CCJumpTiles3D"},
{ "trigger": "CCJumpTiles3D_create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCJumpTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCJumpTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent\t", "contents": "CCPhysicsCollisionEvent"},
{ "trigger": "CCPhysicsCollisionEvent_getDepth\tCCPhysicsCollisionEvent:getDepth(_num)", "contents": "CCPhysicsCollisionEvent:getDepth(_num)"},
{ "trigger": ":getDepth\tCCPhysicsCollisionEvent:getDepth(_num)", "contents": "getDepth(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getBody1\tCCPhysicsCollisionEvent:getBody1()", "contents": "CCPhysicsCollisionEvent:getBody1()"},
{ "trigger": ":getBody1\tCCPhysicsCollisionEvent:getBody1()", "contents": "getBody1()"},
{ "trigger": "CCPhysicsCollisionEvent_getBody2\tCCPhysicsCollisionEvent:getBody2()", "contents": "CCPhysicsCollisionEvent:getBody2()"},
{ "trigger": ":getBody2\tCCPhysicsCollisionEvent:getBody2()", "contents": "getBody2()"},
{ "trigger": "CCPhysicsCollisionEvent_getFriction\tCCPhysicsCollisionEvent:getFriction()", "contents": "CCPhysicsCollisionEvent:getFriction()"},
{ "trigger": ":getFriction\tCCPhysicsCollisionEvent:getFriction()", "contents": "getFriction()"},
{ "trigger": "CCPhysicsCollisionEvent_isFirstContact\tCCPhysicsCollisionEvent:isFirstContact()", "contents": "CCPhysicsCollisionEvent:isFirstContact()"},
{ "trigger": ":isFirstContact\tCCPhysicsCollisionEvent:isFirstContact()", "contents": "isFirstContact()"},
{ "trigger": "CCPhysicsCollisionEvent_getElasticity\tCCPhysicsCollisionEvent:getElasticity()", "contents": "CCPhysicsCollisionEvent:getElasticity()"},
{ "trigger": ":getElasticity\tCCPhysicsCollisionEvent:getElasticity()", "contents": "getElasticity()"},
{ "trigger": "CCPhysicsCollisionEvent_getNormal\tCCPhysicsCollisionEvent:getNormal(_num,_num,_num)", "contents": "CCPhysicsCollisionEvent:getNormal(_num,_num,_num)"},
{ "trigger": ":getNormal\tCCPhysicsCollisionEvent:getNormal(_num,_num,_num)", "contents": "getNormal(_num,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getSurfaceVelocities\tCCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)", "contents": "CCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)"},
{ "trigger": ":getSurfaceVelocities\tCCPhysicsCollisionEvent:getSurfaceVelocities(_num,_num)", "contents": "getSurfaceVelocities(_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getUserData\tCCPhysicsCollisionEvent:getUserData()", "contents": "CCPhysicsCollisionEvent:getUserData()"},
{ "trigger": ":getUserData\tCCPhysicsCollisionEvent:getUserData()", "contents": "getUserData()"},
{ "trigger": "CCPhysicsCollisionEvent_setUserData\tCCPhysicsCollisionEvent:setUserData(_userdata)", "contents": "CCPhysicsCollisionEvent:setUserData(_userdata)"},
{ "trigger": ":setUserData\tCCPhysicsCollisionEvent:setUserData(_userdata)", "contents": "setUserData(_userdata)"},
{ "trigger": "CCPhysicsCollisionEvent_setSurfaceVelocities\tCCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)", "contents": "CCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)"},
{ "trigger": ":setSurfaceVelocities\tCCPhysicsCollisionEvent:setSurfaceVelocities(_const_CCPoint)", "contents": "setSurfaceVelocities(_const_CCPoint)"},
{ "trigger": "CCPhysicsCollisionEvent_getWorld\tCCPhysicsCollisionEvent:getWorld()", "contents": "CCPhysicsCollisionEvent:getWorld()"},
{ "trigger": ":getWorld\tCCPhysicsCollisionEvent:getWorld()", "contents": "getWorld()"},
{ "trigger": "CCPhysicsCollisionEvent_setElasticity\tCCPhysicsCollisionEvent:setElasticity(_num)", "contents": "CCPhysicsCollisionEvent:setElasticity(_num)"},
{ "trigger": ":setElasticity\tCCPhysicsCollisionEvent:setElasticity(_num)", "contents": "setElasticity(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getPoint\tCCPhysicsCollisionEvent:getPoint(_num,_num,_num)", "contents": "CCPhysicsCollisionEvent:getPoint(_num,_num,_num)"},
{ "trigger": ":getPoint\tCCPhysicsCollisionEvent:getPoint(_num,_num,_num)", "contents": "getPoint(_num,_num,_num)"},
{ "trigger": "CCPhysicsCollisionEvent_setFriction\tCCPhysicsCollisionEvent:setFriction(_num)", "contents": "CCPhysicsCollisionEvent:setFriction(_num)"},
{ "trigger": ":setFriction\tCCPhysicsCollisionEvent:setFriction(_num)", "contents": "setFriction(_num)"},
{ "trigger": "CCPhysicsCollisionEvent_getCount\tCCPhysicsCollisionEvent:getCount()", "contents": "CCPhysicsCollisionEvent:getCount()"},
{ "trigger": ":getCount\tCCPhysicsCollisionEvent:getCount()", "contents": "getCount()"},
{ "trigger": "CCInteger\t", "contents": "CCInteger"},
{ "trigger": "CCInteger_getValue\tCCInteger:getValue()", "contents": "CCInteger:getValue()"},
{ "trigger": ":getValue\tCCInteger:getValue()", "contents": "getValue()"},
{ "trigger": "CCInteger_call\tCCInteger:call(_num)", "contents": "CCInteger:call(_num)"},
{ "trigger": ":call\tCCInteger:call(_num)", "contents": "call(_num)"},
{ "trigger": "CCInteger_new\tCCInteger:new(_num)", "contents": "CCInteger:new(_num)"},
{ "trigger": ":new\tCCInteger:new(_num)", "contents": "new(_num)"},
{ "trigger": "CCInteger_new_local\tCCInteger:new_local(_num)", "contents": "CCInteger:new_local(_num)"},
{ "trigger": ":new_local\tCCInteger:new_local(_num)", "contents": "new_local(_num)"},
{ "trigger": "CCInteger_create\tCCInteger:create(_num)", "contents": "CCInteger:create(_num)"},
{ "trigger": ":create\tCCInteger:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCMenuItemLabel\t", "contents": "CCMenuItemLabel"},
{ "trigger": "CCMenuItemLabel_setString\tCCMenuItemLabel:setString(_str)", "contents": "CCMenuItemLabel:setString(_str)"},
{ "trigger": ":setString\tCCMenuItemLabel:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCMenuItemLabel_getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "CCMenuItemLabel:getDisabledColor()"},
{ "trigger": ":getDisabledColor\tCCMenuItemLabel:getDisabledColor()", "contents": "getDisabledColor()"},
{ "trigger": "CCMenuItemLabel_setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "CCMenuItemLabel:setLabel(_CCNode)"},
{ "trigger": ":setLabel\tCCMenuItemLabel:setLabel(_CCNode)", "contents": "setLabel(_CCNode)"},
{ "trigger": "CCMenuItemLabel_create\tCCMenuItemLabel:create(_CCNode)", "contents": "CCMenuItemLabel:create(_CCNode)"},
{ "trigger": ":create\tCCMenuItemLabel:create(_CCNode)", "contents": "create(_CCNode)"},
{ "trigger": "CCMenuItemLabel_getLabel\tCCMenuItemLabel:getLabel()", "contents": "CCMenuItemLabel:getLabel()"},
{ "trigger": ":getLabel\tCCMenuItemLabel:getLabel()", "contents": "getLabel()"},
{ "trigger": "CCMenuItemLabel_setDisabledColor\tCCMenuItemLabel:setDisabledColor(_ccColor3B)", "contents": "CCMenuItemLabel:setDisabledColor(_ccColor3B)"},
{ "trigger": ":setDisabledColor\tCCMenuItemLabel:setDisabledColor(_ccColor3B)", "contents": "setDisabledColor(_ccColor3B)"},
{ "trigger": "CCLayerColor\t", "contents": "CCLayerColor"},
{ "trigger": "CCLayerColor_setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "CCLayerColor:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLayerColor:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLayerColor_changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "CCLayerColor:changeWidthAndHeight(_num,_num)"},
{ "trigger": ":changeWidthAndHeight\tCCLayerColor:changeWidthAndHeight(_num,_num)", "contents": "changeWidthAndHeight(_num,_num)"},
{ "trigger": "CCLayerColor_setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "CCLayerColor:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLayerColor:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLayerColor_getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "CCLayerColor:getBlendFunc()"},
{ "trigger": ":getBlendFunc\tCCLayerColor:getBlendFunc()", "contents": "getBlendFunc()"},
{ "trigger": "CCLayerColor_setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "CCLayerColor:setBlendFunc(_ccBlendFunc)"},
{ "trigger": ":setBlendFunc\tCCLayerColor:setBlendFunc(_ccBlendFunc)", "contents": "setBlendFunc(_ccBlendFunc)"},
{ "trigger": "CCLayerColor_changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "CCLayerColor:changeWidth(_num)"},
{ "trigger": ":changeWidth\tCCLayerColor:changeWidth(_num)", "contents": "changeWidth(_num)"},
{ "trigger": "CCLayerColor_changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "CCLayerColor:changeHeight(_num)"},
{ "trigger": ":changeHeight\tCCLayerColor:changeHeight(_num)", "contents": "changeHeight(_num)"},
{ "trigger": "CCLayerColor_isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "CCLayerColor:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLayerColor:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLayerColor_setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "CCLayerColor:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLayerColor:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLayerColor_create\tCCLayerColor:create()", "contents": "CCLayerColor:create()"},
{ "trigger": ":create\tCCLayerColor:create()", "contents": "create()"},
{ "trigger": "CCRenderTexture\t", "contents": "CCRenderTexture"},
{ "trigger": "CCRenderTexture_newCCImage\tCCRenderTexture:newCCImage(_boo)", "contents": "CCRenderTexture:newCCImage(_boo)"},
{ "trigger": ":newCCImage\tCCRenderTexture:newCCImage(_boo)", "contents": "newCCImage(_boo)"},
{ "trigger": "CCRenderTexture_getClearColor\tCCRenderTexture:getClearColor()", "contents": "CCRenderTexture:getClearColor()"},
{ "trigger": ":getClearColor\tCCRenderTexture:getClearColor()", "contents": "getClearColor()"},
{ "trigger": "CCRenderTexture_setClearDepth\tCCRenderTexture:setClearDepth(_num)", "contents": "CCRenderTexture:setClearDepth(_num)"},
{ "trigger": ":setClearDepth\tCCRenderTexture:setClearDepth(_num)", "contents": "setClearDepth(_num)"},
{ "trigger": "CCRenderTexture_beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "CCRenderTexture:beginWithClear(_num,_num,_num,_num)"},
{ "trigger": ":beginWithClear\tCCRenderTexture:beginWithClear(_num,_num,_num,_num)", "contents": "beginWithClear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "CCRenderTexture:clearDepth(_num)"},
{ "trigger": ":clearDepth\tCCRenderTexture:clearDepth(_num)", "contents": "clearDepth(_num)"},
{ "trigger": "CCRenderTexture_create\tCCRenderTexture:create(_num,_num)", "contents": "CCRenderTexture:create(_num,_num)"},
{ "trigger": ":create\tCCRenderTexture:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "CCRenderTexture_getClearFlags\tCCRenderTexture:getClearFlags()", "contents": "CCRenderTexture:getClearFlags()"},
{ "trigger": ":getClearFlags\tCCRenderTexture:getClearFlags()", "contents": "getClearFlags()"},
{ "trigger": "CCRenderTexture_setClearColor\tCCRenderTexture:setClearColor(_ccColor4F)", "contents": "CCRenderTexture:setClearColor(_ccColor4F)"},
{ "trigger": ":setClearColor\tCCRenderTexture:setClearColor(_ccColor4F)", "contents": "setClearColor(_ccColor4F)"},
{ "trigger": "CCRenderTexture_begin\tCCRenderTexture:begin()", "contents": "CCRenderTexture:begin()"},
{ "trigger": ":begin\tCCRenderTexture:begin()", "contents": "begin()"},
{ "trigger": "CCRenderTexture_clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "CCRenderTexture:clear(_num,_num,_num,_num)"},
{ "trigger": ":clear\tCCRenderTexture:clear(_num,_num,_num,_num)", "contents": "clear(_num,_num,_num,_num)"},
{ "trigger": "CCRenderTexture_setClearStencil\tCCRenderTexture:setClearStencil(_num)", "contents": "CCRenderTexture:setClearStencil(_num)"},
{ "trigger": ":setClearStencil\tCCRenderTexture:setClearStencil(_num)", "contents": "setClearStencil(_num)"},
{ "trigger": "CCRenderTexture_setAutoDraw\tCCRenderTexture:setAutoDraw(_boo)", "contents": "CCRenderTexture:setAutoDraw(_boo)"},
{ "trigger": ":setAutoDraw\tCCRenderTexture:setAutoDraw(_boo)", "contents": "setAutoDraw(_boo)"},
{ "trigger": "CCRenderTexture_getClearDepth\tCCRenderTexture:getClearDepth()", "contents": "CCRenderTexture:getClearDepth()"},
{ "trigger": ":getClearDepth\tCCRenderTexture:getClearDepth()", "contents": "getClearDepth()"},
{ "trigger": "CCRenderTexture_endToLua\tCCRenderTexture:endToLua()", "contents": "CCRenderTexture:endToLua()"},
{ "trigger": ":endToLua\tCCRenderTexture:endToLua()", "contents": "endToLua()"},
{ "trigger": "CCRenderTexture_saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "CCRenderTexture:saveToFile(_str)"},
{ "trigger": ":saveToFile\tCCRenderTexture:saveToFile(_str)", "contents": "saveToFile(_str)"},
{ "trigger": "CCRenderTexture_getSprite\tCCRenderTexture:getSprite()", "contents": "CCRenderTexture:getSprite()"},
{ "trigger": ":getSprite\tCCRenderTexture:getSprite()", "contents": "getSprite()"},
{ "trigger": "CCRenderTexture_isAutoDraw\tCCRenderTexture:isAutoDraw()", "contents": "CCRenderTexture:isAutoDraw()"},
{ "trigger": ":isAutoDraw\tCCRenderTexture:isAutoDraw()", "contents": "isAutoDraw()"},
{ "trigger": "CCRenderTexture_getClearStencil\tCCRenderTexture:getClearStencil()", "contents": "CCRenderTexture:getClearStencil()"},
{ "trigger": ":getClearStencil\tCCRenderTexture:getClearStencil()", "contents": "getClearStencil()"},
{ "trigger": "CCRenderTexture_clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "CCRenderTexture:clearStencil(_num)"},
{ "trigger": ":clearStencil\tCCRenderTexture:clearStencil(_num)", "contents": "clearStencil(_num)"},
{ "trigger": "CCRenderTexture_setClearFlags\tCCRenderTexture:setClearFlags(_num)", "contents": "CCRenderTexture:setClearFlags(_num)"},
{ "trigger": ":setClearFlags\tCCRenderTexture:setClearFlags(_num)", "contents": "setClearFlags(_num)"},
{ "trigger": "CCTransitionMoveInB\t", "contents": "CCTransitionMoveInB"},
{ "trigger": "CCTransitionMoveInB_create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "CCTransitionMoveInB:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInB:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCCatmullRomBy\t", "contents": "CCCatmullRomBy"},
{ "trigger": "CCCatmullRomBy_create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "CCCatmullRomBy:create(_num,_CCPointArray)"},
{ "trigger": ":create\tCCCatmullRomBy:create(_num,_CCPointArray)", "contents": "create(_num,_CCPointArray)"},
{ "trigger": "CCBool\t", "contents": "CCBool"},
{ "trigger": "CCBool_getValue\tCCBool:getValue()", "contents": "CCBool:getValue()"},
{ "trigger": ":getValue\tCCBool:getValue()", "contents": "getValue()"},
{ "trigger": "CCBool_call\tCCBool:call(_boo)", "contents": "CCBool:call(_boo)"},
{ "trigger": ":call\tCCBool:call(_boo)", "contents": "call(_boo)"},
{ "trigger": "CCBool_new\tCCBool:new(_boo)", "contents": "CCBool:new(_boo)"},
{ "trigger": ":new\tCCBool:new(_boo)", "contents": "new(_boo)"},
{ "trigger": "CCBool_new_local\tCCBool:new_local(_boo)", "contents": "CCBool:new_local(_boo)"},
{ "trigger": ":new_local\tCCBool:new_local(_boo)", "contents": "new_local(_boo)"},
{ "trigger": "CCBool_create\tCCBool:create(_boo)", "contents": "CCBool:create(_boo)"},
{ "trigger": ":create\tCCBool:create(_boo)", "contents": "create(_boo)"},
{ "trigger": "CCTiledGrid3DAction\t", "contents": "CCTiledGrid3DAction"},
{ "trigger": "CCTiledGrid3DAction_create\tCCTiledGrid3DAction:create(_num,_CCSize)", "contents": "CCTiledGrid3DAction:create(_num,_CCSize)"},
{ "trigger": ":create\tCCTiledGrid3DAction:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionMoveInT\t", "contents": "CCTransitionMoveInT"},
{ "trigger": "CCTransitionMoveInT_create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "CCTransitionMoveInT:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInT:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionMoveInL\t", "contents": "CCTransitionMoveInL"},
{ "trigger": "CCTransitionMoveInL_create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "CCTransitionMoveInL:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInL:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCTransitionRotoZoom\t", "contents": "CCTransitionRotoZoom"},
{ "trigger": "CCTransitionRotoZoom_create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "CCTransitionRotoZoom:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionRotoZoom:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCFadeOutTRTiles\t", "contents": "CCFadeOutTRTiles"},
{ "trigger": "CCFadeOutTRTiles_create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "CCFadeOutTRTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutTRTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCTransitionMoveInR\t", "contents": "CCTransitionMoveInR"},
{ "trigger": "CCTransitionMoveInR_create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "CCTransitionMoveInR:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionMoveInR:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCGridAction\t", "contents": "CCGridAction"},
{ "trigger": "CCPhysicsVector\t", "contents": "CCPhysicsVector"},
{ "trigger": "CCPhysicsVector_createForAngle\tCCPhysicsVector:createForAngle(_num)", "contents": "CCPhysicsVector:createForAngle(_num)"},
{ "trigger": ":createForAngle\tCCPhysicsVector:createForAngle(_num)", "contents": "createForAngle(_num)"},
{ "trigger": "CCPhysicsVector_getValue\tCCPhysicsVector:getValue(_num,_num)", "contents": "CCPhysicsVector:getValue(_num,_num)"},
{ "trigger": ":getValue\tCCPhysicsVector:getValue(_num,_num)", "contents": "getValue(_num,_num)"},
{ "trigger": "CCPhysicsVector_createForRotation\tCCPhysicsVector:createForRotation(_num)", "contents": "CCPhysicsVector:createForRotation(_num)"},
{ "trigger": ":createForRotation\tCCPhysicsVector:createForRotation(_num)", "contents": "createForRotation(_num)"},
{ "trigger": "CCPhysicsVector_sub\tCCPhysicsVector:sub(_CCPhysicsVector)", "contents": "CCPhysicsVector:sub(_CCPhysicsVector)"},
{ "trigger": ":sub\tCCPhysicsVector:sub(_CCPhysicsVector)", "contents": "sub(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_negate\tCCPhysicsVector:negate()", "contents": "CCPhysicsVector:negate()"},
{ "trigger": ":negate\tCCPhysicsVector:negate()", "contents": "negate()"},
{ "trigger": "CCPhysicsVector_rotate\tCCPhysicsVector:rotate(_CCPhysicsVector)", "contents": "CCPhysicsVector:rotate(_CCPhysicsVector)"},
{ "trigger": ":rotate\tCCPhysicsVector:rotate(_CCPhysicsVector)", "contents": "rotate(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_distsq\tCCPhysicsVector:distsq(_CCPhysicsVector)", "contents": "CCPhysicsVector:distsq(_CCPhysicsVector)"},
{ "trigger": ":distsq\tCCPhysicsVector:distsq(_CCPhysicsVector)", "contents": "distsq(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_lengthsq\tCCPhysicsVector:lengthsq()", "contents": "CCPhysicsVector:lengthsq()"},
{ "trigger": ":lengthsq\tCCPhysicsVector:lengthsq()", "contents": "lengthsq()"},
{ "trigger": "CCPhysicsVector_sum\tCCPhysicsVector:sum()", "contents": "CCPhysicsVector:sum()"},
{ "trigger": ":sum\tCCPhysicsVector:sum()", "contents": "sum()"},
{ "trigger": "CCPhysicsVector_equal\tCCPhysicsVector:equal(_CCPhysicsVector)", "contents": "CCPhysicsVector:equal(_CCPhysicsVector)"},
{ "trigger": ":equal\tCCPhysicsVector:equal(_CCPhysicsVector)", "contents": "equal(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_add\tCCPhysicsVector:add(_CCPhysicsVector)", "contents": "CCPhysicsVector:add(_CCPhysicsVector)"},
{ "trigger": ":add\tCCPhysicsVector:add(_CCPhysicsVector)", "contents": "add(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_create\tCCPhysicsVector:create(_const_CCPoint)", "contents": "CCPhysicsVector:create(_const_CCPoint)"},
{ "trigger": ":create\tCCPhysicsVector:create(_const_CCPoint)", "contents": "create(_const_CCPoint)"},
{ "trigger": "CCPhysicsVector_rperp\tCCPhysicsVector:rperp()", "contents": "CCPhysicsVector:rperp()"},
{ "trigger": ":rperp\tCCPhysicsVector:rperp()", "contents": "rperp()"},
{ "trigger": "CCPhysicsVector_angle\tCCPhysicsVector:angle()", "contents": "CCPhysicsVector:angle()"},
{ "trigger": ":angle\tCCPhysicsVector:angle()", "contents": "angle()"},
{ "trigger": "CCPhysicsVector_dot\tCCPhysicsVector:dot(_CCPhysicsVector)", "contents": "CCPhysicsVector:dot(_CCPhysicsVector)"},
{ "trigger": ":dot\tCCPhysicsVector:dot(_CCPhysicsVector)", "contents": "dot(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_perp\tCCPhysicsVector:perp()", "contents": "CCPhysicsVector:perp()"},
{ "trigger": ":perp\tCCPhysicsVector:perp()", "contents": "perp()"},
{ "trigger": "CCPhysicsVector_rotation\tCCPhysicsVector:rotation()", "contents": "CCPhysicsVector:rotation()"},
{ "trigger": ":rotation\tCCPhysicsVector:rotation()", "contents": "rotation()"},
{ "trigger": "CCPhysicsVector_length\tCCPhysicsVector:length()", "contents": "CCPhysicsVector:length()"},
{ "trigger": ":length\tCCPhysicsVector:length()", "contents": "length()"},
{ "trigger": "CCPhysicsVector_multi\tCCPhysicsVector:multi(_num)", "contents": "CCPhysicsVector:multi(_num)"},
{ "trigger": ":multi\tCCPhysicsVector:multi(_num)", "contents": "multi(_num)"},
{ "trigger": "CCPhysicsVector_dist\tCCPhysicsVector:dist(_CCPhysicsVector)", "contents": "CCPhysicsVector:dist(_CCPhysicsVector)"},
{ "trigger": ":dist\tCCPhysicsVector:dist(_CCPhysicsVector)", "contents": "dist(_CCPhysicsVector)"},
{ "trigger": "CCPhysicsVector_cross\tCCPhysicsVector:cross(_CCPhysicsVector)", "contents": "CCPhysicsVector:cross(_CCPhysicsVector)"},
{ "trigger": ":cross\tCCPhysicsVector:cross(_CCPhysicsVector)", "contents": "cross(_CCPhysicsVector)"},
{ "trigger": "CCParallaxNode\t", "contents": "CCParallaxNode"},
{ "trigger": "CCParallaxNode_addChild\tCCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)", "contents": "CCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)"},
{ "trigger": ":addChild\tCCParallaxNode:addChild(_CCNode,_num,_CCPoint,_CCPoint)", "contents": "addChild(_CCNode,_num,_CCPoint,_CCPoint)"},
{ "trigger": "CCParallaxNode_create\tCCParallaxNode:create()", "contents": "CCParallaxNode:create()"},
{ "trigger": ":create\tCCParallaxNode:create()", "contents": "create()"},
{ "trigger": "CCEaseOut\t", "contents": "CCEaseOut"},
{ "trigger": "CCEaseOut_create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "CCEaseOut:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseOut:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCEGLView\t", "contents": "CCEGLView"},
{ "trigger": "CCEGLView_setFrameSize\tCCEGLView:setFrameSize(_num,_num)", "contents": "CCEGLView:setFrameSize(_num,_num)"},
{ "trigger": ":setFrameSize\tCCEGLView:setFrameSize(_num,_num)", "contents": "setFrameSize(_num,_num)"},
{ "trigger": "CCEGLView_setDesignResolutionSize\tCCEGLView:setDesignResolutionSize(_num,_num,_num)", "contents": "CCEGLView:setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": ":setDesignResolutionSize\tCCEGLView:setDesignResolutionSize(_num,_num,_num)", "contents": "setDesignResolutionSize(_num,_num,_num)"},
{ "trigger": "CCEGLView_getDesignResolutionSize\tCCEGLView:getDesignResolutionSize()", "contents": "CCEGLView:getDesignResolutionSize()"},
{ "trigger": ":getDesignResolutionSize\tCCEGLView:getDesignResolutionSize()", "contents": "getDesignResolutionSize()"},
{ "trigger": "CCEGLView_getFrameSize\tCCEGLView:getFrameSize()", "contents": "CCEGLView:getFrameSize()"},
{ "trigger": ":getFrameSize\tCCEGLView:getFrameSize()", "contents": "getFrameSize()"},
{ "trigger": "CCEGLView_getScaleY\tCCEGLView:getScaleY()", "contents": "CCEGLView:getScaleY()"},
{ "trigger": ":getScaleY\tCCEGLView:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCEGLView_getVisibleOrigin\tCCEGLView:getVisibleOrigin()", "contents": "CCEGLView:getVisibleOrigin()"},
{ "trigger": ":getVisibleOrigin\tCCEGLView:getVisibleOrigin()", "contents": "getVisibleOrigin()"},
{ "trigger": "CCEGLView_getScaleX\tCCEGLView:getScaleX()", "contents": "CCEGLView:getScaleX()"},
{ "trigger": ":getScaleX\tCCEGLView:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCEGLView_isScissorEnabled\tCCEGLView:isScissorEnabled()", "contents": "CCEGLView:isScissorEnabled()"},
{ "trigger": ":isScissorEnabled\tCCEGLView:isScissorEnabled()", "contents": "isScissorEnabled()"},
{ "trigger": "CCEGLView_sharedOpenGLView\tCCEGLView:sharedOpenGLView()", "contents": "CCEGLView:sharedOpenGLView()"},
{ "trigger": ":sharedOpenGLView\tCCEGLView:sharedOpenGLView()", "contents": "sharedOpenGLView()"},
{ "trigger": "CCEGLView_setViewPortInPoints\tCCEGLView:setViewPortInPoints(_num,_num,_num,_num)", "contents": "CCEGLView:setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setViewPortInPoints\tCCEGLView:setViewPortInPoints(_num,_num,_num,_num)", "contents": "setViewPortInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCEGLView_getScissorRect\tCCEGLView:getScissorRect()", "contents": "CCEGLView:getScissorRect()"},
{ "trigger": ":getScissorRect\tCCEGLView:getScissorRect()", "contents": "getScissorRect()"},
{ "trigger": "CCEGLView_getVisibleSize\tCCEGLView:getVisibleSize()", "contents": "CCEGLView:getVisibleSize()"},
{ "trigger": ":getVisibleSize\tCCEGLView:getVisibleSize()", "contents": "getVisibleSize()"},
{ "trigger": "CCEGLView_getViewPortRect\tCCEGLView:getViewPortRect()", "contents": "CCEGLView:getViewPortRect()"},
{ "trigger": ":getViewPortRect\tCCEGLView:getViewPortRect()", "contents": "getViewPortRect()"},
{ "trigger": "CCEGLView_setScissorInPoints\tCCEGLView:setScissorInPoints(_num,_num,_num,_num)", "contents": "CCEGLView:setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": ":setScissorInPoints\tCCEGLView:setScissorInPoints(_num,_num,_num,_num)", "contents": "setScissorInPoints(_num,_num,_num,_num)"},
{ "trigger": "CCControlSaturationBrightnessPicker\t", "contents": "CCControlSaturationBrightnessPicker"},
{ "trigger": "CCControlSaturationBrightnessPicker_getBrightness\tCCControlSaturationBrightnessPicker:getBrightness()", "contents": "CCControlSaturationBrightnessPicker:getBrightness()"},
{ "trigger": ":getBrightness\tCCControlSaturationBrightnessPicker:getBrightness()", "contents": "getBrightness()"},
{ "trigger": "CCControlSaturationBrightnessPicker_create\tCCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)", "contents": "CCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)"},
{ "trigger": ":create\tCCControlSaturationBrightnessPicker:create(_CCNode,_CCPoint)", "contents": "create(_CCNode,_CCPoint)"},
{ "trigger": "CCControlSaturationBrightnessPicker_getSaturation\tCCControlSaturationBrightnessPicker:getSaturation()", "contents": "CCControlSaturationBrightnessPicker:getSaturation()"},
{ "trigger": ":getSaturation\tCCControlSaturationBrightnessPicker:getSaturation()", "contents": "getSaturation()"},
{ "trigger": "CCControlUtils\t", "contents": "CCControlUtils"},
{ "trigger": "CCControlUtils_CCRectUnion\tCCControlUtils:CCRectUnion(_CCRect,_CCRect)", "contents": "CCControlUtils:CCRectUnion(_CCRect,_CCRect)"},
{ "trigger": ":CCRectUnion\tCCControlUtils:CCRectUnion(_CCRect,_CCRect)", "contents": "CCRectUnion(_CCRect,_CCRect)"},
{ "trigger": "CCControlUtils_HSVfromRGB\tCCControlUtils:HSVfromRGB(_RGBA)", "contents": "CCControlUtils:HSVfromRGB(_RGBA)"},
{ "trigger": ":HSVfromRGB\tCCControlUtils:HSVfromRGB(_RGBA)", "contents": "HSVfromRGB(_RGBA)"},
{ "trigger": "CCControlUtils_RGBfromHSV\tCCControlUtils:RGBfromHSV(_HSV)", "contents": "CCControlUtils:RGBfromHSV(_HSV)"},
{ "trigger": ":RGBfromHSV\tCCControlUtils:RGBfromHSV(_HSV)", "contents": "RGBfromHSV(_HSV)"},
{ "trigger": "CCNode\t", "contents": "CCNode"},
{ "trigger": "CCNode_cleanup\tCCNode:cleanup()", "contents": "CCNode:cleanup()"},
{ "trigger": ":cleanup\tCCNode:cleanup()", "contents": "cleanup()"},
{ "trigger": "CCNode_setScaleY\tCCNode:setScaleY(_num)", "contents": "CCNode:setScaleY(_num)"},
{ "trigger": ":setScaleY\tCCNode:setScaleY(_num)", "contents": "setScaleY(_num)"},
{ "trigger": "CCNode_getChildrenCount\tCCNode:getChildrenCount()", "contents": "CCNode:getChildrenCount()"},
{ "trigger": ":getChildrenCount\tCCNode:getChildrenCount()", "contents": "getChildrenCount()"},
{ "trigger": "CCNode_setScaleX\tCCNode:setScaleX(_num)", "contents": "CCNode:setScaleX(_num)"},
{ "trigger": ":setScaleX\tCCNode:setScaleX(_num)", "contents": "setScaleX(_num)"},
{ "trigger": "CCNode_reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "CCNode:reorderChild(_CCNode,_num)"},
{ "trigger": ":reorderChild\tCCNode:reorderChild(_CCNode,_num)", "contents": "reorderChild(_CCNode,_num)"},
{ "trigger": "CCNode_getChildren\tCCNode:getChildren()", "contents": "CCNode:getChildren()"},
{ "trigger": ":getChildren\tCCNode:getChildren()", "contents": "getChildren()"},
{ "trigger": "CCNode_visit\tCCNode:visit()", "contents": "CCNode:visit()"},
{ "trigger": ":visit\tCCNode:visit()", "contents": "visit()"},
{ "trigger": "CCNode_isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "CCNode:isIgnoreAnchorPointForPosition()"},
{ "trigger": ":isIgnoreAnchorPointForPosition\tCCNode:isIgnoreAnchorPointForPosition()", "contents": "isIgnoreAnchorPointForPosition()"},
{ "trigger": "CCNode_removeFromParent\tCCNode:removeFromParent()", "contents": "CCNode:removeFromParent()"},
{ "trigger": ":removeFromParent\tCCNode:removeFromParent()", "contents": "removeFromParent()"},
{ "trigger": "CCNode_convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "CCNode:convertToWorldSpace(_CCPoint)"},
{ "trigger": ":convertToWorldSpace\tCCNode:convertToWorldSpace(_CCPoint)", "contents": "convertToWorldSpace(_CCPoint)"},
{ "trigger": "CCNode_getBoundingBox\tCCNode:getBoundingBox()", "contents": "CCNode:getBoundingBox()"},
{ "trigger": ":getBoundingBox\tCCNode:getBoundingBox()", "contents": "getBoundingBox()"},
{ "trigger": "CCNode_numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "CCNode:numberOfRunningActions()"},
{ "trigger": ":numberOfRunningActions\tCCNode:numberOfRunningActions()", "contents": "numberOfRunningActions()"},
{ "trigger": "CCNode_draw\tCCNode:draw()", "contents": "CCNode:draw()"},
{ "trigger": ":draw\tCCNode:draw()", "contents": "draw()"},
{ "trigger": "CCNode_setRotation\tCCNode:setRotation(_num)", "contents": "CCNode:setRotation(_num)"},
{ "trigger": ":setRotation\tCCNode:setRotation(_num)", "contents": "setRotation(_num)"},
{ "trigger": "CCNode_setTag\tCCNode:setTag(_num)", "contents": "CCNode:setTag(_num)"},
{ "trigger": ":setTag\tCCNode:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCNode_getScale\tCCNode:getScale()", "contents": "CCNode:getScale()"},
{ "trigger": ":getScale\tCCNode:getScale()", "contents": "getScale()"},
{ "trigger": "CCNode_scheduleUpdate\tCCNode:scheduleUpdate()", "contents": "CCNode:scheduleUpdate()"},
{ "trigger": ":scheduleUpdate\tCCNode:scheduleUpdate()", "contents": "scheduleUpdate()"},
{ "trigger": "CCNode_getShaderProgram\tCCNode:getShaderProgram()", "contents": "CCNode:getShaderProgram()"},
{ "trigger": ":getShaderProgram\tCCNode:getShaderProgram()", "contents": "getShaderProgram()"},
{ "trigger": "CCNode_convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "CCNode:convertToNodeSpace(_CCPoint)"},
{ "trigger": ":convertToNodeSpace\tCCNode:convertToNodeSpace(_CCPoint)", "contents": "convertToNodeSpace(_CCPoint)"},
{ "trigger": "CCNode_runAction\tCCNode:runAction(_CCAction)", "contents": "CCNode:runAction(_CCAction)"},
{ "trigger": ":runAction\tCCNode:runAction(_CCAction)", "contents": "runAction(_CCAction)"},
{ "trigger": "CCNode_setRotationX\tCCNode:setRotationX(_num)", "contents": "CCNode:setRotationX(_num)"},
{ "trigger": ":setRotationX\tCCNode:setRotationX(_num)", "contents": "setRotationX(_num)"},
{ "trigger": "CCNode_setRotationY\tCCNode:setRotationY(_num)", "contents": "CCNode:setRotationY(_num)"},
{ "trigger": ":setRotationY\tCCNode:setRotationY(_num)", "contents": "setRotationY(_num)"},
{ "trigger": "CCNode_getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "CCNode:getAnchorPointInPoints()"},
{ "trigger": ":getAnchorPointInPoints\tCCNode:getAnchorPointInPoints()", "contents": "getAnchorPointInPoints()"},
{ "trigger": "CCNode_convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpace\tCCNode:convertTouchToNodeSpace(_CCTouch)", "contents": "convertTouchToNodeSpace(_CCTouch)"},
{ "trigger": "CCNode_scheduleUpdateWithPriority\tCCNode:scheduleUpdateWithPriority(_num)", "contents": "CCNode:scheduleUpdateWithPriority(_num)"},
{ "trigger": ":scheduleUpdateWithPriority\tCCNode:scheduleUpdateWithPriority(_num)", "contents": "scheduleUpdateWithPriority(_num)"},
{ "trigger": "CCNode_setVertexZ\tCCNode:setVertexZ(_num)", "contents": "CCNode:setVertexZ(_num)"},
{ "trigger": ":setVertexZ\tCCNode:setVertexZ(_num)", "contents": "setVertexZ(_num)"},
{ "trigger": "CCNode_isRunning\tCCNode:isRunning()", "contents": "CCNode:isRunning()"},
{ "trigger": ":isRunning\tCCNode:isRunning()", "contents": "isRunning()"},
{ "trigger": "CCNode_setParent\tCCNode:setParent(_CCNode)", "contents": "CCNode:setParent(_CCNode)"},
{ "trigger": ":setParent\tCCNode:setParent(_CCNode)", "contents": "setParent(_CCNode)"},
{ "trigger": "CCNode_getParent\tCCNode:getParent()", "contents": "CCNode:getParent()"},
{ "trigger": ":getParent\tCCNode:getParent()", "contents": "getParent()"},
{ "trigger": "CCNode_getContentSize\tCCNode:getContentSize()", "contents": "CCNode:getContentSize()"},
{ "trigger": ":getContentSize\tCCNode:getContentSize()", "contents": "getContentSize()"},
{ "trigger": "CCNode_getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "CCNode:getAnchorPoint()"},
{ "trigger": ":getAnchorPoint\tCCNode:getAnchorPoint()", "contents": "getAnchorPoint()"},
{ "trigger": "CCNode_setPosition\tCCNode:setPosition(_CCPoint)", "contents": "CCNode:setPosition(_CCPoint)"},
{ "trigger": ":setPosition\tCCNode:setPosition(_CCPoint)", "contents": "setPosition(_CCPoint)"},
{ "trigger": "CCNode_getRotation\tCCNode:getRotation()", "contents": "CCNode:getRotation()"},
{ "trigger": ":getRotation\tCCNode:getRotation()", "contents": "getRotation()"},
{ "trigger": "CCNode_create\tCCNode:create()", "contents": "CCNode:create()"},
{ "trigger": ":create\tCCNode:create()", "contents": "create()"},
{ "trigger": "CCNode_convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "CCNode:convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": ":convertToWorldSpaceAR\tCCNode:convertToWorldSpaceAR(_CCPoint)", "contents": "convertToWorldSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_getUserObject\tCCNode:getUserObject()", "contents": "CCNode:getUserObject()"},
{ "trigger": ":getUserObject\tCCNode:getUserObject()", "contents": "getUserObject()"},
{ "trigger": "CCNode_stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "CCNode:stopActionByTag(_num)"},
{ "trigger": ":stopActionByTag\tCCNode:stopActionByTag(_num)", "contents": "stopActionByTag(_num)"},
{ "trigger": "CCNode_convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "CCNode:convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": ":convertTouchToNodeSpaceAR\tCCNode:convertTouchToNodeSpaceAR(_CCTouch)", "contents": "convertTouchToNodeSpaceAR(_CCTouch)"},
{ "trigger": "CCNode_convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "CCNode:convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": ":convertToNodeSpaceAR\tCCNode:convertToNodeSpaceAR(_CCPoint)", "contents": "convertToNodeSpaceAR(_CCPoint)"},
{ "trigger": "CCNode_removeChild\tCCNode:removeChild(_CCNode)", "contents": "CCNode:removeChild(_CCNode)"},
{ "trigger": ":removeChild\tCCNode:removeChild(_CCNode)", "contents": "removeChild(_CCNode)"},
{ "trigger": "CCNode_getRotationY\tCCNode:getRotationY()", "contents": "CCNode:getRotationY()"},
{ "trigger": ":getRotationY\tCCNode:getRotationY()", "contents": "getRotationY()"},
{ "trigger": "CCNode_getActionByTag\tCCNode:getActionByTag(_num)", "contents": "CCNode:getActionByTag(_num)"},
{ "trigger": ":getActionByTag\tCCNode:getActionByTag(_num)", "contents": "getActionByTag(_num)"},
{ "trigger": "CCNode_stopAllActions\tCCNode:stopAllActions()", "contents": "CCNode:stopAllActions()"},
{ "trigger": ":stopAllActions\tCCNode:stopAllActions()", "contents": "stopAllActions()"},
{ "trigger": "CCNode_getRotationX\tCCNode:getRotationX()", "contents": "CCNode:getRotationX()"},
{ "trigger": ":getRotationX\tCCNode:getRotationX()", "contents": "getRotationX()"},
{ "trigger": "CCNode_addChild\tCCNode:addChild(_CCNode)", "contents": "CCNode:addChild(_CCNode)"},
{ "trigger": ":addChild\tCCNode:addChild(_CCNode)", "contents": "addChild(_CCNode)"},
{ "trigger": "CCNode_unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "CCNode:unregisterScriptHandler()"},
{ "trigger": ":unregisterScriptHandler\tCCNode:unregisterScriptHandler()", "contents": "unregisterScriptHandler()"},
{ "trigger": "CCNode_sortAllChildren\tCCNode:sortAllChildren()", "contents": "CCNode:sortAllChildren()"},
{ "trigger": ":sortAllChildren\tCCNode:sortAllChildren()", "contents": "sortAllChildren()"},
{ "trigger": "CCNode_getChildByTag\tCCNode:getChildByTag(_num)", "contents": "CCNode:getChildByTag(_num)"},
{ "trigger": ":getChildByTag\tCCNode:getChildByTag(_num)", "contents": "getChildByTag(_num)"},
{ "trigger": "CCNode_getTag\tCCNode:getTag()", "contents": "CCNode:getTag()"},
{ "trigger": ":getTag\tCCNode:getTag()", "contents": "getTag()"},
{ "trigger": "CCNode_setShaderProgram\tCCNode:setShaderProgram(_CCGLProgram)", "contents": "CCNode:setShaderProgram(_CCGLProgram)"},
{ "trigger": ":setShaderProgram\tCCNode:setShaderProgram(_CCGLProgram)", "contents": "setShaderProgram(_CCGLProgram)"},
{ "trigger": "CCNode_getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "CCNode:getOrderOfArrival()"},
{ "trigger": ":getOrderOfArrival\tCCNode:getOrderOfArrival()", "contents": "getOrderOfArrival()"},
{ "trigger": "CCNode_setZOrder\tCCNode:setZOrder(_num)", "contents": "CCNode:setZOrder(_num)"},
{ "trigger": ":setZOrder\tCCNode:setZOrder(_num)", "contents": "setZOrder(_num)"},
{ "trigger": "CCNode_getVertexZ\tCCNode:getVertexZ()", "contents": "CCNode:getVertexZ()"},
{ "trigger": ":getVertexZ\tCCNode:getVertexZ()", "contents": "getVertexZ()"},
{ "trigger": "CCNode_getScaleY\tCCNode:getScaleY()", "contents": "CCNode:getScaleY()"},
{ "trigger": ":getScaleY\tCCNode:getScaleY()", "contents": "getScaleY()"},
{ "trigger": "CCNode_getPosition\tCCNode:getPosition(_num,_num)", "contents": "CCNode:getPosition(_num,_num)"},
{ "trigger": ":getPosition\tCCNode:getPosition(_num,_num)", "contents": "getPosition(_num,_num)"},
{ "trigger": "CCNode_setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "CCNode:setAnchorPoint(_CCPoint)"},
{ "trigger": ":setAnchorPoint\tCCNode:setAnchorPoint(_CCPoint)", "contents": "setAnchorPoint(_CCPoint)"},
{ "trigger": "CCNode_getScaleX\tCCNode:getScaleX()", "contents": "CCNode:getScaleX()"},
{ "trigger": ":getScaleX\tCCNode:getScaleX()", "contents": "getScaleX()"},
{ "trigger": "CCNode_removeAllChildren\tCCNode:removeAllChildren()", "contents": "CCNode:removeAllChildren()"},
{ "trigger": ":removeAllChildren\tCCNode:removeAllChildren()", "contents": "removeAllChildren()"},
{ "trigger": "CCNode_boundingBox\tCCNode:boundingBox()", "contents": "CCNode:boundingBox()"},
{ "trigger": ":boundingBox\tCCNode:boundingBox()", "contents": "boundingBox()"},
{ "trigger": "CCNode_isVisible\tCCNode:isVisible()", "contents": "CCNode:isVisible()"},
{ "trigger": ":isVisible\tCCNode:isVisible()", "contents": "isVisible()"},
{ "trigger": "CCNode_getPositionY\tCCNode:getPositionY()", "contents": "CCNode:getPositionY()"},
{ "trigger": ":getPositionY\tCCNode:getPositionY()", "contents": "getPositionY()"},
{ "trigger": "CCNode_getPositionX\tCCNode:getPositionX()", "contents": "CCNode:getPositionX()"},
{ "trigger": ":getPositionX\tCCNode:getPositionX()", "contents": "getPositionX()"},
{ "trigger": "CCNode_scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "CCNode:scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": ":scheduleUpdateWithPriorityLua\tCCNode:scheduleUpdateWithPriorityLua(_listener,_num)", "contents": "scheduleUpdateWithPriorityLua(_listener,_num)"},
{ "trigger": "CCNode_getZOrder\tCCNode:getZOrder()", "contents": "CCNode:getZOrder()"},
{ "trigger": ":getZOrder\tCCNode:getZOrder()", "contents": "getZOrder()"},
{ "trigger": "CCNode_getSkewY\tCCNode:getSkewY()", "contents": "CCNode:getSkewY()"},
{ "trigger": ":getSkewY\tCCNode:getSkewY()", "contents": "getSkewY()"},
{ "trigger": "CCNode_getSkewX\tCCNode:getSkewX()", "contents": "CCNode:getSkewX()"},
{ "trigger": ":getSkewX\tCCNode:getSkewX()", "contents": "getSkewX()"},
{ "trigger": "CCNode_unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "CCNode:unscheduleUpdate()"},
{ "trigger": ":unscheduleUpdate\tCCNode:unscheduleUpdate()", "contents": "unscheduleUpdate()"},
{ "trigger": "CCNode_setSkewY\tCCNode:setSkewY(_num)", "contents": "CCNode:setSkewY(_num)"},
{ "trigger": ":setSkewY\tCCNode:setSkewY(_num)", "contents": "setSkewY(_num)"},
{ "trigger": "CCNode_setSkewX\tCCNode:setSkewX(_num)", "contents": "CCNode:setSkewX(_num)"},
{ "trigger": ":setSkewX\tCCNode:setSkewX(_num)", "contents": "setSkewX(_num)"},
{ "trigger": "CCNode_stopAction\tCCNode:stopAction(_CCAction)", "contents": "CCNode:stopAction(_CCAction)"},
{ "trigger": ":stopAction\tCCNode:stopAction(_CCAction)", "contents": "stopAction(_CCAction)"},
{ "trigger": "CCNode_setScale\tCCNode:setScale(_num)", "contents": "CCNode:setScale(_num)"},
{ "trigger": ":setScale\tCCNode:setScale(_num)", "contents": "setScale(_num)"},
{ "trigger": "CCNode_setVisible\tCCNode:setVisible(_boo)", "contents": "CCNode:setVisible(_boo)"},
{ "trigger": ":setVisible\tCCNode:setVisible(_boo)", "contents": "setVisible(_boo)"},
{ "trigger": "CCNode_setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "CCNode:setUserObject(_CCObject)"},
{ "trigger": ":setUserObject\tCCNode:setUserObject(_CCObject)", "contents": "setUserObject(_CCObject)"},
{ "trigger": "CCNode_removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "CCNode:removeFromParentAndCleanup(_boo)"},
{ "trigger": ":removeFromParentAndCleanup\tCCNode:removeFromParentAndCleanup(_boo)", "contents": "removeFromParentAndCleanup(_boo)"},
{ "trigger": "CCNode_registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "CCNode:registerScriptHandler(_listener)"},
{ "trigger": ":registerScriptHandler\tCCNode:registerScriptHandler(_listener)", "contents": "registerScriptHandler(_listener)"},
{ "trigger": "CCNode_getCamera\tCCNode:getCamera()", "contents": "CCNode:getCamera()"},
{ "trigger": ":getCamera\tCCNode:getCamera()", "contents": "getCamera()"},
{ "trigger": "CCNode_ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "CCNode:ignoreAnchorPointForPosition(_boo)"},
{ "trigger": ":ignoreAnchorPointForPosition\tCCNode:ignoreAnchorPointForPosition(_boo)", "contents": "ignoreAnchorPointForPosition(_boo)"},
{ "trigger": "CCNode_getPositionInCCPoint\tCCNode:getPositionInCCPoint()", "contents": "CCNode:getPositionInCCPoint()"},
{ "trigger": ":getPositionInCCPoint\tCCNode:getPositionInCCPoint()", "contents": "getPositionInCCPoint()"},
{ "trigger": "CCNode_removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "CCNode:removeAllChildrenWithCleanup(_boo)"},
{ "trigger": ":removeAllChildrenWithCleanup\tCCNode:removeAllChildrenWithCleanup(_boo)", "contents": "removeAllChildrenWithCleanup(_boo)"},
{ "trigger": "CCNode_setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "CCNode:setOrderOfArrival(_num)"},
{ "trigger": ":setOrderOfArrival\tCCNode:setOrderOfArrival(_num)", "contents": "setOrderOfArrival(_num)"},
{ "trigger": "CCNode_removeChildByTag\tCCNode:removeChildByTag(_num)", "contents": "CCNode:removeChildByTag(_num)"},
{ "trigger": ":removeChildByTag\tCCNode:removeChildByTag(_num)", "contents": "removeChildByTag(_num)"},
{ "trigger": "CCNode_setPositionY\tCCNode:setPositionY(_num)", "contents": "CCNode:setPositionY(_num)"},
{ "trigger": ":setPositionY\tCCNode:setPositionY(_num)", "contents": "setPositionY(_num)"},
{ "trigger": "CCNode_setPositionX\tCCNode:setPositionX(_num)", "contents": "CCNode:setPositionX(_num)"},
{ "trigger": ":setPositionX\tCCNode:setPositionX(_num)", "contents": "setPositionX(_num)"},
{ "trigger": "CCNode_setContentSize\tCCNode:setContentSize(_CCSize)", "contents": "CCNode:setContentSize(_CCSize)"},
{ "trigger": ":setContentSize\tCCNode:setContentSize(_CCSize)", "contents": "setContentSize(_CCSize)"},
{ "trigger": "CCLens3D\t", "contents": "CCLens3D"},
{ "trigger": "CCLens3D_create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "CCLens3D:create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": ":create\tCCLens3D:create(_num,_CCSize,_CCPoint,_num)", "contents": "create(_num,_CCSize,_CCPoint,_num)"},
{ "trigger": "CCAccelerometer\t", "contents": "CCAccelerometer"},
{ "trigger": "CCAccelerometer_setAccelerometerInterval\tCCAccelerometer:setAccelerometerInterval(_num)", "contents": "CCAccelerometer:setAccelerometerInterval(_num)"},
{ "trigger": ":setAccelerometerInterval\tCCAccelerometer:setAccelerometerInterval(_num)", "contents": "setAccelerometerInterval(_num)"},
{ "trigger": "CCBlink\t", "contents": "CCBlink"},
{ "trigger": "CCBlink_create\tCCBlink:create(_num,_num)", "contents": "CCBlink:create(_num,_num)"},
{ "trigger": ":create\tCCBlink:create(_num,_num)", "contents": "create(_num,_num)"},
{ "trigger": "ArmatureDataManager\t", "contents": "ArmatureDataManager"},
{ "trigger": "ArmatureDataManager_addSpriteFrameFromFile\tArmatureDataManager:addSpriteFrameFromFile(_str,_str)", "contents": "ArmatureDataManager:addSpriteFrameFromFile(_str,_str)"},
{ "trigger": ":addSpriteFrameFromFile\tArmatureDataManager:addSpriteFrameFromFile(_str,_str)", "contents": "addSpriteFrameFromFile(_str,_str)"},
{ "trigger": "ArmatureDataManager_purgeArmatureSystem\tArmatureDataManager:purgeArmatureSystem()", "contents": "ArmatureDataManager:purgeArmatureSystem()"},
{ "trigger": ":purgeArmatureSystem\tArmatureDataManager:purgeArmatureSystem()", "contents": "purgeArmatureSystem()"},
{ "trigger": "ArmatureDataManager_sharedArmatureDataManager\tArmatureDataManager:sharedArmatureDataManager()", "contents": "ArmatureDataManager:sharedArmatureDataManager()"},
{ "trigger": ":sharedArmatureDataManager\tArmatureDataManager:sharedArmatureDataManager()", "contents": "sharedArmatureDataManager()"},
{ "trigger": "ArmatureDataManager_removeAll\tArmatureDataManager:removeAll()", "contents": "ArmatureDataManager:removeAll()"},
{ "trigger": ":removeAll\tArmatureDataManager:removeAll()", "contents": "removeAll()"},
{ "trigger": "ArmatureDataManager_addArmatureFileInfo\tArmatureDataManager:addArmatureFileInfo(_str,_str,_str)", "contents": "ArmatureDataManager:addArmatureFileInfo(_str,_str,_str)"},
{ "trigger": ":addArmatureFileInfo\tArmatureDataManager:addArmatureFileInfo(_str,_str,_str)", "contents": "addArmatureFileInfo(_str,_str,_str)"},
{ "trigger": "CCFadeOutUpTiles\t", "contents": "CCFadeOutUpTiles"},
{ "trigger": "CCFadeOutUpTiles_create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "CCFadeOutUpTiles:create(_num,_CCSize)"},
{ "trigger": ":create\tCCFadeOutUpTiles:create(_num,_CCSize)", "contents": "create(_num,_CCSize)"},
{ "trigger": "CCMenuItemAtlasFont\t", "contents": "CCMenuItemAtlasFont"},
{ "trigger": "CCMenuItemAtlasFont_create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "CCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)"},
{ "trigger": ":create\tCCMenuItemAtlasFont:create(_str,_str,_num,_num,_num)", "contents": "create(_str,_str,_num,_num,_num)"},
{ "trigger": "CCWavesTiles3D\t", "contents": "CCWavesTiles3D"},
{ "trigger": "CCWavesTiles3D_create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "CCWavesTiles3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWavesTiles3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCMoveBy\t", "contents": "CCMoveBy"},
{ "trigger": "CCMoveBy_create\tCCMoveBy:create(_num,_CCPoint)", "contents": "CCMoveBy:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveBy:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCRectShape\t", "contents": "CCRectShape"},
{ "trigger": "CCRectShape_setFill\tCCRectShape:setFill(_boo)", "contents": "CCRectShape:setFill(_boo)"},
{ "trigger": ":setFill\tCCRectShape:setFill(_boo)", "contents": "setFill(_boo)"},
{ "trigger": "CCRectShape_setSize\tCCRectShape:setSize(_CCSize)", "contents": "CCRectShape:setSize(_CCSize)"},
{ "trigger": ":setSize\tCCRectShape:setSize(_CCSize)", "contents": "setSize(_CCSize)"},
{ "trigger": "CCRectShape_isFill\tCCRectShape:isFill()", "contents": "CCRectShape:isFill()"},
{ "trigger": ":isFill\tCCRectShape:isFill()", "contents": "isFill()"},
{ "trigger": "CCRectShape_getSize\tCCRectShape:getSize()", "contents": "CCRectShape:getSize()"},
{ "trigger": ":getSize\tCCRectShape:getSize()", "contents": "getSize()"},
{ "trigger": "CCRectShape_create\tCCRectShape:create(_CCSize)", "contents": "CCRectShape:create(_CCSize)"},
{ "trigger": ":create\tCCRectShape:create(_CCSize)", "contents": "create(_CCSize)"},
{ "trigger": "CCPointShape\t", "contents": "CCPointShape"},
{ "trigger": "CCPointShape_create\tCCPointShape:create()", "contents": "CCPointShape:create()"},
{ "trigger": ":create\tCCPointShape:create()", "contents": "create()"},
{ "trigger": "CCMoveTo\t", "contents": "CCMoveTo"},
{ "trigger": "CCMoveTo_create\tCCMoveTo:create(_num,_CCPoint)", "contents": "CCMoveTo:create(_num,_CCPoint)"},
{ "trigger": ":create\tCCMoveTo:create(_num,_CCPoint)", "contents": "create(_num,_CCPoint)"},
{ "trigger": "CCEaseBounceOut\t", "contents": "CCEaseBounceOut"},
{ "trigger": "CCEaseBounceOut_create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "CCEaseBounceOut:create(_CCActionInterval)"},
{ "trigger": ":create\tCCEaseBounceOut:create(_CCActionInterval)", "contents": "create(_CCActionInterval)"},
{ "trigger": "CCSpriteFrameCache\t", "contents": "CCSpriteFrameCache"},
{ "trigger": "CCSpriteFrameCache_spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "CCSpriteFrameCache:spriteFrameByName(_str)"},
{ "trigger": ":spriteFrameByName\tCCSpriteFrameCache:spriteFrameByName(_str)", "contents": "spriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "CCSpriteFrameCache:removeSpriteFrames()"},
{ "trigger": ":removeSpriteFrames\tCCSpriteFrameCache:removeSpriteFrames()", "contents": "removeSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "CCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": ":addSpriteFrame\tCCSpriteFrameCache:addSpriteFrame(_CCSpriteFrame,_str)", "contents": "addSpriteFrame(_CCSpriteFrame,_str)"},
{ "trigger": "CCSpriteFrameCache_addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "CCSpriteFrameCache:addSpriteFramesWithFile(_str)"},
{ "trigger": ":addSpriteFramesWithFile\tCCSpriteFrameCache:addSpriteFramesWithFile(_str)", "contents": "addSpriteFramesWithFile(_str)"},
{ "trigger": "CCSpriteFrameCache_purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:purgeSharedSpriteFrameCache()"},
{ "trigger": ":purgeSharedSpriteFrameCache\tCCSpriteFrameCache:purgeSharedSpriteFrameCache()", "contents": "purgeSharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "CCSpriteFrameCache:removeSpriteFrameByName(_str)"},
{ "trigger": ":removeSpriteFrameByName\tCCSpriteFrameCache:removeSpriteFrameByName(_str)", "contents": "removeSpriteFrameByName(_str)"},
{ "trigger": "CCSpriteFrameCache_removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "CCSpriteFrameCache:removeUnusedSpriteFrames()"},
{ "trigger": ":removeUnusedSpriteFrames\tCCSpriteFrameCache:removeUnusedSpriteFrames()", "contents": "removeUnusedSpriteFrames()"},
{ "trigger": "CCSpriteFrameCache_sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "CCSpriteFrameCache:sharedSpriteFrameCache()"},
{ "trigger": ":sharedSpriteFrameCache\tCCSpriteFrameCache:sharedSpriteFrameCache()", "contents": "sharedSpriteFrameCache()"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": ":removeSpriteFramesFromTexture\tCCSpriteFrameCache:removeSpriteFramesFromTexture(_CCTexture2D)", "contents": "removeSpriteFramesFromTexture(_CCTexture2D)"},
{ "trigger": "CCSpriteFrameCache_removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "CCSpriteFrameCache:removeSpriteFramesFromFile(_str)"},
{ "trigger": ":removeSpriteFramesFromFile\tCCSpriteFrameCache:removeSpriteFramesFromFile(_str)", "contents": "removeSpriteFramesFromFile(_str)"},
{ "trigger": "CCMenuItemSprite\t", "contents": "CCMenuItemSprite"},
{ "trigger": "CCMenuItemSprite_getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "CCMenuItemSprite:getNormalImage()"},
{ "trigger": ":getNormalImage\tCCMenuItemSprite:getNormalImage()", "contents": "getNormalImage()"},
{ "trigger": "CCMenuItemSprite_setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "CCMenuItemSprite:setDisabledImage(_CCNode)"},
{ "trigger": ":setDisabledImage\tCCMenuItemSprite:setDisabledImage(_CCNode)", "contents": "setDisabledImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "CCMenuItemSprite:setSelectedImage(_CCNode)"},
{ "trigger": ":setSelectedImage\tCCMenuItemSprite:setSelectedImage(_CCNode)", "contents": "setSelectedImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "CCMenuItemSprite:setNormalImage(_CCNode)"},
{ "trigger": ":setNormalImage\tCCMenuItemSprite:setNormalImage(_CCNode)", "contents": "setNormalImage(_CCNode)"},
{ "trigger": "CCMenuItemSprite_getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "CCMenuItemSprite:getSelectedImage()"},
{ "trigger": ":getSelectedImage\tCCMenuItemSprite:getSelectedImage()", "contents": "getSelectedImage()"},
{ "trigger": "CCMenuItemSprite_create\tCCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)", "contents": "CCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)"},
{ "trigger": ":create\tCCMenuItemSprite:create(_CCNode,_CCNode,_CCNode)", "contents": "create(_CCNode,_CCNode,_CCNode)"},
{ "trigger": "CCMenuItemSprite_getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "CCMenuItemSprite:getDisabledImage()"},
{ "trigger": ":getDisabledImage\tCCMenuItemSprite:getDisabledImage()", "contents": "getDisabledImage()"},
{ "trigger": "CCControlSlider\t", "contents": "CCControlSlider"},
{ "trigger": "CCControlSlider_setMaximumAllowedValue\tCCControlSlider:setMaximumAllowedValue(_num)", "contents": "CCControlSlider:setMaximumAllowedValue(_num)"},
{ "trigger": ":setMaximumAllowedValue\tCCControlSlider:setMaximumAllowedValue(_num)", "contents": "setMaximumAllowedValue(_num)"},
{ "trigger": "CCControlSlider_getMaximumAllowedValue\tCCControlSlider:getMaximumAllowedValue()", "contents": "CCControlSlider:getMaximumAllowedValue()"},
{ "trigger": ":getMaximumAllowedValue\tCCControlSlider:getMaximumAllowedValue()", "contents": "getMaximumAllowedValue()"},
{ "trigger": "CCControlSlider_getValue\tCCControlSlider:getValue()", "contents": "CCControlSlider:getValue()"},
{ "trigger": ":getValue\tCCControlSlider:getValue()", "contents": "getValue()"},
{ "trigger": "CCControlSlider_getMaximumValue\tCCControlSlider:getMaximumValue()", "contents": "CCControlSlider:getMaximumValue()"},
{ "trigger": ":getMaximumValue\tCCControlSlider:getMaximumValue()", "contents": "getMaximumValue()"},
{ "trigger": "CCControlSlider_setMinimumValue\tCCControlSlider:setMinimumValue(_num)", "contents": "CCControlSlider:setMinimumValue(_num)"},
{ "trigger": ":setMinimumValue\tCCControlSlider:setMinimumValue(_num)", "contents": "setMinimumValue(_num)"},
{ "trigger": "CCControlSlider_getMinimumAllowedValue\tCCControlSlider:getMinimumAllowedValue()", "contents": "CCControlSlider:getMinimumAllowedValue()"},
{ "trigger": ":getMinimumAllowedValue\tCCControlSlider:getMinimumAllowedValue()", "contents": "getMinimumAllowedValue()"},
{ "trigger": "CCControlSlider_setMaximumValue\tCCControlSlider:setMaximumValue(_num)", "contents": "CCControlSlider:setMaximumValue(_num)"},
{ "trigger": ":setMaximumValue\tCCControlSlider:setMaximumValue(_num)", "contents": "setMaximumValue(_num)"},
{ "trigger": "CCControlSlider_getMinimumValue\tCCControlSlider:getMinimumValue()", "contents": "CCControlSlider:getMinimumValue()"},
{ "trigger": ":getMinimumValue\tCCControlSlider:getMinimumValue()", "contents": "getMinimumValue()"},
{ "trigger": "CCControlSlider_setValue\tCCControlSlider:setValue(_num)", "contents": "CCControlSlider:setValue(_num)"},
{ "trigger": ":setValue\tCCControlSlider:setValue(_num)", "contents": "setValue(_num)"},
{ "trigger": "CCControlSlider_setMinimumAllowedValue\tCCControlSlider:setMinimumAllowedValue(_num)", "contents": "CCControlSlider:setMinimumAllowedValue(_num)"},
{ "trigger": ":setMinimumAllowedValue\tCCControlSlider:setMinimumAllowedValue(_num)", "contents": "setMinimumAllowedValue(_num)"},
{ "trigger": "CCControlSlider_create\tCCControlSlider:create(_str,_str,_str)", "contents": "CCControlSlider:create(_str,_str,_str)"},
{ "trigger": ":create\tCCControlSlider:create(_str,_str,_str)", "contents": "create(_str,_str,_str)"},
{ "trigger": "ccBezierConfig\t", "contents": "ccBezierConfig"},
{ "trigger": "ccBezierConfig_call\tccBezierConfig:call()", "contents": "ccBezierConfig:call()"},
{ "trigger": ":call\tccBezierConfig:call()", "contents": "call()"},
{ "trigger": "ccBezierConfig_new\tccBezierConfig:new()", "contents": "ccBezierConfig:new()"},
{ "trigger": ":new\tccBezierConfig:new()", "contents": "new()"},
{ "trigger": "ccBezierConfig_new_local\tccBezierConfig:new_local()", "contents": "ccBezierConfig:new_local()"},
{ "trigger": ":new_local\tccBezierConfig:new_local()", "contents": "new_local()"},
{ "trigger": "ccBezierConfig_delete\tccBezierConfig:delete()", "contents": "ccBezierConfig:delete()"},
{ "trigger": ":delete\tccBezierConfig:delete()", "contents": "delete()"},
{ "trigger": "CCUserDefault\t", "contents": "CCUserDefault"},
{ "trigger": "CCUserDefault_purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "CCUserDefault:purgeSharedUserDefault()"},
{ "trigger": ":purgeSharedUserDefault\tCCUserDefault:purgeSharedUserDefault()", "contents": "purgeSharedUserDefault()"},
{ "trigger": "CCUserDefault_getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "CCUserDefault:getFloatForKey(_str)"},
{ "trigger": ":getFloatForKey\tCCUserDefault:getFloatForKey(_str)", "contents": "getFloatForKey(_str)"},
{ "trigger": "CCUserDefault_getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "CCUserDefault:getDoubleForKey(_str)"},
{ "trigger": ":getDoubleForKey\tCCUserDefault:getDoubleForKey(_str)", "contents": "getDoubleForKey(_str)"},
{ "trigger": "CCUserDefault_setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "CCUserDefault:setDoubleForKey(_str,_num)"},
{ "trigger": ":setDoubleForKey\tCCUserDefault:setDoubleForKey(_str,_num)", "contents": "setDoubleForKey(_str,_num)"},
{ "trigger": "CCUserDefault_getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "CCUserDefault:getStringForKey(_str)"},
{ "trigger": ":getStringForKey\tCCUserDefault:getStringForKey(_str)", "contents": "getStringForKey(_str)"},
{ "trigger": "CCUserDefault_setStringForKey\tCCUserDefault:setStringForKey(_str,_str)", "contents": "CCUserDefault:setStringForKey(_str,_str)"},
{ "trigger": ":setStringForKey\tCCUserDefault:setStringForKey(_str,_str)", "contents": "setStringForKey(_str,_str)"},
{ "trigger": "CCUserDefault_getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "CCUserDefault:getBoolForKey(_str)"},
{ "trigger": ":getBoolForKey\tCCUserDefault:getBoolForKey(_str)", "contents": "getBoolForKey(_str)"},
{ "trigger": "CCUserDefault_flush\tCCUserDefault:flush()", "contents": "CCUserDefault:flush()"},
{ "trigger": ":flush\tCCUserDefault:flush()", "contents": "flush()"},
{ "trigger": "CCUserDefault_getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "CCUserDefault:getIntegerForKey(_str)"},
{ "trigger": ":getIntegerForKey\tCCUserDefault:getIntegerForKey(_str)", "contents": "getIntegerForKey(_str)"},
{ "trigger": "CCUserDefault_setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "CCUserDefault:setFloatForKey(_str,_num)"},
{ "trigger": ":setFloatForKey\tCCUserDefault:setFloatForKey(_str,_num)", "contents": "setFloatForKey(_str,_num)"},
{ "trigger": "CCUserDefault_isXMLFileExist\tCCUserDefault:isXMLFileExist()", "contents": "CCUserDefault:isXMLFileExist()"},
{ "trigger": ":isXMLFileExist\tCCUserDefault:isXMLFileExist()", "contents": "isXMLFileExist()"},
{ "trigger": "CCUserDefault_setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "CCUserDefault:setIntegerForKey(_str,_num)"},
{ "trigger": ":setIntegerForKey\tCCUserDefault:setIntegerForKey(_str,_num)", "contents": "setIntegerForKey(_str,_num)"},
{ "trigger": "CCUserDefault_sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "CCUserDefault:sharedUserDefault()"},
{ "trigger": ":sharedUserDefault\tCCUserDefault:sharedUserDefault()", "contents": "sharedUserDefault()"},
{ "trigger": "CCUserDefault_setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "CCUserDefault:setBoolForKey(_str,_boo)"},
{ "trigger": ":setBoolForKey\tCCUserDefault:setBoolForKey(_str,_boo)", "contents": "setBoolForKey(_str,_boo)"},
{ "trigger": "CCUserDefault_getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "CCUserDefault:getXMLFilePath()"},
{ "trigger": ":getXMLFilePath\tCCUserDefault:getXMLFilePath()", "contents": "getXMLFilePath()"},
{ "trigger": "CCLayer\t", "contents": "CCLayer"},
{ "trigger": "CCLayer_setAccelerometerInterval\tCCLayer:setAccelerometerInterval(_num)", "contents": "CCLayer:setAccelerometerInterval(_num)"},
{ "trigger": ":setAccelerometerInterval\tCCLayer:setAccelerometerInterval(_num)", "contents": "setAccelerometerInterval(_num)"},
{ "trigger": "CCLayer_setTouchMode\tCCLayer:setTouchMode(_num)", "contents": "CCLayer:setTouchMode(_num)"},
{ "trigger": ":setTouchMode\tCCLayer:setTouchMode(_num)", "contents": "setTouchMode(_num)"},
{ "trigger": "CCLayer_unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "CCLayer:unregisterScriptAccelerateHandler()"},
{ "trigger": ":unregisterScriptAccelerateHandler\tCCLayer:unregisterScriptAccelerateHandler()", "contents": "unregisterScriptAccelerateHandler()"},
{ "trigger": "CCLayer_getTouchMode\tCCLayer:getTouchMode()", "contents": "CCLayer:getTouchMode()"},
{ "trigger": ":getTouchMode\tCCLayer:getTouchMode()", "contents": "getTouchMode()"},
{ "trigger": "CCLayer_registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "CCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": ":registerScriptTouchHandler\tCCLayer:registerScriptTouchHandler(_listener,_boo,_num,_boo)", "contents": "registerScriptTouchHandler(_listener,_boo,_num,_boo)"},
{ "trigger": "CCLayer_setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "CCLayer:setTouchEnabled(_boo)"},
{ "trigger": ":setTouchEnabled\tCCLayer:setTouchEnabled(_boo)", "contents": "setTouchEnabled(_boo)"},
{ "trigger": "CCLayer_create\tCCLayer:create()", "contents": "CCLayer:create()"},
{ "trigger": ":create\tCCLayer:create()", "contents": "create()"},
{ "trigger": "CCLayer_unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "CCLayer:unregisterScriptTouchHandler()"},
{ "trigger": ":unregisterScriptTouchHandler\tCCLayer:unregisterScriptTouchHandler()", "contents": "unregisterScriptTouchHandler()"},
{ "trigger": "CCLayer_isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "CCLayer:isKeypadEnabled()"},
{ "trigger": ":isKeypadEnabled\tCCLayer:isKeypadEnabled()", "contents": "isKeypadEnabled()"},
{ "trigger": "CCLayer_getTouchPriority\tCCLayer:getTouchPriority()", "contents": "CCLayer:getTouchPriority()"},
{ "trigger": ":getTouchPriority\tCCLayer:getTouchPriority()", "contents": "getTouchPriority()"},
{ "trigger": "CCLayer_setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "CCLayer:setTouchPriority(_num)"},
{ "trigger": ":setTouchPriority\tCCLayer:setTouchPriority(_num)", "contents": "setTouchPriority(_num)"},
{ "trigger": "CCLayer_setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "CCLayer:setAccelerometerEnabled(_boo)"},
{ "trigger": ":setAccelerometerEnabled\tCCLayer:setAccelerometerEnabled(_boo)", "contents": "setAccelerometerEnabled(_boo)"},
{ "trigger": "CCLayer_setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "CCLayer:setKeypadEnabled(_boo)"},
{ "trigger": ":setKeypadEnabled\tCCLayer:setKeypadEnabled(_boo)", "contents": "setKeypadEnabled(_boo)"},
{ "trigger": "CCLayer_registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "CCLayer:registerScriptAccelerateHandler(_listener)"},
{ "trigger": ":registerScriptAccelerateHandler\tCCLayer:registerScriptAccelerateHandler(_listener)", "contents": "registerScriptAccelerateHandler(_listener)"},
{ "trigger": "CCLayer_isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "CCLayer:isAccelerometerEnabled()"},
{ "trigger": ":isAccelerometerEnabled\tCCLayer:isAccelerometerEnabled()", "contents": "isAccelerometerEnabled()"},
{ "trigger": "CCLayer_isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "CCLayer:isTouchEnabled()"},
{ "trigger": ":isTouchEnabled\tCCLayer:isTouchEnabled()", "contents": "isTouchEnabled()"},
{ "trigger": "CCLayer_unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "CCLayer:unregisterScriptKeypadHandler()"},
{ "trigger": ":unregisterScriptKeypadHandler\tCCLayer:unregisterScriptKeypadHandler()", "contents": "unregisterScriptKeypadHandler()"},
{ "trigger": "CCLayer_registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "CCLayer:registerScriptKeypadHandler(_listener)"},
{ "trigger": ":registerScriptKeypadHandler\tCCLayer:registerScriptKeypadHandler(_listener)", "contents": "registerScriptKeypadHandler(_listener)"},
{ "trigger": "CCTransitionFadeDown\t", "contents": "CCTransitionFadeDown"},
{ "trigger": "CCTransitionFadeDown_create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "CCTransitionFadeDown:create(_num,_CCScene)"},
{ "trigger": ":create\tCCTransitionFadeDown:create(_num,_CCScene)", "contents": "create(_num,_CCScene)"},
{ "trigger": "CCLiquid\t", "contents": "CCLiquid"},
{ "trigger": "CCLiquid_create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "CCLiquid:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCLiquid:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCShatteredTiles3D\t", "contents": "CCShatteredTiles3D"},
{ "trigger": "CCShatteredTiles3D_create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "CCShatteredTiles3D:create(_num,_CCSize,_num,_boo)"},
{ "trigger": ":create\tCCShatteredTiles3D:create(_num,_CCSize,_num,_boo)", "contents": "create(_num,_CCSize,_num,_boo)"},
{ "trigger": "CCReverseTime\t", "contents": "CCReverseTime"},
{ "trigger": "CCReverseTime_create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "CCReverseTime:create(_CCFiniteTimeAction)"},
{ "trigger": ":create\tCCReverseTime:create(_CCFiniteTimeAction)", "contents": "create(_CCFiniteTimeAction)"},
{ "trigger": "CCShapeNode\t", "contents": "CCShapeNode"},
{ "trigger": "CCShapeNode_setColor\tCCShapeNode:setColor(_ccColor4F)", "contents": "CCShapeNode:setColor(_ccColor4F)"},
{ "trigger": ":setColor\tCCShapeNode:setColor(_ccColor4F)", "contents": "setColor(_ccColor4F)"},
{ "trigger": "CCShapeNode_setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "CCShapeNode:setLineStippleEnabled(_boo)"},
{ "trigger": ":setLineStippleEnabled\tCCShapeNode:setLineStippleEnabled(_boo)", "contents": "setLineStippleEnabled(_boo)"},
{ "trigger": "CCShapeNode_isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "CCShapeNode:isLineStippleEnabled()"},
{ "trigger": ":isLineStippleEnabled\tCCShapeNode:isLineStippleEnabled()", "contents": "isLineStippleEnabled()"},
{ "trigger": "CCShapeNode_getLineWidth\tCCShapeNode:getLineWidth()", "contents": "CCShapeNode:getLineWidth()"},
{ "trigger": ":getLineWidth\tCCShapeNode:getLineWidth()", "contents": "getLineWidth()"},
{ "trigger": "CCShapeNode_getColor\tCCShapeNode:getColor()", "contents": "CCShapeNode:getColor()"},
{ "trigger": ":getColor\tCCShapeNode:getColor()", "contents": "getColor()"},
{ "trigger": "CCShapeNode_getLineStipple\tCCShapeNode:getLineStipple()", "contents": "CCShapeNode:getLineStipple()"},
{ "trigger": ":getLineStipple\tCCShapeNode:getLineStipple()", "contents": "getLineStipple()"},
{ "trigger": "CCShapeNode_setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "CCShapeNode:setLineStipple(_num)"},
{ "trigger": ":setLineStipple\tCCShapeNode:setLineStipple(_num)", "contents": "setLineStipple(_num)"},
{ "trigger": "CCShapeNode_setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "CCShapeNode:setLineWidth(_num)"},
{ "trigger": ":setLineWidth\tCCShapeNode:setLineWidth(_num)", "contents": "setLineWidth(_num)"},
{ "trigger": "CCAction\t", "contents": "CCAction"},
{ "trigger": "CCAction_update\tCCAction:update(_num)", "contents": "CCAction:update(_num)"},
{ "trigger": ":update\tCCAction:update(_num)", "contents": "update(_num)"},
{ "trigger": "CCAction_isDone\tCCAction:isDone()", "contents": "CCAction:isDone()"},
{ "trigger": ":isDone\tCCAction:isDone()", "contents": "isDone()"},
{ "trigger": "CCAction_setTag\tCCAction:setTag(_num)", "contents": "CCAction:setTag(_num)"},
{ "trigger": ":setTag\tCCAction:setTag(_num)", "contents": "setTag(_num)"},
{ "trigger": "CCAction_getTag\tCCAction:getTag()", "contents": "CCAction:getTag()"},
{ "trigger": ":getTag\tCCAction:getTag()", "contents": "getTag()"},
{ "trigger": "CCAction_step\tCCAction:step(_num)", "contents": "CCAction:step(_num)"},
{ "trigger": ":step\tCCAction:step(_num)", "contents": "step(_num)"},
{ "trigger": "CCLabelBMFont\t", "contents": "CCLabelBMFont"},
{ "trigger": "CCLabelBMFont_call\tCCLabelBMFont:call()", "contents": "CCLabelBMFont:call()"},
{ "trigger": ":call\tCCLabelBMFont:call()", "contents": "call()"},
{ "trigger": "CCLabelBMFont_setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "CCLabelBMFont:setOpacity(_num)"},
{ "trigger": ":setOpacity\tCCLabelBMFont:setOpacity(_num)", "contents": "setOpacity(_num)"},
{ "trigger": "CCLabelBMFont_setString\tCCLabelBMFont:setString(_str)", "contents": "CCLabelBMFont:setString(_str)"},
{ "trigger": ":setString\tCCLabelBMFont:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCLabelBMFont_setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "CCLabelBMFont:setFntFile(_str)"},
{ "trigger": ":setFntFile\tCCLabelBMFont:setFntFile(_str)", "contents": "setFntFile(_str)"},
{ "trigger": "CCLabelBMFont_isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "CCLabelBMFont:isOpacityModifyRGB()"},
{ "trigger": ":isOpacityModifyRGB\tCCLabelBMFont:isOpacityModifyRGB()", "contents": "isOpacityModifyRGB()"},
{ "trigger": "CCLabelBMFont_setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "CCLabelBMFont:setOpacityModifyRGB(_boo)"},
{ "trigger": ":setOpacityModifyRGB\tCCLabelBMFont:setOpacityModifyRGB(_boo)", "contents": "setOpacityModifyRGB(_boo)"},
{ "trigger": "CCLabelBMFont_setColor\tCCLabelBMFont:setColor(_ccColor3B)", "contents": "CCLabelBMFont:setColor(_ccColor3B)"},
{ "trigger": ":setColor\tCCLabelBMFont:setColor(_ccColor3B)", "contents": "setColor(_ccColor3B)"},
{ "trigger": "CCLabelBMFont_isCascadeColorEnabled\tCCLabelBMFont:isCascadeColorEnabled()", "contents": "CCLabelBMFont:isCascadeColorEnabled()"},
{ "trigger": ":isCascadeColorEnabled\tCCLabelBMFont:isCascadeColorEnabled()", "contents": "isCascadeColorEnabled()"},
{ "trigger": "CCLabelBMFont_getDisplayedOpacity\tCCLabelBMFont:getDisplayedOpacity()", "contents": "CCLabelBMFont:getDisplayedOpacity()"},
{ "trigger": ":getDisplayedOpacity\tCCLabelBMFont:getDisplayedOpacity()", "contents": "getDisplayedOpacity()"},
{ "trigger": "CCLabelBMFont_setCascadeColorEnabled\tCCLabelBMFont:setCascadeColorEnabled(_boo)", "contents": "CCLabelBMFont:setCascadeColorEnabled(_boo)"},
{ "trigger": ":setCascadeColorEnabled\tCCLabelBMFont:setCascadeColorEnabled(_boo)", "contents": "setCascadeColorEnabled(_boo)"},
{ "trigger": "CCLabelBMFont_isCascadeOpacityEnabled\tCCLabelBMFont:isCascadeOpacityEnabled()", "contents": "CCLabelBMFont:isCascadeOpacityEnabled()"},
{ "trigger": ":isCascadeOpacityEnabled\tCCLabelBMFont:isCascadeOpacityEnabled()", "contents": "isCascadeOpacityEnabled()"},
{ "trigger": "CCLabelBMFont_setCascadeOpacityEnabled\tCCLabelBMFont:setCascadeOpacityEnabled(_boo)", "contents": "CCLabelBMFont:setCascadeOpacityEnabled(_boo)"},
{ "trigger": ":setCascadeOpacityEnabled\tCCLabelBMFont:setCascadeOpacityEnabled(_boo)", "contents": "setCascadeOpacityEnabled(_boo)"},
{ "trigger": "CCLabelBMFont_delete\tCCLabelBMFont:delete()", "contents": "CCLabelBMFont:delete()"},
{ "trigger": ":delete\tCCLabelBMFont:delete()", "contents": "delete()"},
{ "trigger": "CCLabelBMFont_getOpacity\tCCLabelBMFont:getOpacity()", "contents": "CCLabelBMFont:getOpacity()"},
{ "trigger": ":getOpacity\tCCLabelBMFont:getOpacity()", "contents": "getOpacity()"},
{ "trigger": "CCLabelBMFont_setCString\tCCLabelBMFont:setCString(_str)", "contents": "CCLabelBMFont:setCString(_str)"},
{ "trigger": ":setCString\tCCLabelBMFont:setCString(_str)", "contents": "setCString(_str)"},
{ "trigger": "CCLabelBMFont_setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "CCLabelBMFont:setWidth(_num)"},
{ "trigger": ":setWidth\tCCLabelBMFont:setWidth(_num)", "contents": "setWidth(_num)"},
{ "trigger": "CCLabelBMFont_initWithString\tCCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)", "contents": "CCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)"},
{ "trigger": ":initWithString\tCCLabelBMFont:initWithString(_str,_str,_num,_num,_CCPoint)", "contents": "initWithString(_str,_str,_num,_num,_CCPoint)"},
{ "trigger": "CCLabelBMFont_getFntFile\tCCLabelBMFont:getFntFile()", "contents": "CCLabelBMFont:getFntFile()"},
{ "trigger": ":getFntFile\tCCLabelBMFont:getFntFile()", "contents": "getFntFile()"},
{ "trigger": "CCLabelBMFont_getColor\tCCLabelBMFont:getColor()", "contents": "CCLabelBMFont:getColor()"},
{ "trigger": ":getColor\tCCLabelBMFont:getColor()", "contents": "getColor()"},
{ "trigger": "CCLabelBMFont_init\tCCLabelBMFont:init()", "contents": "CCLabelBMFont:init()"},
{ "trigger": ":init\tCCLabelBMFont:init()", "contents": "init()"},
{ "trigger": "CCLabelBMFont_getDisplayedColor\tCCLabelBMFont:getDisplayedColor()", "contents": "CCLabelBMFont:getDisplayedColor()"},
{ "trigger": ":getDisplayedColor\tCCLabelBMFont:getDisplayedColor()", "contents": "getDisplayedColor()"},
{ "trigger": "CCLabelBMFont_purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "CCLabelBMFont:purgeCachedData()"},
{ "trigger": ":purgeCachedData\tCCLabelBMFont:purgeCachedData()", "contents": "purgeCachedData()"},
{ "trigger": "CCLabelBMFont_create\tCCLabelBMFont:create()", "contents": "CCLabelBMFont:create()"},
{ "trigger": ":create\tCCLabelBMFont:create()", "contents": "create()"},
{ "trigger": "CCLabelBMFont_setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "CCLabelBMFont:setLineBreakWithoutSpace(_boo)"},
{ "trigger": ":setLineBreakWithoutSpace\tCCLabelBMFont:setLineBreakWithoutSpace(_boo)", "contents": "setLineBreakWithoutSpace(_boo)"},
{ "trigger": "CCLabelBMFont_new\tCCLabelBMFont:new()", "contents": "CCLabelBMFont:new()"},
{ "trigger": ":new\tCCLabelBMFont:new()", "contents": "new()"},
{ "trigger": "CCLabelBMFont_updateDisplayedOpacity\tCCLabelBMFont:updateDisplayedOpacity(_num)", "contents": "CCLabelBMFont:updateDisplayedOpacity(_num)"},
{ "trigger": ":updateDisplayedOpacity\tCCLabelBMFont:updateDisplayedOpacity(_num)", "contents": "updateDisplayedOpacity(_num)"},
{ "trigger": "CCLabelBMFont_updateLabel\tCCLabelBMFont:updateLabel()", "contents": "CCLabelBMFont:updateLabel()"},
{ "trigger": ":updateLabel\tCCLabelBMFont:updateLabel()", "contents": "updateLabel()"},
{ "trigger": "CCLabelBMFont_new_local\tCCLabelBMFont:new_local()", "contents": "CCLabelBMFont:new_local()"},
{ "trigger": ":new_local\tCCLabelBMFont:new_local()", "contents": "new_local()"},
{ "trigger": "CCLabelBMFont_setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "CCLabelBMFont:setAlignment(_num)"},
{ "trigger": ":setAlignment\tCCLabelBMFont:setAlignment(_num)", "contents": "setAlignment(_num)"},
{ "trigger": "CCLabelBMFont_getString\tCCLabelBMFont:getString()", "contents": "CCLabelBMFont:getString()"},
{ "trigger": ":getString\tCCLabelBMFont:getString()", "contents": "getString()"},
{ "trigger": "CCLabelBMFont_updateDisplayedColor\tCCLabelBMFont:updateDisplayedColor(_ccColor3B)", "contents": "CCLabelBMFont:updateDisplayedColor(_ccColor3B)"},
{ "trigger": ":updateDisplayedColor\tCCLabelBMFont:updateDisplayedColor(_ccColor3B)", "contents": "updateDisplayedColor(_ccColor3B)"},
{ "trigger": "CCBezierBy\t", "contents": "CCBezierBy"},
{ "trigger": "CCBezierBy_create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "CCBezierBy:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierBy:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCTMXLayerInfo\t", "contents": "CCTMXLayerInfo"},
{ "trigger": "CCTMXLayerInfo_call\tCCTMXLayerInfo:call()", "contents": "CCTMXLayerInfo:call()"},
{ "trigger": ":call\tCCTMXLayerInfo:call()", "contents": "call()"},
{ "trigger": "CCTMXLayerInfo_new\tCCTMXLayerInfo:new()", "contents": "CCTMXLayerInfo:new()"},
{ "trigger": ":new\tCCTMXLayerInfo:new()", "contents": "new()"},
{ "trigger": "CCTMXLayerInfo_new_local\tCCTMXLayerInfo:new_local()", "contents": "CCTMXLayerInfo:new_local()"},
{ "trigger": ":new_local\tCCTMXLayerInfo:new_local()", "contents": "new_local()"},
{ "trigger": "CCTMXLayerInfo_delete\tCCTMXLayerInfo:delete()", "contents": "CCTMXLayerInfo:delete()"},
{ "trigger": ":delete\tCCTMXLayerInfo:delete()", "contents": "delete()"},
{ "trigger": "CCTMXLayerInfo_getProperties\tCCTMXLayerInfo:getProperties()", "contents": "CCTMXLayerInfo:getProperties()"},
{ "trigger": ":getProperties\tCCTMXLayerInfo:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCClippingRegionNode\t", "contents": "CCClippingRegionNode"},
{ "trigger": "CCClippingRegionNode_getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "CCClippingRegionNode:getClippingRegion()"},
{ "trigger": ":getClippingRegion\tCCClippingRegionNode:getClippingRegion()", "contents": "getClippingRegion()"},
{ "trigger": "CCClippingRegionNode_setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "CCClippingRegionNode:setClippingEnabled(_boo)"},
{ "trigger": ":setClippingEnabled\tCCClippingRegionNode:setClippingEnabled(_boo)", "contents": "setClippingEnabled(_boo)"},
{ "trigger": "CCClippingRegionNode_setClippingRegion\tCCClippingRegionNode:setClippingRegion(_CCRect)", "contents": "CCClippingRegionNode:setClippingRegion(_CCRect)"},
{ "trigger": ":setClippingRegion\tCCClippingRegionNode:setClippingRegion(_CCRect)", "contents": "setClippingRegion(_CCRect)"},
{ "trigger": "CCClippingRegionNode_isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "CCClippingRegionNode:isClippingEnabled()"},
{ "trigger": ":isClippingEnabled\tCCClippingRegionNode:isClippingEnabled()", "contents": "isClippingEnabled()"},
{ "trigger": "CCClippingRegionNode_create\tCCClippingRegionNode:create()", "contents": "CCClippingRegionNode:create()"},
{ "trigger": ":create\tCCClippingRegionNode:create()", "contents": "create()"},
{ "trigger": "CCWaves3D\t", "contents": "CCWaves3D"},
{ "trigger": "CCWaves3D_create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "CCWaves3D:create(_num,_CCSize,_num,_num)"},
{ "trigger": ":create\tCCWaves3D:create(_num,_CCSize,_num,_num)", "contents": "create(_num,_CCSize,_num,_num)"},
{ "trigger": "CCMotionStreak\t", "contents": "CCMotionStreak"},
{ "trigger": "CCMotionStreak_setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "CCMotionStreak:setStartingPositionInitialized(_boo)"},
{ "trigger": ":setStartingPositionInitialized\tCCMotionStreak:setStartingPositionInitialized(_boo)", "contents": "setStartingPositionInitialized(_boo)"},
{ "trigger": "CCMotionStreak_reset\tCCMotionStreak:reset()", "contents": "CCMotionStreak:reset()"},
{ "trigger": ":reset\tCCMotionStreak:reset()", "contents": "reset()"},
{ "trigger": "CCMotionStreak_isFastMode\tCCMotionStreak:isFastMode()", "contents": "CCMotionStreak:isFastMode()"},
{ "trigger": ":isFastMode\tCCMotionStreak:isFastMode()", "contents": "isFastMode()"},
{ "trigger": "CCMotionStreak_isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "CCMotionStreak:isStartingPositionInitialized()"},
{ "trigger": ":isStartingPositionInitialized\tCCMotionStreak:isStartingPositionInitialized()", "contents": "isStartingPositionInitialized()"},
{ "trigger": "CCMotionStreak_create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "CCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": ":create\tCCMotionStreak:create(_num,_num,_num,_ccColor3B,_CCTexture2D)", "contents": "create(_num,_num,_num,_ccColor3B,_CCTexture2D)"},
{ "trigger": "CCMotionStreak_tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "CCMotionStreak:tintWithColor(_ccColor3B)"},
{ "trigger": ":tintWithColor\tCCMotionStreak:tintWithColor(_ccColor3B)", "contents": "tintWithColor(_ccColor3B)"},
{ "trigger": "CCMotionStreak_setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "CCMotionStreak:setFastMode(_boo)"},
{ "trigger": ":setFastMode\tCCMotionStreak:setFastMode(_boo)", "contents": "setFastMode(_boo)"},
{ "trigger": "CCBezierTo\t", "contents": "CCBezierTo"},
{ "trigger": "CCBezierTo_create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "CCBezierTo:create(_num,_ccBezierConfig)"},
{ "trigger": ":create\tCCBezierTo:create(_num,_ccBezierConfig)", "contents": "create(_num,_ccBezierConfig)"},
{ "trigger": "CCNative\t", "contents": "CCNative"},
{ "trigger": "CCNative_getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "CCNative:getInputText(_str,_str,_str)"},
{ "trigger": ":getInputText\tCCNative:getInputText(_str,_str,_str)", "contents": "getInputText(_str,_str,_str)"},
{ "trigger": "CCNative_createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "CCNative:createAlert(_str,_str,_str)"},
{ "trigger": ":createAlert\tCCNative:createAlert(_str,_str,_str)", "contents": "createAlert(_str,_str,_str)"},
{ "trigger": "CCNative_showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "CCNative:showActivityIndicator()"},
{ "trigger": ":showActivityIndicator\tCCNative:showActivityIndicator()", "contents": "showActivityIndicator()"},
{ "trigger": "CCNative_getDeviceName\tCCNative:getDeviceName()", "contents": "CCNative:getDeviceName()"},
{ "trigger": ":getDeviceName\tCCNative:getDeviceName()", "contents": "getDeviceName()"},
{ "trigger": "CCNative_hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "CCNative:hideActivityIndicator()"},
{ "trigger": ":hideActivityIndicator\tCCNative:hideActivityIndicator()", "contents": "hideActivityIndicator()"},
{ "trigger": "CCNative_vibrate\tCCNative:vibrate()", "contents": "CCNative:vibrate()"},
{ "trigger": ":vibrate\tCCNative:vibrate()", "contents": "vibrate()"},
{ "trigger": "CCNative_cancelAlert\tCCNative:cancelAlert()", "contents": "CCNative:cancelAlert()"},
{ "trigger": ":cancelAlert\tCCNative:cancelAlert()", "contents": "cancelAlert()"},
{ "trigger": "CCNative_showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "CCNative:showAlertLua(_listener)"},
{ "trigger": ":showAlertLua\tCCNative:showAlertLua(_listener)", "contents": "showAlertLua(_listener)"},
{ "trigger": "CCNative_addAlertButton\tCCNative:addAlertButton(_str)", "contents": "CCNative:addAlertButton(_str)"},
{ "trigger": ":addAlertButton\tCCNative:addAlertButton(_str)", "contents": "addAlertButton(_str)"},
{ "trigger": "CCNative_openURL\tCCNative:openURL(_str)", "contents": "CCNative:openURL(_str)"},
{ "trigger": ":openURL\tCCNative:openURL(_str)", "contents": "openURL(_str)"},
{ "trigger": "CCNative_getOpenUDID\tCCNative:getOpenUDID()", "contents": "CCNative:getOpenUDID()"},
{ "trigger": ":getOpenUDID\tCCNative:getOpenUDID()", "contents": "getOpenUDID()"},
{ "trigger": "CCFadeIn\t", "contents": "CCFadeIn"},
{ "trigger": "CCFadeIn_create\tCCFadeIn:create(_num)", "contents": "CCFadeIn:create(_num)"},
{ "trigger": ":create\tCCFadeIn:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCFlipY3D\t", "contents": "CCFlipY3D"},
{ "trigger": "CCFlipY3D_create\tCCFlipY3D:create(_num)", "contents": "CCFlipY3D:create(_num)"},
{ "trigger": ":create\tCCFlipY3D:create(_num)", "contents": "create(_num)"},
{ "trigger": "CCConfiguration\t", "contents": "CCConfiguration"},
{ "trigger": "CCConfiguration_sharedConfiguration\tCCConfiguration:sharedConfiguration()", "contents": "CCConfiguration:sharedConfiguration()"},
{ "trigger": ":sharedConfiguration\tCCConfiguration:sharedConfiguration()", "contents": "sharedConfiguration()"},
{ "trigger": "CCConfiguration_supportsShareableVAO\tCCConfiguration:supportsShareableVAO()", "contents": "CCConfiguration:supportsShareableVAO()"},
{ "trigger": ":supportsShareableVAO\tCCConfiguration:supportsShareableVAO()", "contents": "supportsShareableVAO()"},
{ "trigger": "CCConfiguration_getNumber\tCCConfiguration:getNumber(_str,_num)", "contents": "CCConfiguration:getNumber(_str,_num)"},
{ "trigger": ":getNumber\tCCConfiguration:getNumber(_str,_num)", "contents": "getNumber(_str,_num)"},
{ "trigger": "CCConfiguration_supportsDiscardFramebuffer\tCCConfiguration:supportsDiscardFramebuffer()", "contents": "CCConfiguration:supportsDiscardFramebuffer()"},
{ "trigger": ":supportsDiscardFramebuffer\tCCConfiguration:supportsDiscardFramebuffer()", "contents": "supportsDiscardFramebuffer()"},
{ "trigger": "CCConfiguration_getMaxTextureSize\tCCConfiguration:getMaxTextureSize()", "contents": "CCConfiguration:getMaxTextureSize()"},
{ "trigger": ":getMaxTextureSize\tCCConfiguration:getMaxTextureSize()", "contents": "getMaxTextureSize()"},
{ "trigger": "CCConfiguration_getBool\tCCConfiguration:getBool(_str,_boo)", "contents": "CCConfiguration:getBool(_str,_boo)"},
{ "trigger": ":getBool\tCCConfiguration:getBool(_str,_boo)", "contents": "getBool(_str,_boo)"},
{ "trigger": "CCConfiguration_gatherGPUInfo\tCCConfiguration:gatherGPUInfo()", "contents": "CCConfiguration:gatherGPUInfo()"},
{ "trigger": ":gatherGPUInfo\tCCConfiguration:gatherGPUInfo()", "contents": "gatherGPUInfo()"},
{ "trigger": "CCConfiguration_checkForGLExtension\tCCConfiguration:checkForGLExtension(_str)", "contents": "CCConfiguration:checkForGLExtension(_str)"},
{ "trigger": ":checkForGLExtension\tCCConfiguration:checkForGLExtension(_str)", "contents": "checkForGLExtension(_str)"},
{ "trigger": "CCConfiguration_getCString\tCCConfiguration:getCString(_str,_str)", "contents": "CCConfiguration:getCString(_str,_str)"},
{ "trigger": ":getCString\tCCConfiguration:getCString(_str,_str)", "contents": "getCString(_str,_str)"},
{ "trigger": "CCConfiguration_supportsBGRA8888\tCCConfiguration:supportsBGRA8888()", "contents": "CCConfiguration:supportsBGRA8888()"},
{ "trigger": ":supportsBGRA8888\tCCConfiguration:supportsBGRA8888()", "contents": "supportsBGRA8888()"},
{ "trigger": "CCConfiguration_dumpInfo\tCCConfiguration:dumpInfo()", "contents": "CCConfiguration:dumpInfo()"},
{ "trigger": ":dumpInfo\tCCConfiguration:dumpInfo()", "contents": "dumpInfo()"},
{ "trigger": "CCConfiguration_loadConfigFile\tCCConfiguration:loadConfigFile(_str)", "contents": "CCConfiguration:loadConfigFile(_str)"},
{ "trigger": ":loadConfigFile\tCCConfiguration:loadConfigFile(_str)", "contents": "loadConfigFile(_str)"},
{ "trigger": "CCConfiguration_setObject\tCCConfiguration:setObject(_str,_CCObject)", "contents": "CCConfiguration:setObject(_str,_CCObject)"},
{ "trigger": ":setObject\tCCConfiguration:setObject(_str,_CCObject)", "contents": "setObject(_str,_CCObject)"},
{ "trigger": "CCConfiguration_getMaxModelviewStackDepth\tCCConfiguration:getMaxModelviewStackDepth()", "contents": "CCConfiguration:getMaxModelviewStackDepth()"},
{ "trigger": ":getMaxModelviewStackDepth\tCCConfiguration:getMaxModelviewStackDepth()", "contents": "getMaxModelviewStackDepth()"},
{ "trigger": "CCConfiguration_supportsPVRTC\tCCConfiguration:supportsPVRTC()", "contents": "CCConfiguration:supportsPVRTC()"},
{ "trigger": ":supportsPVRTC\tCCConfiguration:supportsPVRTC()", "contents": "supportsPVRTC()"},
{ "trigger": "CCConfiguration_supportsNPOT\tCCConfiguration:supportsNPOT()", "contents": "CCConfiguration:supportsNPOT()"},
{ "trigger": ":supportsNPOT\tCCConfiguration:supportsNPOT()", "contents": "supportsNPOT()"},
{ "trigger": "CCConfiguration_getMaxTextureUnits\tCCConfiguration:getMaxTextureUnits()", "contents": "CCConfiguration:getMaxTextureUnits()"},
{ "trigger": ":getMaxTextureUnits\tCCConfiguration:getMaxTextureUnits()", "contents": "getMaxTextureUnits()"},
{ "trigger": "CCConfiguration_getObject\tCCConfiguration:getObject(_str)", "contents": "CCConfiguration:getObject(_str)"},
{ "trigger": ":getObject\tCCConfiguration:getObject(_str)", "contents": "getObject(_str)"},
{ "trigger": "CCTMXTiledMap\t", "contents": "CCTMXTiledMap"},
{ "trigger": "CCTMXTiledMap_propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "CCTMXTiledMap:propertiesForGID(_num)"},
{ "trigger": ":propertiesForGID\tCCTMXTiledMap:propertiesForGID(_num)", "contents": "propertiesForGID(_num)"},
{ "trigger": "CCTMXTiledMap_getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "CCTMXTiledMap:getObjectGroups()"},
{ "trigger": ":getObjectGroups\tCCTMXTiledMap:getObjectGroups()", "contents": "getObjectGroups()"},
{ "trigger": "CCTMXTiledMap_layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "CCTMXTiledMap:layerNamed(_str)"},
{ "trigger": ":layerNamed\tCCTMXTiledMap:layerNamed(_str)", "contents": "layerNamed(_str)"},
{ "trigger": "CCTMXTiledMap_getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "CCTMXTiledMap:getMapOrientation()"},
{ "trigger": ":getMapOrientation\tCCTMXTiledMap:getMapOrientation()", "contents": "getMapOrientation()"},
{ "trigger": "CCTMXTiledMap_objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "CCTMXTiledMap:objectGroupNamed(_str)"},
{ "trigger": ":objectGroupNamed\tCCTMXTiledMap:objectGroupNamed(_str)", "contents": "objectGroupNamed(_str)"},
{ "trigger": "CCTMXTiledMap_getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "CCTMXTiledMap:getTileSize()"},
{ "trigger": ":getTileSize\tCCTMXTiledMap:getTileSize()", "contents": "getTileSize()"},
{ "trigger": "CCTMXTiledMap_createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "CCTMXTiledMap:createWithXML(_str,_str)"},
{ "trigger": ":createWithXML\tCCTMXTiledMap:createWithXML(_str,_str)", "contents": "createWithXML(_str,_str)"},
{ "trigger": "CCTMXTiledMap_getProperties\tCCTMXTiledMap:getProperties()", "contents": "CCTMXTiledMap:getProperties()"},
{ "trigger": ":getProperties\tCCTMXTiledMap:getProperties()", "contents": "getProperties()"},
{ "trigger": "CCTMXTiledMap_propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "CCTMXTiledMap:propertyNamed(_str)"},
{ "trigger": ":propertyNamed\tCCTMXTiledMap:propertyNamed(_str)", "contents": "propertyNamed(_str)"},
{ "trigger": "CCTMXTiledMap_create\tCCTMXTiledMap:create(_str)", "contents": "CCTMXTiledMap:create(_str)"},
{ "trigger": ":create\tCCTMXTiledMap:create(_str)", "contents": "create(_str)"},
{ "trigger": "CCTMXTiledMap_getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "CCTMXTiledMap:getMapSize()"},
{ "trigger": ":getMapSize\tCCTMXTiledMap:getMapSize()", "contents": "getMapSize()"},
{ "trigger": "CCEaseIn\t", "contents": "CCEaseIn"},
{ "trigger": "CCEaseIn_create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "CCEaseIn:create(_CCActionInterval,_num)"},
{ "trigger": ":create\tCCEaseIn:create(_CCActionInterval,_num)", "contents": "create(_CCActionInterval,_num)"},
{ "trigger": "CCAccelDeccelAmplitude\t", "contents": "CCAccelDeccelAmplitude"},
{ "trigger": "CCAccelDeccelAmplitude_create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "CCAccelDeccelAmplitude:create(_CCAction,_num)"},
{ "trigger": ":create\tCCAccelDeccelAmplitude:create(_CCAction,_num)", "contents": "create(_CCAction,_num)"},
{ "trigger": "CCTextFieldTTF\t", "contents": "CCTextFieldTTF"},
{ "trigger": "CCTextFieldTTF_detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "CCTextFieldTTF:detachWithIME()"},
{ "trigger": ":detachWithIME\tCCTextFieldTTF:detachWithIME()", "contents": "detachWithIME()"},
{ "trigger": "CCTextFieldTTF_setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "CCTextFieldTTF:setColorSpaceHolder(_ccColor3B)"},
{ "trigger": ":setColorSpaceHolder\tCCTextFieldTTF:setColorSpaceHolder(_ccColor3B)", "contents": "setColorSpaceHolder(_ccColor3B)"},
{ "trigger": "CCTextFieldTTF_setSecureTextEntry\tCCTextFieldTTF:setSecureTextEntry(_boo)", "contents": "CCTextFieldTTF:setSecureTextEntry(_boo)"},
{ "trigger": ":setSecureTextEntry\tCCTextFieldTTF:setSecureTextEntry(_boo)", "contents": "setSecureTextEntry(_boo)"},
{ "trigger": "CCTextFieldTTF_setString\tCCTextFieldTTF:setString(_str)", "contents": "CCTextFieldTTF:setString(_str)"},
{ "trigger": ":setString\tCCTextFieldTTF:setString(_str)", "contents": "setString(_str)"},
{ "trigger": "CCTextFieldTTF_getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "CCTextFieldTTF:getColorSpaceHolder()"},
{ "trigger": ":getColorSpaceHolder\tCCTextFieldTTF:getColorSpaceHolder()", "contents": "getColorSpaceHolder()"},
{ "trigger": "CCTextFieldTTF_isSecureTextEntry\tCCTextFieldTTF:isSecureTextEntry()", "contents": "CCTextFieldTTF:isSecureTextEntry()"},
{ "trigger": ":isSecureTextEntry\tCCTextFieldTTF:isSecureTextEntry()", "contents": "isSecureTextEntry()"},
{ "trigger": "CCTextFieldTTF_getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "CCTextFieldTTF:getCharCount()"},
{ "trigger": ":getCharCount\tCCTextFieldTTF:getCharCount()", "contents": "getCharCount()"},
{ "trigger": "CCTextFieldTTF_setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "CCTextFieldTTF:setPlaceHolder(_str)"},
{ "trigger": ":setPlaceHolder\tCCTextFieldTTF:setPlaceHolder(_str)", "contents": "setPlaceHolder(_str)"},
{ "trigger": "CCTextFieldTTF_attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "CCTextFieldTTF:attachWithIME()"},
{ "trigger": ":attachWithIME\tCCTextFieldTTF:attachWithIME()", "contents": "attachWithIME()"},
{ "trigger": "CCTextFieldTTF_textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "CCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": ":textFieldWithPlaceHolder\tCCTextFieldTTF:textFieldWithPlaceHolder(_str,_str,_num)", "contents": "textFieldWithPlaceHolder(_str,_str,_num)"},
{ "trigger": "CCTextFieldTTF_getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "CCTextFieldTTF:getPlaceHolder()"},
{ "trigger": ":getPlaceHolder\tCCTextFieldTTF:getPlaceHolder()", "contents": "getPlaceHolder()"},
{ "trigger": "CCTextFieldTTF_getString\tCCTextFieldTTF:getString()", "contents": "CCTextFieldTTF:getString()"},
{ "trigger": ":getString\tCCTextFieldTTF:getString()", "contents": "getString()"},
{ "trigger": "GL_ZERO\tGL_ZERO", "contents": "GL_ZERO"},
{ "trigger": "GL_ONE\tGL_ONE", "contents": "GL_ONE"},
{ "trigger": "GL_SRC_COLOR\tGL_SRC_COLOR", "contents": "GL_SRC_COLOR"},
{ "trigger": "GL_ONE_MINUS_SRC_COLOR\tGL_ONE_MINUS_SRC_COLOR", "contents": "GL_ONE_MINUS_SRC_COLOR"},
{ "trigger": "GL_SRC_ALPHA\tGL_SRC_ALPHA", "contents": "GL_SRC_ALPHA"},
{ "trigger": "GL_ONE_MINUS_SRC_ALPHA\tGL_ONE_MINUS_SRC_ALPHA", "contents": "GL_ONE_MINUS_SRC_ALPHA"},
{ "trigger": "GL_DST_ALPHA\tGL_DST_ALPHA", "contents": "GL_DST_ALPHA"},
{ "trigger": "GL_ONE_MINUS_DST_ALPHA\tGL_ONE_MINUS_DST_ALPHA", "contents": "GL_ONE_MINUS_DST_ALPHA"},
{ "trigger": "GL_DST_COLOR\tGL_DST_COLOR", "contents": "GL_DST_COLOR"},
{ "trigger": "GL_ONE_MINUS_DST_COLOR\tGL_ONE_MINUS_DST_COLOR", "contents": "GL_ONE_MINUS_DST_COLOR"},
{ "trigger": "kCCVerticalTextAlignmentTop\tkCCVerticalTextAlignmentTop", "contents": "kCCVerticalTextAlignmentTop"},
{ "trigger": "kCCVerticalTextAlignmentCenter\tkCCVerticalTextAlignmentCenter", "contents": "kCCVerticalTextAlignmentCenter"},
{ "trigger": "kCCVerticalTextAlignmentBottom\tkCCVerticalTextAlignmentBottom", "contents": "kCCVerticalTextAlignmentBottom"},
{ "trigger": "kCCTextAlignmentLeft\tkCCTextAlignmentLeft", "contents": "kCCTextAlignmentLeft"},
{ "trigger": "kCCTextAlignmentCenter\tkCCTextAlignmentCenter", "contents": "kCCTextAlignmentCenter"},
{ "trigger": "kCCTextAlignmentRight\tkCCTextAlignmentRight", "contents": "kCCTextAlignmentRight"},
{ "trigger": "kTargetWindows\tkTargetWindows", "contents": "kTargetWindows"},
{ "trigger": "kTargetLinux\tkTargetLinux", "contents": "kTargetLinux"},
{ "trigger": "kTargetMacOS\tkTargetMacOS", "contents": "kTargetMacOS"},
{ "trigger": "kTargetAndroid\tkTargetAndroid", "contents": "kTargetAndroid"},
{ "trigger": "kTargetIphone\tkTargetIphone", "contents": "kTargetIphone"},
{ "trigger": "kTargetIpad\tkTargetIpad", "contents": "kTargetIpad"},
{ "trigger": "kTargetBlackBerry\tkTargetBlackBerry", "contents": "kTargetBlackBerry"},
{ "trigger": "kTargetNaCl\tkTargetNaCl", "contents": "kTargetNaCl"},
{ "trigger": "kTargetEmscripten\tkTargetEmscripten", "contents": "kTargetEmscripten"},
{ "trigger": "kTargetTizen\tkTargetTizen", "contents": "kTargetTizen"},
{ "trigger": "kLanguageEnglish\tkLanguageEnglish", "contents": "kLanguageEnglish"},
{ "trigger": "kLanguageChinese\tkLanguageChinese", "contents": "kLanguageChinese"},
{ "trigger": "kLanguageFrench\tkLanguageFrench", "contents": "kLanguageFrench"},
{ "trigger": "kLanguageItalian\tkLanguageItalian", "contents": "kLanguageItalian"},
{ "trigger": "kLanguageGerman\tkLanguageGerman", "contents": "kLanguageGerman"},
{ "trigger": "kLanguageSpanish\tkLanguageSpanish", "contents": "kLanguageSpanish"},
{ "trigger": "kLanguageRussian\tkLanguageRussian", "contents": "kLanguageRussian"},
{ "trigger": "kLanguageKorean\tkLanguageKorean", "contents": "kLanguageKorean"},
{ "trigger": "kLanguageJapanese\tkLanguageJapanese", "contents": "kLanguageJapanese"},
{ "trigger": "kLanguageHungarian\tkLanguageHungarian", "contents": "kLanguageHungarian"},
{ "trigger": "kLanguagePortuguese\tkLanguagePortuguese", "contents": "kLanguagePortuguese"},
{ "trigger": "kLanguageArabic\tkLanguageArabic", "contents": "kLanguageArabic"},
{ "trigger": "kFmtJpg\tkFmtJpg", "contents": "kFmtJpg"},
{ "trigger": "kFmtPng\tkFmtPng", "contents": "kFmtPng"},
{ "trigger": "kFmtTiff\tkFmtTiff", "contents": "kFmtTiff"},
{ "trigger": "kFmtWebp\tkFmtWebp", "contents": "kFmtWebp"},
{ "trigger": "kFmtRawData\tkFmtRawData", "contents": "kFmtRawData"},
{ "trigger": "kFmtUnKnown\tkFmtUnKnown", "contents": "kFmtUnKnown"},
{ "trigger": "kResolutionExactFit\tkResolutionExactFit", "contents": "kResolutionExactFit"},
{ "trigger": "kResolutionNoBorder\tkResolutionNoBorder", "contents": "kResolutionNoBorder"},
{ "trigger": "kResolutionShowAll\tkResolutionShowAll", "contents": "kResolutionShowAll"},
{ "trigger": "kResolutionFixedHeight\tkResolutionFixedHeight", "contents": "kResolutionFixedHeight"},
{ "trigger": "kResolutionFixedWidth\tkResolutionFixedWidth", "contents": "kResolutionFixedWidth"},
{ "trigger": "kResolutionUnKnown\tkResolutionUnKnown", "contents": "kResolutionUnKnown"},
{ "trigger": "kTypeBackClicked\tkTypeBackClicked", "contents": "kTypeBackClicked"},
{ "trigger": "kTypeMenuClicked\tkTypeMenuClicked", "contents": "kTypeMenuClicked"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA8888\tkCCTexture2DPixelFormat_RGBA8888", "contents": "kCCTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB888\tkCCTexture2DPixelFormat_RGB888", "contents": "kCCTexture2DPixelFormat_RGB888"},
{ "trigger": "kCCTexture2DPixelFormat_RGB565\tkCCTexture2DPixelFormat_RGB565", "contents": "kCCTexture2DPixelFormat_RGB565"},
{ "trigger": "kCCTexture2DPixelFormat_A8\tkCCTexture2DPixelFormat_A8", "contents": "kCCTexture2DPixelFormat_A8"},
{ "trigger": "kCCTexture2DPixelFormat_I8\tkCCTexture2DPixelFormat_I8", "contents": "kCCTexture2DPixelFormat_I8"},
{ "trigger": "kCCTexture2DPixelFormat_AI88\tkCCTexture2DPixelFormat_AI88", "contents": "kCCTexture2DPixelFormat_AI88"},
{ "trigger": "kCCTexture2DPixelFormat_RGBA4444\tkCCTexture2DPixelFormat_RGBA4444", "contents": "kCCTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kCCTexture2DPixelFormat_RGB5A1\tkCCTexture2DPixelFormat_RGB5A1", "contents": "kCCTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC4\tkCCTexture2DPixelFormat_PVRTC4", "contents": "kCCTexture2DPixelFormat_PVRTC4"},
{ "trigger": "kCCTexture2DPixelFormat_PVRTC2\tkCCTexture2DPixelFormat_PVRTC2", "contents": "kCCTexture2DPixelFormat_PVRTC2"},
{ "trigger": "kCCTexture2DPixelFormat_Default\tkCCTexture2DPixelFormat_Default", "contents": "kCCTexture2DPixelFormat_Default"},
{ "trigger": "kTexture2DPixelFormat_RGBA8888\tkTexture2DPixelFormat_RGBA8888", "contents": "kTexture2DPixelFormat_RGBA8888"},
{ "trigger": "kTexture2DPixelFormat_RGB888\tkTexture2DPixelFormat_RGB888", "contents": "kTexture2DPixelFormat_RGB888"},
{ "trigger": "kTexture2DPixelFormat_RGB565\tkTexture2DPixelFormat_RGB565", "contents": "kTexture2DPixelFormat_RGB565"},
{ "trigger": "kTexture2DPixelFormat_A8\tkTexture2DPixelFormat_A8", "contents": "kTexture2DPixelFormat_A8"},
{ "trigger": "kTexture2DPixelFormat_RGBA4444\tkTexture2DPixelFormat_RGBA4444", "contents": "kTexture2DPixelFormat_RGBA4444"},
{ "trigger": "kTexture2DPixelFormat_RGB5A1\tkTexture2DPixelFormat_RGB5A1", "contents": "kTexture2DPixelFormat_RGB5A1"},
{ "trigger": "kTexture2DPixelFormat_Default\tkTexture2DPixelFormat_Default", "contents": "kTexture2DPixelFormat_Default"},
{ "trigger": "kCCParticleDurationInfinity\tkCCParticleDurationInfinity", "contents": "kCCParticleDurationInfinity"},
{ "trigger": "kCCParticleStartSizeEqualToEndSize\tkCCParticleStartSizeEqualToEndSize", "contents": "kCCParticleStartSizeEqualToEndSize"},
{ "trigger": "kCCParticleStartRadiusEqualToEndRadius\tkCCParticleStartRadiusEqualToEndRadius", "contents": "kCCParticleStartRadiusEqualToEndRadius"},
{ "trigger": "kParticleStartSizeEqualToEndSize\tkParticleStartSizeEqualToEndSize", "contents": "kParticleStartSizeEqualToEndSize"},
{ "trigger": "kParticleDurationInfinity\tkParticleDurationInfinity", "contents": "kParticleDurationInfinity"},
{ "trigger": "kCCParticleModeGravity\tkCCParticleModeGravity", "contents": "kCCParticleModeGravity"},
{ "trigger": "kCCParticleModeRadius\tkCCParticleModeRadius", "contents": "kCCParticleModeRadius"},
{ "trigger": "kCCPositionTypeFree\tkCCPositionTypeFree", "contents": "kCCPositionTypeFree"},
{ "trigger": "kCCPositionTypeRelative\tkCCPositionTypeRelative", "contents": "kCCPositionTypeRelative"},
{ "trigger": "kCCPositionTypeGrouped\tkCCPositionTypeGrouped", "contents": "kCCPositionTypeGrouped"},
{ "trigger": "TMXLayerAttribNone\tTMXLayerAttribNone", "contents": "TMXLayerAttribNone"},
{ "trigger": "TMXLayerAttribBase64\tTMXLayerAttribBase64", "contents": "TMXLayerAttribBase64"},
{ "trigger": "TMXLayerAttribGzip\tTMXLayerAttribGzip", "contents": "TMXLayerAttribGzip"},
{ "trigger": "TMXLayerAttribZlib\tTMXLayerAttribZlib", "contents": "TMXLayerAttribZlib"},
{ "trigger": "TMXPropertyNone\tTMXPropertyNone", "contents": "TMXPropertyNone"},
{ "trigger": "TMXPropertyMap\tTMXPropertyMap", "contents": "TMXPropertyMap"},
{ "trigger": "TMXPropertyLayer\tTMXPropertyLayer", "contents": "TMXPropertyLayer"},
{ "trigger": "TMXPropertyObjectGroup\tTMXPropertyObjectGroup", "contents": "TMXPropertyObjectGroup"},
{ "trigger": "TMXPropertyObject\tTMXPropertyObject", "contents": "TMXPropertyObject"},
{ "trigger": "TMXPropertyTile\tTMXPropertyTile", "contents": "TMXPropertyTile"},
{ "trigger": "kCCTMXTileHorizontalFlag\tkCCTMXTileHorizontalFlag", "contents": "kCCTMXTileHorizontalFlag"},
{ "trigger": "kCCTMXTileVerticalFlag\tkCCTMXTileVerticalFlag", "contents": "kCCTMXTileVerticalFlag"},
{ "trigger": "kCCTMXTileDiagonalFlag\tkCCTMXTileDiagonalFlag", "contents": "kCCTMXTileDiagonalFlag"},
{ "trigger": "kCCFlipedAll\tkCCFlipedAll", "contents": "kCCFlipedAll"},
{ "trigger": "kCCFlippedMask\tkCCFlippedMask", "contents": "kCCFlippedMask"},
{ "trigger": "CCTMXOrientationOrtho\tCCTMXOrientationOrtho", "contents": "CCTMXOrientationOrtho"},
{ "trigger": "CCTMXOrientationHex\tCCTMXOrientationHex", "contents": "CCTMXOrientationHex"},
{ "trigger": "CCTMXOrientationIso\tCCTMXOrientationIso", "contents": "CCTMXOrientationIso"},
{ "trigger": "kCCProgressTimerTypeRadial\tkCCProgressTimerTypeRadial", "contents": "kCCProgressTimerTypeRadial"},
{ "trigger": "kCCProgressTimerTypeBar\tkCCProgressTimerTypeBar", "contents": "kCCProgressTimerTypeBar"},
{ "trigger": "kCCImageFormatJPEG\tkCCImageFormatJPEG", "contents": "kCCImageFormatJPEG"},
{ "trigger": "kCCImageFormatPNG\tkCCImageFormatPNG", "contents": "kCCImageFormatPNG"},
{ "trigger": "kCCTouchesAllAtOnce\tkCCTouchesAllAtOnce", "contents": "kCCTouchesAllAtOnce"},
{ "trigger": "kCCTouchesOneByOne\tkCCTouchesOneByOne", "contents": "kCCTouchesOneByOne"},
{ "trigger": "kCCTransitionOrientationLeftOver\tkCCTransitionOrientationLeftOver", "contents": "kCCTransitionOrientationLeftOver"},
{ "trigger": "kCCTransitionOrientationRightOver\tkCCTransitionOrientationRightOver", "contents": "kCCTransitionOrientationRightOver"},
{ "trigger": "kCCTransitionOrientationUpOver\tkCCTransitionOrientationUpOver", "contents": "kCCTransitionOrientationUpOver"},
{ "trigger": "kCCTransitionOrientationDownOver\tkCCTransitionOrientationDownOver", "contents": "kCCTransitionOrientationDownOver"},
{ "trigger": "kCCLabelAutomaticWidth\tkCCLabelAutomaticWidth", "contents": "kCCLabelAutomaticWidth"},
{ "trigger": "kCCMenuStateWaiting\tkCCMenuStateWaiting", "contents": "kCCMenuStateWaiting"},
{ "trigger": "kCCMenuStateTrackingTouch\tkCCMenuStateTrackingTouch", "contents": "kCCMenuStateTrackingTouch"},
{ "trigger": "kCCMenuHandlerPriority\tkCCMenuHandlerPriority", "contents": "kCCMenuHandlerPriority"},
{ "trigger": "kCCDirectorProjection2D\tkCCDirectorProjection2D", "contents": "kCCDirectorProjection2D"},
{ "trigger": "kCCDirectorProjection3D\tkCCDirectorProjection3D", "contents": "kCCDirectorProjection3D"},
{ "trigger": "kCCDirectorProjectionCustom\tkCCDirectorProjectionCustom", "contents": "kCCDirectorProjectionCustom"},
{ "trigger": "kCCDirectorProjectionDefault\tkCCDirectorProjectionDefault", "contents": "kCCDirectorProjectionDefault"},
{ "trigger": "CCControlEventTouchDown\tCCControlEventTouchDown", "contents": "CCControlEventTouchDown"},
{ "trigger": "CCControlEventTouchDragInside\tCCControlEventTouchDragInside", "contents": "CCControlEventTouchDragInside"},
{ "trigger": "CCControlEventTouchDragOutside\tCCControlEventTouchDragOutside", "contents": "CCControlEventTouchDragOutside"},
{ "trigger": "CCControlEventTouchDragEnter\tCCControlEventTouchDragEnter", "contents": "CCControlEventTouchDragEnter"},
{ "trigger": "CCControlEventTouchDragExit\tCCControlEventTouchDragExit", "contents": "CCControlEventTouchDragExit"},
{ "trigger": "CCControlEventTouchUpInside\tCCControlEventTouchUpInside", "contents": "CCControlEventTouchUpInside"},
{ "trigger": "CCControlEventTouchUpOutside\tCCControlEventTouchUpOutside", "contents": "CCControlEventTouchUpOutside"},
{ "trigger": "CCControlEventTouchCancel\tCCControlEventTouchCancel", "contents": "CCControlEventTouchCancel"},
{ "trigger": "CCControlEventValueChanged\tCCControlEventValueChanged", "contents": "CCControlEventValueChanged"},
{ "trigger": "CCControlStateNormal\tCCControlStateNormal", "contents": "CCControlStateNormal"},
{ "trigger": "CCControlStateHighlighted\tCCControlStateHighlighted", "contents": "CCControlStateHighlighted"},
{ "trigger": "CCControlStateDisabled\tCCControlStateDisabled", "contents": "CCControlStateDisabled"},
{ "trigger": "CCControlStateSelected\tCCControlStateSelected", "contents": "CCControlStateSelected"},
{ "trigger": "kKeyboardReturnTypeDefault\tkKeyboardReturnTypeDefault", "contents": "kKeyboardReturnTypeDefault"},
{ "trigger": "kKeyboardReturnTypeDone\tkKeyboardReturnTypeDone", "contents": "kKeyboardReturnTypeDone"},
{ "trigger": "kKeyboardReturnTypeSend\tkKeyboardReturnTypeSend", "contents": "kKeyboardReturnTypeSend"},
{ "trigger": "kKeyboardReturnTypeSearch\tkKeyboardReturnTypeSearch", "contents": "kKeyboardReturnTypeSearch"},
{ "trigger": "kKeyboardReturnTypeGo\tkKeyboardReturnTypeGo", "contents": "kKeyboardReturnTypeGo"},
{ "trigger": "kEditBoxInputModeAny\tkEditBoxInputModeAny", "contents": "kEditBoxInputModeAny"},
{ "trigger": "kEditBoxInputModeEmailAddr\tkEditBoxInputModeEmailAddr", "contents": "kEditBoxInputModeEmailAddr"},
{ "trigger": "kEditBoxInputModeNumeric\tkEditBoxInputModeNumeric", "contents": "kEditBoxInputModeNumeric"},
{ "trigger": "kEditBoxInputModePhoneNumber\tkEditBoxInputModePhoneNumber", "contents": "kEditBoxInputModePhoneNumber"},
{ "trigger": "kEditBoxInputModeUrl\tkEditBoxInputModeUrl", "contents": "kEditBoxInputModeUrl"},
{ "trigger": "kEditBoxInputModeDecimal\tkEditBoxInputModeDecimal", "contents": "kEditBoxInputModeDecimal"},
{ "trigger": "kEditBoxInputModeSingleLine\tkEditBoxInputModeSingleLine", "contents": "kEditBoxInputModeSingleLine"},
{ "trigger": "kEditBoxInputFlagPassword\tkEditBoxInputFlagPassword", "contents": "kEditBoxInputFlagPassword"},
{ "trigger": "kEditBoxInputFlagSensitive\tkEditBoxInputFlagSensitive", "contents": "kEditBoxInputFlagSensitive"},
{ "trigger": "kEditBoxInputFlagInitialCapsWord\tkEditBoxInputFlagInitialCapsWord", "contents": "kEditBoxInputFlagInitialCapsWord"},
{ "trigger": "kEditBoxInputFlagInitialCapsSentence\tkEditBoxInputFlagInitialCapsSentence", "contents": "kEditBoxInputFlagInitialCapsSentence"},
{ "trigger": "kEditBoxInputFlagInitialCapsAllCharacters\tkEditBoxInputFlagInitialCapsAllCharacters", "contents": "kEditBoxInputFlagInitialCapsAllCharacters"},
{ "trigger": "CCStoreReceiptVerifyModeNone\tCCStoreReceiptVerifyModeNone", "contents": "CCStoreReceiptVerifyModeNone"},
{ "trigger": "CCStoreReceiptVerifyModeDevice\tCCStoreReceiptVerifyModeDevice", "contents": "CCStoreReceiptVerifyModeDevice"},
{ "trigger": "CCStoreReceiptVerifyModeServer\tCCStoreReceiptVerifyModeServer", "contents": "CCStoreReceiptVerifyModeServer"},
{ "trigger": "CCStoreReceiptVerifyStatusUnknownError\tCCStoreReceiptVerifyStatusUnknownError", "contents": "CCStoreReceiptVerifyStatusUnknownError"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidReceipt\tCCStoreReceiptVerifyStatusInvalidReceipt", "contents": "CCStoreReceiptVerifyStatusInvalidReceipt"},
{ "trigger": "CCStoreReceiptVerifyStatusRequestFailed\tCCStoreReceiptVerifyStatusRequestFailed", "contents": "CCStoreReceiptVerifyStatusRequestFailed"},
{ "trigger": "CCStoreReceiptVerifyStatusInvalidResult\tCCStoreReceiptVerifyStatusInvalidResult", "contents": "CCStoreReceiptVerifyStatusInvalidResult"},
{ "trigger": "CCStoreReceiptVerifyStatusNone\tCCStoreReceiptVerifyStatusNone", "contents": "CCStoreReceiptVerifyStatusNone"},
{ "trigger": "CCStoreReceiptVerifyStatusOK\tCCStoreReceiptVerifyStatusOK", "contents": "CCStoreReceiptVerifyStatusOK"},
{ "trigger": "kCCHTTPRequestMethodGET\tkCCHTTPRequestMethodGET", "contents": "kCCHTTPRequestMethodGET"},
{ "trigger": "kCCHTTPRequestMethodPOST\tkCCHTTPRequestMethodPOST", "contents": "kCCHTTPRequestMethodPOST"},
{ "trigger": "kCCHTTPRequestAcceptEncodingIdentity\tkCCHTTPRequestAcceptEncodingIdentity", "contents": "kCCHTTPRequestAcceptEncodingIdentity"},
{ "trigger": "kCCHTTPRequestAcceptEncodingGzip\tkCCHTTPRequestAcceptEncodingGzip", "contents": "kCCHTTPRequestAcceptEncodingGzip"},
{ "trigger": "kCCHTTPRequestAcceptEncodingDeflate\tkCCHTTPRequestAcceptEncodingDeflate", "contents": "kCCHTTPRequestAcceptEncodingDeflate"},
{ "trigger": "kCCHTTPRequestStateIdle\tkCCHTTPRequestStateIdle", "contents": "kCCHTTPRequestStateIdle"},
{ "trigger": "kCCHTTPRequestStateInProgress\tkCCHTTPRequestStateInProgress", "contents": "kCCHTTPRequestStateInProgress"},
{ "trigger": "kCCHTTPRequestStateCompleted\tkCCHTTPRequestStateCompleted", "contents": "kCCHTTPRequestStateCompleted"},
{ "trigger": "kCCHTTPRequestStateCancelled\tkCCHTTPRequestStateCancelled", "contents": "kCCHTTPRequestStateCancelled"},
{ "trigger": "kCCHTTPRequestStateCleared\tkCCHTTPRequestStateCleared", "contents": "kCCHTTPRequestStateCleared"},
{ "trigger": "kCCNetworkStatusNotReachable\tkCCNetworkStatusNotReachable", "contents": "kCCNetworkStatusNotReachable"},
{ "trigger": "kCCNetworkStatusReachableViaWiFi\tkCCNetworkStatusReachableViaWiFi", "contents": "kCCNetworkStatusReachableViaWiFi"},
{ "trigger": "kCCNetworkStatusReachableViaWWAN\tkCCNetworkStatusReachableViaWWAN", "contents": "kCCNetworkStatusReachableViaWWAN"},
{ "trigger": "SINGLE_FRAME\tSINGLE_FRAME", "contents": "SINGLE_FRAME"},
{ "trigger": "ANIMATION_NO_LOOP\tANIMATION_NO_LOOP", "contents": "ANIMATION_NO_LOOP"},
{ "trigger": "ANIMATION_TO_LOOP_FRONT\tANIMATION_TO_LOOP_FRONT", "contents": "ANIMATION_TO_LOOP_FRONT"},
{ "trigger": "ANIMATION_TO_LOOP_BACK\tANIMATION_TO_LOOP_BACK", "contents": "ANIMATION_TO_LOOP_BACK"},
{ "trigger": "ANIMATION_LOOP_FRONT\tANIMATION_LOOP_FRONT", "contents": "ANIMATION_LOOP_FRONT"},
{ "trigger": "ANIMATION_LOOP_BACK\tANIMATION_LOOP_BACK", "contents": "ANIMATION_LOOP_BACK"},
{ "trigger": "ANIMATION_MAX\tANIMATION_MAX", "contents": "ANIMATION_MAX"},
{ "trigger": "TWEEN_EASING_MIN\tTWEEN_EASING_MIN", "contents": "TWEEN_EASING_MIN"},
{ "trigger": "Linear\tLinear", "contents": "Linear"},
{ "trigger": "Sine_EaseIn\tSine_EaseIn", "contents": "Sine_EaseIn"},
{ "trigger": "Sine_EaseInOut\tSine_EaseInOut", "contents": "Sine_EaseInOut"},
{ "trigger": "Sine_EaseOut\tSine_EaseOut", "contents": "Sine_EaseOut"},
{ "trigger": "Quad_EaseIn\tQuad_EaseIn", "contents": "Quad_EaseIn"},
{ "trigger": "Quad_EaseOut\tQuad_EaseOut", "contents": "Quad_EaseOut"},
{ "trigger": "Quad_EaseInOut\tQuad_EaseInOut", "contents": "Quad_EaseInOut"},
{ "trigger": "Cubic_EaseIn\tCubic_EaseIn", "contents": "Cubic_EaseIn"},
{ "trigger": "Cubic_EaseOut\tCubic_EaseOut", "contents": "Cubic_EaseOut"},
{ "trigger": "Cubic_EaseInOut\tCubic_EaseInOut", "contents": "Cubic_EaseInOut"},
{ "trigger": "Quart_EaseIn\tQuart_EaseIn", "contents": "Quart_EaseIn"},
{ "trigger": "Quart_EaseOut\tQuart_EaseOut", "contents": "Quart_EaseOut"},
{ "trigger": "Quart_EaseInOut\tQuart_EaseInOut", "contents": "Quart_EaseInOut"},
{ "trigger": "Quint_EaseIn\tQuint_EaseIn", "contents": "Quint_EaseIn"},
{ "trigger": "Quint_EaseOut\tQuint_EaseOut", "contents": "Quint_EaseOut"},
{ "trigger": "Quint_EaseInOut\tQuint_EaseInOut", "contents": "Quint_EaseInOut"},
{ "trigger": "Expo_EaseIn\tExpo_EaseIn", "contents": "Expo_EaseIn"},
{ "trigger": "Expo_EaseOut\tExpo_EaseOut", "contents": "Expo_EaseOut"},
{ "trigger": "Expo_EaseInOut\tExpo_EaseInOut", "contents": "Expo_EaseInOut"},
{ "trigger": "Circ_EaseIn\tCirc_EaseIn", "contents": "Circ_EaseIn"},
{ "trigger": "Circ_EaseOut\tCirc_EaseOut", "contents": "Circ_EaseOut"},
{ "trigger": "Circ_EaseInOut\tCirc_EaseInOut", "contents": "Circ_EaseInOut"},
{ "trigger": "Elastic_EaseIn\tElastic_EaseIn", "contents": "Elastic_EaseIn"},
{ "trigger": "Elastic_EaseOut\tElastic_EaseOut", "contents": "Elastic_EaseOut"},
{ "trigger": "Elastic_EaseInOut\tElastic_EaseInOut", "contents": "Elastic_EaseInOut"},
{ "trigger": "Back_EaseIn\tBack_EaseIn", "contents": "Back_EaseIn"},
{ "trigger": "Back_EaseOut\tBack_EaseOut", "contents": "Back_EaseOut"},
{ "trigger": "Back_EaseInOut\tBack_EaseInOut", "contents": "Back_EaseInOut"},
{ "trigger": "Bounce_EaseIn\tBounce_EaseIn", "contents": "Bounce_EaseIn"},
{ "trigger": "Bounce_EaseOut\tBounce_EaseOut", "contents": "Bounce_EaseOut"},
{ "trigger": "Bounce_EaseInOut\tBounce_EaseInOut", "contents": "Bounce_EaseInOut"},
{ "trigger": "TWEEN_EASING_MAX\tTWEEN_EASING_MAX", "contents": "TWEEN_EASING_MAX"},


		{ "trigger": "cjson_encode()", "contents":       "cjson.encode()"  },
		{ "trigger": "cjson_decode()", "contents":   "cjson.decode()"             },
		{ "trigger": "cjson_encode_sparse_array()", "contents":  "cjson.encode_sparse_array()"    },
		{ "trigger": "cjson_encode_max_depth()", "contents":  "cjson.encode_max_depth()"       },
		{ "trigger": "cjson_decode_max_depth()", "contents":  "cjson.decode_max_depth()"     },
		{ "trigger": "cjson_encode_number_precision()", "contents":   "cjson.encode_number_precision()"  },
		{ "trigger": "cjson_encode_keep_buffer()", "contents":   "cjson.encode_keep_buffer()"        },
		{ "trigger": "cjson_encode_invalid_numbers()", "contents":"cjson.encode_invalid_numbers()"   },
		{ "trigger": "cjson_decode_invalid_numbers()", "contents":  "cjson.decode_invalid_numbers()" },
		{ "trigger": "cjson_new()", "contents":  "cjson.new()" },
		{ "trigger": "zlib_deflate()", "contents":   "zlib.deflate()"   }  ,
		{ "trigger": "zlib_inflate()", "contents":      "zlib.inflate()" }  ,
		{ "trigger": "zlib_version()", "contents":  "zlib.version()"      }  ,
		{}
	]
}


